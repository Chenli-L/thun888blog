<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Thun888</title>
  
  <subtitle>夏日当空,心如深渊 | hzchu.top</subtitle>
  <link href="https://blog.hzchu.top/atom.xml" rel="self"/>
  
  <link href="https://blog.hzchu.top/"/>
  <updated>2024-03-09T19:31:16.000Z</updated>
  <id>https://blog.hzchu.top/</id>
  
  <author>
    <name>thun888</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用Gemini，实现AI摘要</title>
    <link href="https://blog.hzchu.top/2024/%E7%94%A8Gemini%E5%AE%9E%E7%8E%B0AI%E6%91%98%E8%A6%81/"/>
    <id>https://blog.hzchu.top/2024/%E7%94%A8Gemini%E5%AE%9E%E7%8E%B0AI%E6%91%98%E8%A6%81/</id>
    <published>2024-03-09T19:31:16.000Z</published>
    <updated>2024-03-09T19:31:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很久之前，我网上surfing的时候发现好多网站都有「AI摘要」，了解了一下发现是「<a href="https://docs_s.tianli0.top/">TianliGPT</a>」，好是好，<del>但两位数的价格还是打动不了我当时勉强三位数的存款。</del>所以，我使用了一种笨方法<del>（为了撑场子不考虑太多）</del>，手动向「BingAI」发送摘要文本，获取摘要后存储在kv中，通过cfw返回。可行，但太痛苦了（这也是它叫DolGPT的原因之一），前几天看到Gemini开放了api可以免费调用，这不直接起飞<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatrainbow.png"/></span></p><div class="tag-plugin colorful note" color="yellow"><div class="body"><p>注意：Stellar在新版本（1.27.0或者是#88f16fc）中将AI摘要从Post-Abstract-AI改为了Post-Summary-AI，目前暂无计划同步至新版本，在新版中使用需自行修改主题或前端程序代码。</p></div></div><h2 id="获取GEMINI-KEY"><a href="#获取GEMINI-KEY" class="headerlink" title="获取GEMINI_KEY"></a>获取GEMINI_KEY</h2><p>首先登录<a href="https://ai.google.dev/">ai.google.dev</a>，左上角点击<code>Get API key</code>，再在中间点<code>Create API key</code>，随便选个项目即可</p><details class="tag-plugin colorful folding" color="yellow"><summary><span>没听懂就看图片吧</span></summary><div class="body"><p><img src="https://onep.hzchu.top/mount/pic/2024/03/09/65ec523988ddc.webp" alt="Snipaste_2024-03-09_10-17-37.webp"><br><img src="https://onep.hzchu.top/mount/pic/2024/03/09/65ec523fecbfa.webp" alt="Snipaste_2024-03-09_10-18-14.webp"><br><img src="https://onep.hzchu.top/mount/pic/2024/03/09/65ec523933f1c.webp" alt="Snipaste_2024-03-09_10-22-37.webp"><br><img src="https://onep.hzchu.top/mount/pic/2024/03/09/65ec523a4e8b3.webp" alt="Snipaste_2024-03-09_10-23-59.webp"><br><img src="https://onep.hzchu.top/mount/pic/2024/03/09/65ec52371bf18.webp" alt="Snipaste_2024-03-09_10-22-25.webp"></p></div></details><h2 id="后端程序"><a href="#后端程序" class="headerlink" title="后端程序"></a>后端程序</h2><p>因为Stellar已经配置了TianliGPT的css了，所以我也懒得另起炉灶，直接按TianliGPT的格式返回，所以理论上讲和其它的使用TianliGPT的服务也兼容</p><p>仓库：<a href="https://github.com/thun888/ai-summary/">thun888&#x2F;ai-summary</a></p><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/thun888/ai-summary"><img src="https://github-readme-stats.xaoxuu.com/api/pin/?username=thun888&repo=ai-summary&&show_owner=true"/></a></div><p>新建一个<code>Cloudflare Worker</code>，复制<a href="https://github.com/thun888/ai-summary/blob/master/src/index.js">&#x2F;src&#x2F;index.js</a>的代码粘贴进去</p><p>随后修改环境变量，填入可信来源（即只有这个域名才能调用ai摘要，如不需要可设置为<code>*</code>）（<code>ALLOWED_ORIGINS</code>）以及你的key（<code>GEMINI_KEY</code>）</p><p><img src="https://onep.hzchu.top/mount/pic/2024/03/09/65ec508eb0684.webp" alt="1709985925369.webp"></p><p>接着新建一个kv，并绑定到程序上</p><blockquote><p>kv的名字随意，但<strong>Variable name</strong> 必须为 <code>KV</code></p></blockquote><p><img src="https://onep.hzchu.top/mount/pic/2024/03/09/65ec565254bdb.webp" alt="1709987402272.webp"></p><p>最后可以尝试访问，有输出且刷新不变即为成功</p><p><img src="https://onep.hzchu.top/mount/pic/2024/03/09/65ec54a03e7a9.webp" alt="1709986972903.webp"></p><div class="tag-plugin colorful note" color="yellow"><div class="body"><p>该程序只实现了ai摘要生成，对于其他网站矩阵之类的功能，其实自己用哪里要得上这么多功能嘛</p></div></div><h2 id="前端程序修改"><a href="#前端程序修改" class="headerlink" title="前端程序修改"></a>前端程序修改</h2><div class="tag-plugin colorful note" color="red"><div class="body"><p>警告：因为一开始使用新版本调试时，遇见了程序原有的bug，所以我干脆滚到了0.13版本进行修改，因此在使用新版本时，极大概率出现问题，自行修改吧</p></div></div><p>理论上，直接替换summary.tianli0.top为你对应域名即可。</p><p>这是我修改后的程序，可以参考</p><figure class="highlight js"><figcaption><span>/js/tianli_gpt.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;\n %c Post-Abstract-AI 开源博客文章摘要AI生成工具 %c https://github.com/zhheo/Post-Abstract-AI \n&quot;</span>, <span class="string">&quot;color: #fadfa3; background: #030307; padding:5px 0;&quot;</span>, <span class="string">&quot;background: #fadfa3; padding:5px 0;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tianliGPT</span>(<span class="params">usePjax</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> tianliGPTIsRunning = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">insertAIDiv</span>(<span class="params">selector</span>) &#123;</span><br><span class="line">    <span class="comment">// 首先移除现有的 &quot;post-TianliGPT&quot; 类元素（如果有的话）</span></span><br><span class="line">    <span class="title function_">removeExistingAIDiv</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取目标元素</span></span><br><span class="line">    <span class="keyword">const</span> targetElement = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(selector);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 如果没有找到目标元素，不执行任何操作</span></span><br><span class="line">    <span class="keyword">if</span> (!targetElement) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 创建要插入的HTML元素</span></span><br><span class="line">    <span class="keyword">const</span> aiDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    aiDiv.<span class="property">className</span> = <span class="string">&#x27;post-TianliGPT&#x27;</span>;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">const</span> aiTitleDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    aiTitleDiv.<span class="property">className</span> = <span class="string">&#x27;tianliGPT-title&#x27;</span>;</span><br><span class="line">    aiDiv.<span class="title function_">appendChild</span>(aiTitleDiv);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">const</span> aiIcon = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;i&#x27;</span>);</span><br><span class="line">    aiIcon.<span class="property">className</span> = <span class="string">&#x27;tianliGPT-title-icon&#x27;</span>;</span><br><span class="line">    aiTitleDiv.<span class="title function_">appendChild</span>(aiIcon);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 插入 SVG 图标</span></span><br><span class="line">    aiIcon.<span class="property">innerHTML</span> = <span class="string">`&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;48px&quot; height=&quot;48px&quot; viewBox=&quot;0 0 48 48&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;机器人&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;g id=&quot;&amp;#x673A;&amp;#x5668;&amp;#x4EBA;&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;path d=&quot;M34.717885,5.03561087 C36.12744,5.27055371 37.079755,6.60373651 36.84481,8.0132786 L35.7944,14.3153359 L38.375,14.3153359 C43.138415,14.3153359 47,18.1768855 47,22.9402569 L47,34.4401516 C47,39.203523 43.138415,43.0650727 38.375,43.0650727 L9.625,43.0650727 C4.861585,43.0650727 1,39.203523 1,34.4401516 L1,22.9402569 C1,18.1768855 4.861585,14.3153359 9.625,14.3153359 L12.2056,14.3153359 L11.15519,8.0132786 C10.920245,6.60373651 11.87256,5.27055371 13.282115,5.03561087 C14.69167,4.80066802 16.024865,5.7529743 16.25981,7.16251639 L17.40981,14.0624532 C17.423955,14.1470924 17.43373,14.2315017 17.43948,14.3153359 L30.56052,14.3153359 C30.56627,14.2313867 30.576045,14.1470924 30.59019,14.0624532 L31.74019,7.16251639 C31.975135,5.7529743 33.30833,4.80066802 34.717885,5.03561087 Z M38.375,19.4902885 L9.625,19.4902885 C7.719565,19.4902885 6.175,21.0348394 6.175,22.9402569 L6.175,34.4401516 C6.175,36.3455692 7.719565,37.89012 9.625,37.89012 L38.375,37.89012 C40.280435,37.89012 41.825,36.3455692 41.825,34.4401516 L41.825,22.9402569 C41.825,21.0348394 40.280435,19.4902885 38.375,19.4902885 Z M14.8575,23.802749 C16.28649,23.802749 17.445,24.9612484 17.445,26.3902253 L17.445,28.6902043 C17.445,30.1191812 16.28649,31.2776806 14.8575,31.2776806 C13.42851,31.2776806 12.27,30.1191812 12.27,28.6902043 L12.27,26.3902253 C12.27,24.9612484 13.42851,23.802749 14.8575,23.802749 Z M33.1425,23.802749 C34.57149,23.802749 35.73,24.9612484 35.73,26.3902253 L35.73,28.6902043 C35.73,30.1191812 34.57149,31.2776806 33.1425,31.2776806 C31.71351,31.2776806 30.555,30.1191812 30.555,28.6902043 L30.555,26.3902253 C30.555,24.9612484 31.71351,23.802749 33.1425,23.802749 Z&quot; id=&quot;&amp;#x5F62;&amp;#x72B6;&amp;#x7ED3;&amp;#x5408;&quot; fill=&quot;#444444&quot; fill-rule=&quot;nonzero&quot;&gt;&lt;/path&gt;</span></span><br><span class="line"><span class="string">    &lt;/g&gt;</span></span><br><span class="line"><span class="string">    &lt;/svg&gt;`</span>;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">const</span> aiTitleTextDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    aiTitleTextDiv.<span class="property">className</span> = <span class="string">&#x27;tianliGPT-title-text&#x27;</span>;</span><br><span class="line">    aiTitleTextDiv.<span class="property">textContent</span> = <span class="string">&#x27;AI摘要&#x27;</span>;</span><br><span class="line">    aiTitleDiv.<span class="title function_">appendChild</span>(aiTitleTextDiv);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">const</span> aiTagDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    aiTagDiv.<span class="property">className</span> = <span class="string">&#x27;tianliGPT-tag&#x27;</span>;</span><br><span class="line">    aiTagDiv.<span class="property">id</span> = <span class="string">&#x27;tianliGPT-tag&#x27;</span>;</span><br><span class="line">    aiTagDiv.<span class="property">textContent</span> = <span class="string">&#x27;Gemini&#x27;</span>;</span><br><span class="line">    aiTitleDiv.<span class="title function_">appendChild</span>(aiTagDiv);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">const</span> aiExplanationDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    aiExplanationDiv.<span class="property">className</span> = <span class="string">&#x27;tianliGPT-explanation&#x27;</span>;</span><br><span class="line">    aiExplanationDiv.<span class="property">innerHTML</span> = <span class="string">&#x27;生成中...&#x27;</span> + <span class="string">&#x27;&lt;span class=&quot;blinking-cursor&quot;&gt;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">    aiDiv.<span class="title function_">appendChild</span>(aiExplanationDiv); <span class="comment">// 将 tianliGPT-explanation 插入到 aiDiv，而不是 aiTitleDiv</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 将创建的元素插入到目标元素的顶部</span></span><br><span class="line">    targetElement.<span class="title function_">insertBefore</span>(aiDiv, targetElement.<span class="property">firstChild</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">removeExistingAIDiv</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 查找具有 &quot;post-TianliGPT&quot; 类的元素</span></span><br><span class="line">    <span class="keyword">const</span> existingAIDiv = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.post-TianliGPT&quot;</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 如果找到了这个元素，就从其父元素中删除它</span></span><br><span class="line">    <span class="keyword">if</span> (existingAIDiv) &#123;</span><br><span class="line">      existingAIDiv.<span class="property">parentElement</span>.<span class="title function_">removeChild</span>(existingAIDiv);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> tianliGPT = &#123;</span><br><span class="line">    <span class="comment">//读取文章中的所有文本</span></span><br><span class="line">    <span class="attr">getTitleAndContent</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> title = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line">        <span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(tianliGPT_postSelector);</span><br><span class="line">        <span class="keyword">if</span> (!container) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;[Gemini]找不到文章容器。请尝试将引入的代码放入到文章容器之后。如果本身没有打算使用摘要功能可以忽略此提示。&#x27;</span>);</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> paragraphs = container.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> headings = container.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;h1, h2, h3, h4, h5&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> content = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> h <span class="keyword">of</span> headings) &#123;</span><br><span class="line">          content += h.<span class="property">innerText</span> + <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> p <span class="keyword">of</span> paragraphs) &#123;</span><br><span class="line">          <span class="comment">// 移除包含&#x27;http&#x27;的链接</span></span><br><span class="line">          <span class="keyword">const</span> filteredText = p.<span class="property">innerText</span>.<span class="title function_">replace</span>(<span class="regexp">/https?:\/\/[^\s]+/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">          content += filteredText;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">const</span> combinedText = title + <span class="string">&#x27; &#x27;</span> + content;</span><br><span class="line">        <span class="keyword">let</span> wordLimit = <span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> tianliGPT_wordLimit !== <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">          wordLimit = tianliGPT_wordLimit;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> truncatedText = combinedText.<span class="title function_">slice</span>(<span class="number">0</span>, wordLimit).<span class="title function_">replace</span>(<span class="string">&#x27;本文采用 署名-非商业性使用-相同方式共享 4.0 国际 许可协议，转载请注明出处。&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> truncatedText;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;[Gemini]错误：可能由于一个或多个错误导致没有正常运行，原因出在获取文章容器中的内容失败，或者可能是在文章转换过程中失败。&#x27;</span>, e);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="attr">fetchTianliGPT</span>: <span class="keyword">async</span> <span class="keyword">function</span>(<span class="params">content</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!tianliGPT_key) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;没有获取到key，代码可能没有安装正确。如果你需要在tianli_gpt文件引用前定义tianliGPT_key变量。详细请查看文档。&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    </span><br><span class="line">      <span class="keyword">if</span> (tianliGPT_key === <span class="string">&quot;5Q5mpqRK5DkwT1X9Gi5e&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;请购买 key 使用，如果你能看到此条内容，则说明代码安装正确。&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">var</span> currentPath = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">pathname</span>;</span><br><span class="line">      <span class="keyword">var</span> url = <span class="string">&quot;https://blog.hzchu.top&quot;</span> + currentPath;</span><br><span class="line">      <span class="keyword">if</span> (currentPath === <span class="string">&quot;/friends/&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;欢迎各位申请友链~&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//禁用的路径</span></span><br><span class="line">      disablePaths = [<span class="string">&quot;/big/&quot;</span>];</span><br><span class="line">      <span class="keyword">if</span> (disablePaths.<span class="title function_">includes</span>(currentPath)) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.post-TianliGPT&#x27;</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">          el.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// use get method to avoid CORS check</span></span><br><span class="line">      <span class="keyword">const</span> apiUrl = <span class="string">`https://dolgpt.hzchu.top/?content=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(content)&#125;</span>&amp;key=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(tianliGPT_key)&#125;</span>&amp;url=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(url)&#125;</span>`</span>;</span><br><span class="line">      <span class="keyword">const</span> timeout = <span class="number">20000</span>; <span class="comment">// 设置超时时间（毫秒）</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> controller = <span class="keyword">new</span> <span class="title class_">AbortController</span>();</span><br><span class="line">        <span class="keyword">const</span> timeoutId = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> controller.<span class="title function_">abort</span>(), timeout);</span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(apiUrl, &#123; <span class="attr">signal</span>: controller.<span class="property">signal</span> &#125;);</span><br><span class="line">        <span class="keyword">if</span> (response.<span class="property">ok</span>) &#123;</span><br><span class="line">          <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">          <span class="keyword">if</span> (data[<span class="string">&quot;summary&quot;</span>].<span class="title function_">startsWith</span>(<span class="string">&quot;当前文章&quot;</span>))&#123;</span><br><span class="line">            tianliGPT_typingAnimate = <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> data.<span class="property">summary</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (response.<span class="property">status</span> === <span class="number">402</span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.post-TianliGPT&#x27;</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">              el.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;[Gemini]余额不足，请充值后请求新的文章&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">          <span class="keyword">if</span> (error.<span class="property">name</span> === <span class="string">&#x27;AbortError&#x27;</span>) &#123;</span><br><span class="line">              <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hostname</span> === <span class="string">&#x27;localhost&#x27;</span>) &#123;</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;警告：请勿在本地主机上测试 API 密钥。&#x27;</span>);</span><br><span class="line">                  <span class="keyword">return</span> <span class="string">&#x27;获取文章摘要超时。请勿在本地主机上测试 API 密钥。&#x27;</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;请求超时&#x27;</span>);</span><br><span class="line">                  <span class="keyword">return</span> <span class="string">&#x27;获取文章摘要超时。当你出现这个问题时，可能是key或者绑定的域名不正确。也可能是因为文章过长导致的 AI 运算量过大，您可以稍等一下然后刷新页面重试。&#x27;</span>;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;请求失败：&#x27;</span>, error);</span><br><span class="line">              <span class="keyword">return</span> <span class="string">&#x27;获取文章摘要失败，请稍后再试。&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">  </span><br><span class="line">    <span class="attr">aiShowAnimation</span>: <span class="keyword">function</span> (<span class="params">text</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> element = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.tianliGPT-explanation&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span> (!element) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (tianliGPTIsRunning) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 检查用户是否已定义tianliGPT_typingAnimate并且其值为false</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span> tianliGPT_typingAnimate !== <span class="string">&quot;undefined&quot;</span> &amp;&amp; !tianliGPT_typingAnimate) &#123;</span><br><span class="line">        <span class="comment">// 如果用户已定义tianliGPT_typingAnimate并且其值为false，则立即显示完整文本</span></span><br><span class="line">        element.<span class="property">innerHTML</span> = text;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      tianliGPTIsRunning = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">const</span> typingDelay = <span class="number">25</span>;</span><br><span class="line">      <span class="keyword">const</span> waitingTime = <span class="number">1000</span>;</span><br><span class="line">      <span class="keyword">const</span> punctuationDelayMultiplier = <span class="number">6</span>;</span><br><span class="line">  </span><br><span class="line">      element.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">      element.<span class="property">innerHTML</span> = <span class="string">&quot;生成中...&quot;</span> + <span class="string">&#x27;&lt;span class=&quot;blinking-cursor&quot;&gt;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">let</span> animationRunning = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">let</span> currentIndex = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">let</span> initialAnimation = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">let</span> lastUpdateTime = performance.<span class="title function_">now</span>();</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">const</span> <span class="title function_">animate</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (currentIndex &lt; text.<span class="property">length</span> &amp;&amp; animationRunning) &#123;</span><br><span class="line">          <span class="keyword">const</span> currentTime = performance.<span class="title function_">now</span>();</span><br><span class="line">          <span class="keyword">const</span> timeDiff = currentTime - lastUpdateTime;</span><br><span class="line">  </span><br><span class="line">          <span class="keyword">const</span> letter = text.<span class="title function_">slice</span>(currentIndex, currentIndex + <span class="number">1</span>);</span><br><span class="line">          <span class="keyword">const</span> isPunctuation = <span class="regexp">/[，。！、？,.!?]/</span>.<span class="title function_">test</span>(letter);</span><br><span class="line">          <span class="keyword">const</span> delay = isPunctuation ? typingDelay * punctuationDelayMultiplier : typingDelay;</span><br><span class="line">  </span><br><span class="line">          <span class="keyword">if</span> (timeDiff &gt;= delay) &#123;</span><br><span class="line">            element.<span class="property">innerText</span> = text.<span class="title function_">slice</span>(<span class="number">0</span>, currentIndex + <span class="number">1</span>);</span><br><span class="line">            lastUpdateTime = currentTime;</span><br><span class="line">            currentIndex++;</span><br><span class="line">  </span><br><span class="line">            <span class="keyword">if</span> (currentIndex &lt; text.<span class="property">length</span>) &#123;</span><br><span class="line">              element.<span class="property">innerHTML</span> =</span><br><span class="line">                text.<span class="title function_">slice</span>(<span class="number">0</span>, currentIndex) +</span><br><span class="line">                <span class="string">&#x27;&lt;span class=&quot;blinking-cursor&quot;&gt;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              element.<span class="property">innerHTML</span> = text;</span><br><span class="line">              element.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">              tianliGPTIsRunning = <span class="literal">false</span>;</span><br><span class="line">              observer.<span class="title function_">disconnect</span>();<span class="comment">// 暂停监听</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="title function_">requestAnimationFrame</span>(animate);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 使用IntersectionObserver对象优化ai离开视口后暂停的业务逻辑，提高性能</span></span><br><span class="line">      <span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(<span class="function">(<span class="params">entries</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> isVisible = entries[<span class="number">0</span>].<span class="property">isIntersecting</span>;</span><br><span class="line">        animationRunning = isVisible; <span class="comment">// 标志变量更新</span></span><br><span class="line">        <span class="keyword">if</span> (animationRunning &amp;&amp; initialAnimation) &#123;</span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">requestAnimationFrame</span>(animate);</span><br><span class="line">          &#125;, <span class="number">200</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, &#123; <span class="attr">threshold</span>: <span class="number">0</span> &#125;);</span><br><span class="line">      <span class="keyword">let</span> post_ai = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.post-TianliGPT&#x27;</span>);</span><br><span class="line">      observer.<span class="title function_">observe</span>(post_ai);<span class="comment">//启动新监听</span></span><br><span class="line">  </span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">runTianliGPT</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">insertAIDiv</span>(tianliGPT_postSelector);</span><br><span class="line">    <span class="keyword">const</span> content = tianliGPT.<span class="title function_">getTitleAndContent</span>();</span><br><span class="line">    <span class="keyword">if</span> (content) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[Gemini]本次提交的内容为：&#x27;</span> + content);</span><br><span class="line">      <span class="comment">// 获取字数</span></span><br><span class="line">      wordcount = content.<span class="property">length</span>;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[Gemini]本次提交的字数为：&#x27;</span> + wordcount);</span><br><span class="line">    &#125;</span><br><span class="line">    tianliGPT.<span class="title function_">fetchTianliGPT</span>(content).<span class="title function_">then</span>(<span class="function"><span class="params">summary</span> =&gt;</span> &#123;</span><br><span class="line">      tianliGPT.<span class="title function_">aiShowAnimation</span>(summary);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">checkURLAndRun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> tianliGPT_postURL === <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">      <span class="title function_">runTianliGPT</span>(); <span class="comment">// 如果没有设置自定义 URL，则直接执行 runTianliGPT() 函数</span></span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> <span class="title function_">wildcardToRegExp</span> = (<span class="params">s</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;^&#x27;</span> + s.<span class="title function_">split</span>(<span class="regexp">/\*+/</span>).<span class="title function_">map</span>(regExpEscape).<span class="title function_">join</span>(<span class="string">&#x27;.*&#x27;</span>) + <span class="string">&#x27;$&#x27;</span>);</span><br><span class="line">      &#125;;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">const</span> <span class="title function_">regExpEscape</span> = (<span class="params">s</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> s.<span class="title function_">replace</span>(<span class="regexp">/[|\\&#123;&#125;()[\]^$+*?.]/g</span>, <span class="string">&#x27;\\$&amp;&#x27;</span>);</span><br><span class="line">      &#125;;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">const</span> urlPattern = <span class="title function_">wildcardToRegExp</span>(tianliGPT_postURL);</span><br><span class="line">      <span class="keyword">const</span> currentURL = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (urlPattern.<span class="title function_">test</span>(currentURL)) &#123;</span><br><span class="line">        <span class="title function_">runTianliGPT</span>(); <span class="comment">// 如果当前 URL 符合用户设置的 URL，则执行 runTianliGPT() 函数</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Gemini：因为不符合自定义的链接规则，我决定不执行摘要功能。&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Gemini：我没有看懂你编写的自定义链接规则，所以我决定不执行摘要功能&quot;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (usePjax) &#123;</span><br><span class="line">    <span class="title function_">checkURLAndRun</span>();</span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;DOMContentLoaded&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title function_">checkURLAndRun</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">tianliGPT</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;pjax:complete&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">tianliGPT</span>(<span class="literal">true</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在日后合并到新版本后，我打算再支持下语音朗读，目前计划是用谷歌翻译的接口来实现，用我自己之前留下来的服务的话向<code>gtts-api.hzchu.top/?text=xxx</code>发送请求即可（目前无CORS限制）</p><h2 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h2><p><img src="https://onep.hzchu.top/mount/pic/2024/03/09/65ec592aba762.webp" alt="1709988135166.webp"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>其表现我个人感觉跌宕起伏，有时不如ChatGPT，有时有吊打Bing，反正免费的要什么自行车<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatmeltthumb.png"/></span></p><p>记得之前看还叫Bard，还不支持中文，没想到现在这么厉害了<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatreachrev.png"/></span></p><p>文章一时兴起写的，截了一堆素材没用上，以后再润色下</p>]]></content>
    
    
    <summary type="html">使用Cloudflare Worker，借助Gemini，平替TianliGPT</summary>
    
    
    
    
    <category term="Blog" scheme="https://blog.hzchu.top/tags/Blog/"/>
    
    <category term="Stellar" scheme="https://blog.hzchu.top/tags/Stellar/"/>
    
  </entry>
  
  <entry>
    <title>记一次排查js文件后门</title>
    <link href="https://blog.hzchu.top/2024/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%8E%92%E6%9F%A5js%E6%96%87%E4%BB%B6%E5%90%8E%E9%97%A8/"/>
    <id>https://blog.hzchu.top/2024/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%8E%92%E6%9F%A5js%E6%96%87%E4%BB%B6%E5%90%8E%E9%97%A8/</id>
    <published>2024-03-08T20:49:57.000Z</published>
    <updated>2024-03-08T20:49:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>今天调试博客时猛地发现电脑卡的不像样，排除后发现是控制台的问题，再一看控制台里全是网络请求，这可不是好事啊</p><p><img src="https://onep.hzchu.top/mount/pic/2024/03/08/65eb0a705f003.webp"></p><p><img src="https://onep.hzchu.top/mount/pic/2024/03/08/65eb0a8cca150.webp" alt="Snipaste_2024-03-08_20-40-38.webp"></p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>起初，因为我回档了所有更改依然有这种情况，我猜是浏览器插件问题，但关闭了所有插件后依然如此</p><p>然后，我查看了异常js引入的时间点，并往上挨个检查</p><p><img src="https://onep.hzchu.top/mount/pic/2024/03/08/65eb0b8bee889.webp" alt="Snipaste_2024-03-08_20-37-33.webp"></p><p>最初的异常引入在<code>sdk.html</code>，随后在js文件里依次搜索，最后定位到<code>lazyload.min.js</code></p><p><img src="https://onep.hzchu.top/mount/pic/2024/03/08/65eb0c1adbc32.webp" alt="Snipaste_2024-03-08_20-37-04.webp"></p><p>但是嘛，当我<code>在新标签页里打开</code>时，显示的又是正常的js，对比发现请求ip不同，在改hosts后成功获取到带后门的js文件</p><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p><strong>不正常的</strong></p><p><img src="https://onep.hzchu.top/mount/pic/2024/03/08/65eb0c872af1b.webp" alt="Snipaste_2024-03-08_20-39-35.webp"></p>    </div>    <div class="cell" style="">    <p><strong>正常的</strong></p><p><img src="https://onep.hzchu.top/mount/pic/2024/03/08/65eb0c89ba6b9.webp" alt="Snipaste_2024-03-08_20-39-25.webp"></p>    </div>    </div><p><img src="https://onep.hzchu.top/mount/pic/2024/03/08/65eb0c88232e2.webp" alt="Snipaste_2024-03-08_20-42-50.webp"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p>将<code>https://cdn.bootcdn.net/ajax/libs</code>全部替换为<code>https://cdn.staticfile.net</code></p>    </div>    <div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/03/08/65eb0d141a263.webp" alt="Snipaste_2024-03-08_20-48-17.webp"></p>    </div>    </div>]]></content>
    
    
    <summary type="html">被bootcdn捅了一刀</summary>
    
    
    
    
    <category term="Blog" scheme="https://blog.hzchu.top/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>把Tg Channel接入到Stellar时间线</title>
    <link href="https://blog.hzchu.top/2024/%E6%8A%8ATg-Channel%E6%8E%A5%E5%85%A5%E5%88%B0Stellar%E6%97%B6%E9%97%B4%E7%BA%BF/"/>
    <id>https://blog.hzchu.top/2024/%E6%8A%8ATg-Channel%E6%8E%A5%E5%85%A5%E5%88%B0Stellar%E6%97%B6%E9%97%B4%E7%BA%BF/</id>
    <published>2024-02-25T13:19:01.000Z</published>
    <updated>2024-02-25T14:43:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前调CW时发现<a href="https://blog.eurekac.cn/">Cyan</a>加上了TG频道说说，因为已经有<code>Memos</code>了所以没有在意，昨天在<a href="https://xaoxuu.com/wiki/stellar/articles.html">Stellar 探索号</a>看到有<a href="https://blog.lvbyte.top/posts/11214/">stellar主题集成Telegram Channel说说</a>的教程，忽然灵光一闪，这拿来放草稿&#x2F;想法挺合适的嘛</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>首先新建一个频道，并记下频道ID</p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/25/65dad341bacfd.webp" alt="1708839745065.webp"></p><p>新建一个<code>Cloudflare Worker</code>，复制下面的代码粘贴进去</p><blockquote><p>为了兼容Stellar的时间线，我在lvbyte的基础上改了点代码</p></blockquote><script src="https://faster-gist.hzchu.top/thun888/67d8cdf1296d8dc252e9fc5607e4daf6.js"></script><p>并修改顶部配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">ChannelNameList</span> = [<span class="string">&#x27;thun888sthinks&#x27;</span>]; <span class="comment">//频道ID，可添加多个</span></span><br><span class="line"><span class="keyword">const</span> deniedRegion = [<span class="string">&quot;&quot;</span>]; 屏蔽区域，如<span class="variable constant_">CN</span>,<span class="variable constant_">US</span></span><br><span class="line"><span class="keyword">const</span> baseproxyurl=<span class="string">&quot;https://get-tg-channel-api.hzchu.top/?proxy=&quot;</span> <span class="comment">//将中间域名替换为你为worker绑定的域名</span></span><br></pre></td></tr></table></figure><p>随后按照使用Memos时间线形式使用即可</p><h2 id="可传入参数"><a href="#可传入参数" class="headerlink" title="可传入参数"></a>可传入参数</h2><table><thead><tr><th>参数</th><th>参数名</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>cid</td><td>频道id</td><td>0</td><td>指在代码里配置的第n个频道，并不是上文所述频道id</td></tr><tr><td>mid</td><td>信息id</td><td>&#x2F;</td><td>指定后只返回该信息，信息id可在发送后查看</td></tr><tr><td><strong>tag</strong></td><td>标签名</td><td>DefaultTag</td><td>筛选传入的标签返回</td></tr><tr><td>limit</td><td>获取条数</td><td>&#x2F;</td><td>&#x2F;</td></tr><tr><td>startbefore</td><td>获取之前信息</td><td>&#x2F;</td><td>如果有一条信息<code>id</code>为<code>80</code>的信息，那么当传入<code>80</code>时将返回这条信息之前的所有信息</td></tr><tr><td>showtag</td><td>是否展示标签</td><td>true</td><td>&#x2F;</td></tr><tr><td>showview</td><td>是否展示访问量</td><td>false</td><td>启用时会在末尾附上(views:number)</td></tr></tbody></table><blockquote><p>众所周知，<code>0</code>是第一个数字，所以cid传入<code>0</code>时表示获取第1个频道</p><p> tag为空时默认返回#DefaultTag的数据，可在代码中自行更改</p><p><code>tag</code>原版是<code>#SFCN</code>,一开始没想明白是什么意思，现在明白了：Suitable For China，可以有别的玩法o(￣▽￣)ｄ</p></blockquote><h2 id="在Stellar中的使用"><a href="#在Stellar中的使用" class="headerlink" title="在Stellar中的使用"></a>在Stellar中的使用</h2><div class="tag-plugin tabs" align="center"id="tab_7"><div class="nav-tabs"><div class="tab active"><a href="#tab_7-1">在独立页面内使用</a></div><div class="tab"><a href="#tab_7-2">添加为小部件</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_7-1"><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <div class="tag-plugin timeline stellar-memos-api" api="https://get-tg-channel-api.hzchu.top/?tag=DTA&limit=3" user="thun888sthinks"></div>    </div>    <div class="cell" style="">    <p><strong>代码：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline user:thun888sthinks api:https://get-tg-channel-api.hzchu.top/?tag=DTA&amp;limit=3 type:memos %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><p>user为频道ID，api为你为CFW绑定的域名，type填memos</p><p>碍于篇幅限制，只展示前3条</p>    </div>    </div></div><div class="tab-pane" id="tab_7-2"><figure class="highlight yaml"><figcaption><span>/source/_data/widgets.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">timeline:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">timeline</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">近期动态</span></span><br><span class="line">  <span class="attr">api:</span> <span class="string">https://get-tg-channel-api.hzchu.top/?tag=DTA&amp;limit=3</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">memos</span></span><br><span class="line">  <span class="attr">hide:</span> <span class="string">user,footer</span></span><br></pre></td></tr></table></figure></div></div></div><h2 id="其它用法"><a href="#其它用法" class="headerlink" title="其它用法"></a>其它用法</h2><div class="tag-plugin tabs" align="center"id="tab_8"><div class="nav-tabs"><div class="tab active"><a href="#tab_8-1">获取其它频道</a></div><div class="tab"><a href="#tab_8-2">指定获取某条信息</a></div><div class="tab"><a href="#tab_8-3">展示访问量</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_8-1"><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <div class="tag-plugin timeline stellar-memos-api" api="https://get-tg-channel-api.hzchu.top/?cid=1&tag=DTA&limit=3" user="Thun888sDraftArticles"></div>    </div>    <div class="cell" style="">    <p><strong>代码：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline user:Thun888sDraftArticles api:https://get-tg-channel-api.hzchu.top/?cid=1&amp;tag=DTA&amp;limit=3 type:memos %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure>    </div>    </div></div><div class="tab-pane" id="tab_8-2"><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <div class="tag-plugin timeline stellar-memos-api" api="https://get-tg-channel-api.hzchu.top/?cid=1&tag=Test&mid=52&showtag=false" user="Thun888sDraftArticles"></div>    </div>    <div class="cell" style="">    <p><strong>代码：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline user:Thun888sDraftArticles api:https://get-tg-channel-api.hzchu.top/?cid=1&amp;tag=Test&amp;mid=52&amp;showtag=false type:memos %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><p>可以用在很多地方获取某些信息，作为某种接口来使用。在这一基础上，你甚至可以修改代码，改为只返回图片，在某种意义上实现图床的效果，不过滥用可不太好啊<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatpolice.png"/></span></p>    </div>    </div></div><div class="tab-pane" id="tab_8-3"><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <div class="tag-plugin timeline stellar-memos-api" api="https://get-tg-channel-api.hzchu.top/?cid=1&tag=Test&showview=true" user="Thun888sDraftArticles"></div>    </div>    <div class="cell" style="">    <p><strong>代码：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline user:Thun888sDraftArticles api:https://get-tg-channel-api.hzchu.top/?cid=1&amp;tag=Test&amp;showview=true type:memos %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure>    </div>    </div></div></div></div><p>相关配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">ChannelNameList</span> = [<span class="string">&#x27;thun888sthinks&#x27;</span>,<span class="string">&#x27;Thun888sDraftArticles&#x27;</span>];</span><br></pre></td></tr></table></figure><h2 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h2><ul><li><input checked="" disabled="" type="checkbox"> 可在请求时选择过滤哪个tag</li><li><input checked="" disabled="" type="checkbox"> 完善Emoji支持</li><li><input checked="" disabled="" type="checkbox"> 前端传入标签名</li><li><input checked="" disabled="" type="checkbox"> 可选显示标签名及访问量</li><li><input checked="" disabled="" type="checkbox"> 获取指定信息</li><li><input checked="" disabled="" type="checkbox"> 多频道支持</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>它可以使静态博客进一步动态化，加强可玩性，也可在很多地方使用。</p><p>如果你有一些像<code>多频道融合</code>，<code>多标签获取</code>的功能建议，那就大可不必了，毕竟它一开始只是一个说说程序啊<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatrainbow.png"/></span></p>]]></content>
    
    
    <summary type="html">使用Cloudflare Worker，获取Tg频道内容，并接入到Stellar时间线</summary>
    
    
    
    
    <category term="Stellar" scheme="https://blog.hzchu.top/tags/Stellar/"/>
    
  </entry>
  
  <entry>
    <title>使用Homebox实现家用物品管理</title>
    <link href="https://blog.hzchu.top/2024/%E4%BD%BF%E7%94%A8Homebox%E5%AE%9E%E7%8E%B0%E5%AE%B6%E7%94%A8%E7%89%A9%E5%93%81%E7%AE%A1%E7%90%86/"/>
    <id>https://blog.hzchu.top/2024/%E4%BD%BF%E7%94%A8Homebox%E5%AE%9E%E7%8E%B0%E5%AE%B6%E7%94%A8%E7%89%A9%E5%93%81%E7%AE%A1%E7%90%86/</id>
    <published>2024-02-12T22:41:07.000Z</published>
    <updated>2024-02-17T09:30:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很久之前，家里面有三把电动螺丝刀，然而前些阵子我想找一把来用都得找半天……  <span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatcaged.png"/></span></p><p>假期回家，桌面太乱了一直被我妈批斗…… <span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatflip.png"/></span></p><p>思来想去这样也不行啊，上网找一下，发现了「<a href="https://d.hzchu.top/9x7up">Homebox</a>」这个程序，开始干活吧。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>仓库中也有二进制文件，我这里直接用Docker部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Run the image</span></span><br><span class="line">$ docker run -d \</span><br><span class="line">  --name homebox \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  --publish 3100:7745 \</span><br><span class="line">  --<span class="built_in">env</span> TZ=Europe/Bucharest \</span><br><span class="line">  --volume /path/to/data/folder/:/data \</span><br><span class="line">  ghcr.io/hay-kot/homebox:latest</span><br></pre></td></tr></table></figure><p>或用<code>Docker-Compose</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.4&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">homebox:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/hay-kot/homebox:latest</span></span><br><span class="line"><span class="comment">#   image: ghcr.io/hay-kot/homebox:latest-rootless</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">homebox</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">HBOX_LOG_LEVEL=info</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">HBOX_LOG_FORMAT=text</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">HBOX_WEB_MAX_UPLOAD_SIZE=10</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">homebox-data:/data/</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3100</span><span class="string">:7745</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">   <span class="attr">homebox-data:</span></span><br><span class="line">     <span class="attr">driver:</span> <span class="string">local</span></span><br></pre></td></tr></table></figure><p>因为还有可能给家里人用，干脆就nginx一条龙服务安排上，搭配家里面ADG上dns重写，家里人直接访问<code>wms.hzchu.top</code>就ok了</p><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0304ed4e06.webp" alt="1708142670501.webp"></p>    </div>    <div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d039c6a395f.webp" alt="1708145094118.webp"></p>    </div>    </div><blockquote><p>部署完成进去后注册一个账号登录即可</p></blockquote><h2 id="HomeBox简单介绍"><a href="#HomeBox简单介绍" class="headerlink" title="HomeBox简单介绍"></a>HomeBox简单介绍</h2><p>知道它的功能才好干活嘛</p><p>相比于「GreaterWMS」，「ModernWMS」等专门用于仓库管理的软件，「<a href="https://github.com/hay-kot/homebox">Homebox</a>」主打一个家用，因此它的操作也简单不少，在进去后可以看到这样的页面</p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0714ba9aca.webp" alt="1708159306854.webp"></p><h3 id="Create–创建"><a href="#Create–创建" class="headerlink" title="Create–创建"></a>Create–创建</h3><p>在点开那个<mark class="tag-plugin colorful mark" color="green">抹茶绿</mark>的按钮后，可以看到里面包括 <code>Item/Asset</code>,<code>Location</code>,<code>Label</code> 三个选项</p><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p><strong>Item&#x2F;Asset：</strong><code>新建物品</code>，即存入物品相关信息到程序里，里面包括以下填充项</p><blockquote><p>在填写完成后，若只新建单个物品，则会跳转至对应物品详情，可以做详细修改</p></blockquote>    </div>    <div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d079ec36954.webp" alt="1708161509640.webp"></p>    </div>    </div><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p><strong>Location：</strong> <code>新建位置</code>，即存入某个物品存放处（如书桌）的相关信息到程序里，里面包括以下填充项</p><p>在“父位置”中，可以设置其它已新建的”位置“，表示该位置属于某位置，比如这样<br><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d07cd0526a0.webp" alt="1708162255778.webp"></p>    </div>    <div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d07c7458c53.webp" alt="1708162163736.webp"></p>    </div>    </div><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p><strong>Label：</strong><code>新建类别</code>，即存入某个物品类别（如电子产品）的相关信息到程序里，里面包括以下填充项</p>    </div>    <div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d07d6a352db.webp" alt="1708162409464.webp"></p>    </div>    </div><h3 id="Home–主页"><a href="#Home–主页" class="headerlink" title="Home–主页"></a>Home–主页</h3><p>在加载完成时便是主页了，图片上面有，主要显示了<code>物品总金额</code>，<code>物品、位置、类别总数</code>，<code>近期添加的5个物品</code>，<code>位置、类别列表</code></p><h3 id="Locations–位置（树）"><a href="#Locations–位置（树）" class="headerlink" title="Locations–位置（树）"></a>Locations–位置（树）</h3><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p>根据创建物品&#x2F;位置时的父位置，程序会构建出一个层级树，简明地展现出它们之间的从属关系</p>    </div>    <div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0897a5f3d3.webp" alt="1708165497793.webp"></p>    </div>    </div><h3 id="Search–搜索"><a href="#Search–搜索" class="headerlink" title="Search–搜索"></a>Search–搜索</h3><p>顾名思义</p><h3 id="Profile–用户设置"><a href="#Profile–用户设置" class="headerlink" title="Profile–用户设置"></a>Profile–用户设置</h3><p>直接上图片</p><div class="tag-plugin swiper fancybox" id="swiper-api" ><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0910f6ac67.webp" alt="1708167438646.webp"></div><div class="swiper-slide"><img no-lazy src="https://onep.hzchu.top/mount/pic/2024/02/17/65d092acdc522.webp" alt="1708167851852.webp"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><h3 id="Tools–工具"><a href="#Tools–工具" class="headerlink" title="Tools–工具"></a>Tools–工具</h3><p>包括<code>标签生成器</code>，<code>生成BOM表</code>，导<code>入导出CSV</code>及一些<code>修复工具</code></p><p>我主要用的是<code>标签生成器</code>，可以直接生成二维码贴在物品表面</p><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0cc5ba2019.webp" alt="1708182617875.webp"></p>    </div>    <div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d094a2d831a.webp" alt="1708168353440.webp"></p>    </div>    </div><blockquote><p>调好参数右键打印即可</p></blockquote><h3 id="物品详情"><a href="#物品详情" class="headerlink" title="物品详情"></a>物品详情</h3><p>很详细，但我除了数量和描述都用不上</p><div class="tag-plugin swiper fancybox" id="swiper-api" ><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0d75c667cc.webp" alt="1708185435353.webp"></div><div class="swiper-slide"><img no-lazy src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0d762bef44.webp" alt="1708185441662.webp"></div><div class="swiper-slide"><img no-lazy src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0d76b8cc90.webp" alt="1708185450333.webp"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><blockquote><p>存在页面切换bug，刷新即可解决</p></blockquote><h2 id="基本逻辑"><a href="#基本逻辑" class="headerlink" title="基本逻辑"></a>基本逻辑</h2><p> 为了能准确快速地找到对应存放处，我定了一套基本原则：</p><ol><li>将几个房间用A&#x2F;B…大写英文字母命名</li><li>存放处使用所属房间加数字命名</li><li>以房间门为起点，向右统计入库</li><li>对应垂直堆叠的存放处，从上往下（优先）</li></ol><p>对应物品本体：</p><ol><li>对与中等大小物品，使用上文提到的二维码标签，</li><li>小物品用一维码标签，</li><li>再小就不贴标签，改用荧光笔加胶布或直接跳过</li><li>整理时从俯视角度，按入库顺序从左往右，从上到下排列（可选）</li><li>对已有唯一标识码（sn码）的物品直接使用</li></ol><p>程序内列了四个类别（感觉除了日后忘了物品名称关键词，用来筛选物品外其实没啥用）：大物件，小物件，收纳盒，电子产品</p><h2 id="实际实施"><a href="#实际实施" class="headerlink" title="实际实施"></a>实际实施</h2><p>  因为一开始没发现自带的<code>标签生成器</code>，所以用了「<a href="https://d.hzchu.top/d4a5q">E-Label</a>」来生成一维码，单页85个标签</p><p>其中，A&#x2F;B…表示该物品原属房间</p><p>标签内容填入物品描述中</p><div class="tag-plugin link dis-select"><a class="link-card rich" title="相关文件" href="https://pan.hzchu.top/s/q8SJ" target="_blank" rel="external nofollow noopener noreferrer" cardlink api="https://siteinfo-api.hzchu.top/api/v1?url=https://pan.hzchu.top/s/q8SJ" autofill="icon,desc"><div class="top"><div class="lazy img" data-bg="https://jsd.hzchu.top/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div><span class="cap link footnote">https://pan.hzchu.top/s/q8SJ</span></div><div class="bottom"><span class="title">相关文件</span><span class="cap desc footnote"></span></div></a></div><blockquote><p>还可以把文字缩掉，但考虑到一维码水平方向易被损坏还是留着吧</p></blockquote><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0bf9185724.webp" alt="1708179344734.webp"></p>    </div>    <div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0c4802d0ff.webp" alt="1708180607272.webp"></p>    </div>    </div><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p>打印完标签贴到物品上，我这里先用胶布凑合以下，注意要同时覆盖字符及一部分条形码（如图片荧光标准所示）</p><blockquote><p>注：图示条形码为第一版</p></blockquote>    </div>    <div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0c2b702e65.webp" alt="1708179885315.webp"></p>    </div>    </div><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p>不过还是太麻烦，所以我打算用这种带有不干胶的纸替代，不过因为春节还没到货<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatcry.png"/></span></p>    </div>    <div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0c6028e723.webp" alt="1708180983135.webp"></p>    </div>    </div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>​那么，工期呢？要对小到一颗纽扣电池进行统计本身就不是一件快事，整理一个小时才勉强整理完一张桌子，想全部整理完必然是一个大工程，慢慢来。但全部整理一次确实大有益处，比如我就找到了8年前在某购物广场办的会员卡（前一天才因为没有实体会员卡不给兑积分<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatangry.png"/></span>，这波雪中送炭），因为中途方案改变，要等这个打印纸，就先搁置下来了，<del>才不是因为帕鲁太好玩了</del></p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/17/65d0cbae30c5d.webp" alt="导弹喵"></p><h2 id="续"><a href="#续" class="headerlink" title="续"></a>续</h2><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p>自带的标签生成器中页面中仍有大量留白，实用性欠佳，有空想办法搓个更好用的</p><blockquote><p>打印机过个回南天病情恶化了，不是不能用（</p></blockquote>    </div>    <div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/24/65d9e74ecd25b.webp" alt="1708779215832.webp"></p>    </div>    </div><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p>可根据物品大小裁剪，在默认情况下规格约为48x21mm</p>    </div>    <div class="cell" style="">    <p><img src="https://onep.hzchu.top/mount/pic/2024/02/24/65d9e756bd973.webp" alt="1708779215823.webp"></p><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"></div>    </div>    <div class="cell" style="">    <p>实际使用</p>     </div>    <div class="cell" style="">    <div id="player_6cc3e893806c4850"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player_6cc3e893806c4850'),    userId: 4322,    vcode: '6cc3e893806c4850',    autoPlay: false});</script>    </div>    </div>]]></content>
    
    
    <summary type="html">唉，家里太乱了，该整理一下了</summary>
    
    
    
    
    <category term="Homebox" scheme="https://blog.hzchu.top/tags/Homebox/"/>
    
    <category term="家用" scheme="https://blog.hzchu.top/tags/%E5%AE%B6%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>峰间云海服务器技术分析</title>
    <link href="https://blog.hzchu.top/2024/%E5%B3%B0%E9%97%B4%E4%BA%91%E6%B5%B7%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/"/>
    <id>https://blog.hzchu.top/2024/%E5%B3%B0%E9%97%B4%E4%BA%91%E6%B5%B7%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</id>
    <published>2024-02-08T22:00:12.000Z</published>
    <updated>2024-02-12T22:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​2023年的暑假，在我百般聊赖之际，网上冲浪时刷到了一个 mc服务器的视频。于是呼，心里萌发了一个想法——建立一个属于自己的服务器。在考虑的各种因素后，我选择了“纯生存”这个主题（之前都是玩命令的，很少沉下心来好好玩玩生存，也算是圆个心愿吧）。然后嘛，路走窄了，因为<code>时机不恰当，稳定性欠佳，玩法单调</code>等致命负面因素，好嘛，<del>它没了</del>（还活着，但在线玩家数量≤3罢了）。毕竟玩家数量跟投入的预算完全不成正比，没啥动力开，让我不禁想起了之前和酷安上一个老哥「<a href="https://d.hzchu.top/yhe5t">Ifkn_271</a>」合作，结果也是这样消失在互联网茫茫大海之中。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatumm.png"/></span></p><p>​不过话说回来，还是有投入了很多精力在上面的，时至今日，随着「go-cqhttp」项目寿终正寝，加上自己硬盘爆炸带来的数据库丢失，目前只剩下核心的游戏服务端还能用了，今天写一篇文章来<del>追悼</del>怀念一下吧。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatread.png"/></span></p><h2 id="内容索引"><a href="#内容索引" class="headerlink" title="内容索引"></a>内容索引</h2><ol><li><a href="#%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E7%AB%AF">MCDR插件及部分服务端配置</a></li><li><a href="#Dynmap">Dynmap设置MySQL存储及使用独立Web服务器</a></li><li><a href="#%E5%9C%A8%E7%BA%BF%E6%9C%8D%E5%8A%A1">在线服务平台程序解析及部分代码片段</a></li><li><a href="#QQ-BOT">QQ机器人中自动添加离线用户白名单、聊天信息同步及图片上传</a></li><li><a href="#%E6%9D%82%E9%A1%B9">杂项</a></li></ol><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>​关于服务器的信息在<a href="/wiki/fcloud/">这里</a>可以看<br>​当然，在上面没有涉及到技术部分。总的来说，一共涉及到了「服务端主体及相应插件」，「网页前端、后端」 ，「QQ机器人」， 「Dynmap」这几个部分，大体架构如下</p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/09/65c60196f2896.webp" alt="Snipaste_2024-02-09_11-13-44.webp"></p><p>以上，听我慢慢道来</p><h2 id="游戏服务端"><a href="#游戏服务端" class="headerlink" title="游戏服务端"></a>游戏服务端</h2><p>这方面大家各有不同，我这也不是最优选，就一笔带过</p><div class="tag-plugin quot"><p class="content" type="icon"><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" /><span class="text">外围服务</span><span class="empty"></span></p></div><p>​由于当时没找到使用于fabric的登录插件，被迫增加了BC和一个独立的登录服务端。在前者我用了「Geyser」和「PixelMOTD」，一个用于转换be版于java版的通信协议，另一个用来处理motd请求，看起来更加高大上。后者用了雪之樱的整合包，并加了<code>BungeeAutoJoinServer</code>模组，在<code>Authme</code>登录事件结束后自动进入服务器。</p><p>​虽然臃肿了点，但也有好处，比如<code>防假人压测，motd攻击</code>之类。</p><a class="tag-plugin colorful hashtag" color="orange" href="https://d.hzchu.top/libmr"><svg t="1701408144765" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4228" width="200" height="200"><path d="M426.6 64.8c34.8 5.8 58.4 38.8 52.6 73.6l-19.6 117.6h190.2l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6s58.4 38.8 52.6 73.6l-19.4 117.6H896c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-42.6 256H832c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.6-117.4h-190.4l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.4-117.8H128c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l42.6-256H192c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6z m11.6 319.2l-42.6 256h190.2l42.6-256h-190.2z" p-id="4229"></path></svg><span>Geyser</span></a><a class="tag-plugin colorful hashtag" color="yellow" href="https://d.hzchu.top/cwlew"><svg t="1701408144765" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4228" width="200" height="200"><path d="M426.6 64.8c34.8 5.8 58.4 38.8 52.6 73.6l-19.6 117.6h190.2l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6s58.4 38.8 52.6 73.6l-19.4 117.6H896c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-42.6 256H832c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.6-117.4h-190.4l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.4-117.8H128c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l42.6-256H192c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6z m11.6 319.2l-42.6 256h190.2l42.6-256h-190.2z" p-id="4229"></path></svg><span>PixelMOTD</span></a><a class="tag-plugin colorful hashtag" color="green" href="https://d.hzchu.top/i8gan"><svg t="1701408144765" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4228" width="200" height="200"><path d="M426.6 64.8c34.8 5.8 58.4 38.8 52.6 73.6l-19.6 117.6h190.2l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6s58.4 38.8 52.6 73.6l-19.4 117.6H896c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-42.6 256H832c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.6-117.4h-190.4l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.4-117.8H128c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l42.6-256H192c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6z m11.6 319.2l-42.6 256h190.2l42.6-256h-190.2z" p-id="4229"></path></svg><span>BungeeAutoJoinServer</span></a><div class="tag-plugin quot"><p class="content" type="icon"><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" /><span class="text">MCDR</span><span class="empty"></span></p></div><p>不懂Java，但又得对服务端运行做出干涉，这就得请出<code>MCDReforged</code>了</p><a class="tag-plugin colorful hashtag" color="cyan" href="https://d.hzchu.top/uumvr"><svg t="1701408144765" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4228" width="200" height="200"><path d="M426.6 64.8c34.8 5.8 58.4 38.8 52.6 73.6l-19.6 117.6h190.2l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6s58.4 38.8 52.6 73.6l-19.4 117.6H896c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-42.6 256H832c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.6-117.4h-190.4l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.4-117.8H128c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l42.6-256H192c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6z m11.6 319.2l-42.6 256h190.2l42.6-256h-190.2z" p-id="4229"></path></svg><span>MCDReforged</span></a><p><img src="https://onep.hzchu.top/mount/pic/2024/02/09/65c5cd66b7da9.webp" alt="1707461988568.webp"></p><ol><li>清除掉落物</li></ol><figure class="highlight python"><figcaption><span>\mcdr_server\plugins\cleandrops.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">PLUGIN_METADATA = &#123;</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;cleanitem&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;version&#x27;</span>: <span class="string">&#x27;1.0.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;扫地僧&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> mcdreforged.api.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clear_drops</span>(<span class="params">server: PluginServerInterface</span>):</span><br><span class="line">    server.execute(<span class="string">&#x27;tellraw @a &#123;&quot;text&quot;:&quot;30秒后清除掉落物&quot;,&quot;color&quot;:&quot;yellow&quot;&#125;&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">30</span>)</span><br><span class="line">    server.execute(<span class="string">&#x27;kill @e[type=item]&#x27;</span>)</span><br><span class="line">    server.execute(<span class="string">&#x27;tellraw @a &#123;&quot;text&quot;:&quot;掉落物已清除!&quot;,&quot;color&quot;:&quot;yellow&quot;&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_info</span>(<span class="params">server: PluginServerInterface, info: Info</span>):</span><br><span class="line">    <span class="keyword">if</span> info.content == <span class="string">&#x27;!!cleardrops&#x27;</span>:</span><br><span class="line">        clear_drops(server)</span><br><span class="line"></span><br><span class="line"><span class="meta">@new_thread(<span class="params">PLUGIN_METADATA[<span class="string">&#x27;id&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_load</span>(<span class="params">server, old</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        clear_drops(server)</span><br><span class="line">        time.sleep(<span class="number">86400</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>插件运行在新的线程中，<del>可以放心睡</del>。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatreachrev.png"/></span>当然，最好还是用「<a href="https://modrinth.com/mod/cleardespawn">ClearDespawn</a>」</p><ol start="2"><li>聊天记录统计</li></ol><figure class="highlight python"><figcaption><span>\mcdr_server\plugins\talk.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">PLUGIN_METADATA = &#123;</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;talksave&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;version&#x27;</span>: <span class="string">&#x27;1.0.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;记录玩家聊天记录&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置区域</span></span><br><span class="line">DATABASE = &#123;</span><br><span class="line">    <span class="string">&#x27;host&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user&#x27;</span>: <span class="string">&#x27;user&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;database&#x27;</span>: <span class="string">&#x27;database&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"><span class="keyword">from</span> mcdreforged.api.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># def on_load(server, old):</span></span><br><span class="line"><span class="comment">#     server.logger.info(&#x27;Hello world!&#x27;)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_user_info</span>(<span class="params">server: PluginServerInterface, info: Info</span>):</span><br><span class="line">    <span class="comment"># 获取玩家名和聊天消息内容</span></span><br><span class="line">    player = info.player</span><br><span class="line">    message = info.content</span><br><span class="line">    <span class="comment">#server.logger.info(f&#x27;&#123;player&#125; 发送了消息：&#123;message&#125;&#x27;)</span></span><br><span class="line">    <span class="keyword">if</span> player <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> message <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> message.startswith(<span class="string">&#x27;!!MCDR&#x27;</span>) <span class="keyword">or</span> message.startswith(<span class="string">&#x27;!!plp&#x27;</span>) <span class="keyword">or</span> message.startswith(<span class="string">&#x27;!!day&#x27;</span>) <span class="keyword">or</span> message ==<span class="string">&quot;stop&quot;</span> <span class="keyword">or</span> message ==<span class="string">&quot;&quot;</span> <span class="keyword">or</span> message.startswith(<span class="string">&#x27;!!qb&#x27;</span>) <span class="keyword">or</span> message.startswith(<span class="string">&#x27;tellraw&#x27;</span>) <span class="keyword">or</span> message.startswith(<span class="string">&#x27;list&#x27;</span>):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="comment"># 此部分判断是否为MCDR命令，可根据自己插件不同调整</span></span><br><span class="line">    <span class="comment"># 也可与nb联动，同步信息到qq，不过我手抖把代码删了</span></span><br><span class="line">    conn= mysql.connector.connect(**DATABASE)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    sql = <span class="string">&quot;INSERT INTO chat (playername, msg, time) VALUES (%s, %s, NOW())&quot;</span></span><br><span class="line">    val = (player, message)</span><br><span class="line">    cursor.execute(sql, val)</span><br><span class="line">    conn.commit()</span><br><span class="line">    cursor.close()</span><br></pre></td></tr></table></figure><p>记录聊天记录到数据库，日后可以查询</p><ol start="3"><li>「银行」</li></ol><p>用下界合金为货币，存储到数据库中，本想和商店搭配使用的，没写完就不放了</p><div class="tag-plugin quot"><p class="content" type="icon"><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" /><span class="text">服务端本体</span><span class="empty"></span></p></div><ol><li>既然是生存，必然绕不开一些生电类机器，<del>无脑投入carpet的怀抱</del></li></ol><p><img src="https://onep.hzchu.top/mount/pic/2024/02/09/65c5f68769fba.webp" alt="已修改的Carpet选项"></p><ol start="2"><li>Tab玩家列表用<code>styledplayerlist</code>微调了下</li></ol><p><img src="https://onep.hzchu.top/mount/pic/2024/02/09/65c5f7ea88e5e.webp" alt="还行吧"></p><figure class="highlight json"><figcaption><span>\server\config\styledplayerlist\styles\default.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;style_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Default&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;update_tick_time&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;list_header&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;&lt;gr:#ff6c00:#ff6c00&gt;&lt;bold&gt;峰间云海&lt;/bold&gt;&lt;/gr&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;&lt;color:#555555&gt;&lt;strikethrough&gt;        &lt;/strikethrough&gt;[ &lt;/color&gt;&lt;color:#FF5555&gt;%server:online%&lt;color:#6666676&gt;/&lt;/color&gt;%server:max_players%&lt;/color&gt;&lt;color:#555555&gt; ]&lt;strikethrough&gt;        &lt;/strikethrough&gt;&lt;/color&gt;&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;list_footer&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;&lt;color:#555555&gt;&lt;strikethrough&gt;                          &lt;/strikethrough&gt;&lt;/color&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;&lt;gray&gt;TPS: %server:tps_colored% &lt;dark_gray&gt;|&lt;/dark_gray&gt;&lt;gray&gt; MSPT: %server:mspt_colored% &lt;dark_gray&gt;|&lt;/dark_gray&gt; &lt;gray&gt;RAM: &lt;color:#54fc54&gt;%server:used_ram%/%server:max_ram%MB&lt;/color&gt; &lt;dark_gray&gt;|&lt;/dark_gray&gt; &lt;gray&gt;Ping: &lt;color:#ffba26&gt;%player:ping%ms&lt;/color&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;&lt;gray&gt;游戏时间：%world:time% &lt;dark_gray&gt;|&lt;/dark_gray&gt; &lt;gray&gt;现实时间：%server:time% &lt;dark_gray&gt;|&lt;/dark_gray&gt; &lt;gray&gt;实体数量：%world:mob_count%&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hidden_in_commands&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>Simple Voice Chat</li></ol><p>平时还有几条frp线路备用，而SVC默认使用<code>当前连接的ip+24454</code>进行连接，导致使用frp线路时无法使用，只好在配置里指定连接host</p><figure class="highlight properties"><figcaption><span>\config\voicechat\voicechat-server.properties:29</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The host name that clients should use to connect to the voice chat</span></span><br><span class="line"><span class="comment"># This may also include a port, e.g. &#x27;example.com:24454&#x27;</span></span><br><span class="line"><span class="comment"># Don&#x27;t change this value if you don&#x27;t know what you are doing</span></span><br><span class="line"><span class="attr">voice_host</span>=<span class="string">mcvoice.hzchu.top\:24454</span></span><br><span class="line"><span class="comment"># 其它设置无需调整</span></span><br></pre></td></tr></table></figure><p>其它就没什么改动了，添加的插件列表在<a href="/wiki/fcloud/">这里</a></p><h2 id="外围应用"><a href="#外围应用" class="headerlink" title="外围应用"></a>外围应用</h2><div class="tag-plugin quot"><h3 class="content" id="Dynmap" type="icon"><a href="#Dynmap" class="headerlink" title="Dynmap"></a><img class="icon prefix" src="https://onep.hzchu.top/mount/pic/2024/02/09/65c648ae99185.webp" /><span class="text">Dynmap</span><span class="empty"></span></h3></div><p>如官方简介里说的一样，这是一个<code>Google Maps-like map for your Minecraft server</code>，可以把服务器存档渲染成像谷歌地图般的在线网页供其他人查看</p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/09/65c64a1aabf74.webp" alt="无奖竞猜生物群落"></p><p>通常情况下，大部分人装好就直接用了，可能再反代一下默认的8123端口，定个自定义路径访问。不过聪明的你从上面的架构图中应该已经发现了不同。没看清？再看一次</p><pre class="mermaid">flowchart LR    A[User] <-->|visit or talk| B[Dynmap Forestage]    B <--> C(MySQL)    C <--> D[Dynmap Backstage]</pre><p>为了实现上述访问流程，需要对原有设置做出一定调整</p><p>我参考了这篇文章，国内好像还没人写过，我就当个搬运工，<del>绝对不是水字数</del>。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/cdn-x/emoji/tieba/滑稽.png"/></spanp><div class="tag-plugin link dis-select"><a class="link-card rich" title="" href="https://bleepcoder.com/cn/dynmap/493645860/tutorial-setting-up-a-standalone-web-server-with-mysql" target="_blank" rel="external nofollow noopener noreferrer" cardlink api="https://siteinfo-api.hzchu.top/api/v1?url=https://bleepcoder.com/cn/dynmap/493645860/tutorial-setting-up-a-standalone-web-server-with-mysql" autofill="title,desc"><div class="top"><div class="lazy img" data-bg="https://onep.hzchu.top/mount/pic/2024/02/17/65d0215f11a29.webp"></div><span class="cap link footnote">https://bleepcoder.com/cn/dynmap/493645860/tutorial-setting-up-a-standalone-web-server-with-mysql</span></div><div class="bottom"><span class="title">https://bleepcoder.com/cn/dynmap/493645860/tutorial-setting-up-a-standalone-web-server-with-mysql</span><span class="cap desc footnote"></span></div></a></div><ol><li><p>首先先新建一个数据库，如果能设置允许访问范围的话最好只包括本机和服务端的ip</p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/10/65c6d4d801cf7.webp" alt="1707529430723.webp"></p></li><li><p>修改以下配置</p><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p><strong>更改前</strong></p><div class="tag-plugin colorful note" color="red" child="codeblock"><div class="body"><figure class="highlight yaml"><figcaption><span>\dynmap\configuration.txt:28</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="comment"># Filetree storage (standard tree of image files for maps)</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">filetree</span></span><br><span class="line">  <span class="comment"># SQLite db for map storage (uses dbfile as storage location)</span></span><br><span class="line">  <span class="comment">#type: sqlite</span></span><br><span class="line">  <span class="comment">#dbfile: dynmap.db</span></span><br><span class="line">  <span class="comment"># MySQL DB for map storage (at &#x27;hostname&#x27;:&#x27;port&#x27; with flags &quot;flags&quot; in database &#x27;database&#x27; using user &#x27;userid&#x27; password &#x27;password&#x27; and table prefix &#x27;prefix&#x27;)</span></span><br><span class="line">  <span class="comment">#type: mysql</span></span><br><span class="line">  <span class="comment">#hostname: localhost</span></span><br><span class="line">  <span class="comment">#port: 3306</span></span><br><span class="line">  <span class="comment">#database: dynmap</span></span><br><span class="line">  <span class="comment">#userid: dynmap</span></span><br><span class="line">  <span class="comment">#password: dynmap</span></span><br><span class="line">  <span class="comment">#prefix: &quot;&quot;</span></span><br></pre></td></tr></table></figure></div></div>    </div>    <div class="cell" style="">    <p><strong>更改后</strong></p><div class="tag-plugin colorful note" color="green" child="codeblock"><div class="body"><figure class="highlight yaml"><figcaption><span>\dynmap\configuration.txt:28</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="comment"># Filetree storage (standard tree of image files for maps)</span></span><br><span class="line">  <span class="comment">#type: filetree &lt;- DONT FORGET TO COMMENT THIS OUT</span></span><br><span class="line">  <span class="comment"># SQLite db for map storage (uses dbfile as storage location)</span></span><br><span class="line">  <span class="comment">#type: sqlite</span></span><br><span class="line">  <span class="comment">#dbfile: dynmap.db</span></span><br><span class="line">  <span class="comment"># MySQL DB for map storage (at &#x27;hostname&#x27;:&#x27;port&#x27; with flags &quot;flags&quot; in database &#x27;database&#x27; using user &#x27;userid&#x27; password &#x27;password&#x27; and table prefix &#x27;prefix&#x27;)</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">hostname:</span> <span class="string">&lt;mysql_ip&gt;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="string">&lt;mysql_port&gt;</span></span><br><span class="line">  <span class="attr">database:</span> <span class="string">&lt;mysql_database&gt;</span></span><br><span class="line">  <span class="attr">userid:</span> <span class="string">&lt;dynmap_mysql_user&gt;</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&lt;dynmap_mysql_password&gt;</span></span><br><span class="line">  <span class="attr">prefix:</span> <span class="string">&quot;&quot;</span> <span class="comment"># Can add prefix for tables if you want</span></span><br></pre></td></tr></table></figure></div></div>    </div>    </div></li></ol><div class="tag-plugin colorful note" color="blue"><div class="body"><p>如果使用SQLite取消对应注释即可，路径可写绝对路径，把数据库放到硬盘空间充足的地方</p></div></div><p>随后，注释掉<code>- class: org.dynmap.InternalClientUpdateComponent</code>所有内容并<strong>取消</strong>注释<code>- class: org.dynmap.JsonFileClientUpdateComponent</code>所有内容</p><details class="tag-plugin colorful folding" ><summary><span>title 所修改内容</span></summary><div class="body"><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p><strong>更改前</strong></p><div class="tag-plugin colorful note" color="red" child="codeblock"><div class="body"><figure class="highlight yaml"><figcaption><span>\dynmap\configuration.txt:54</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class:</span> <span class="string">org.dynmap.InternalClientUpdateComponent</span></span><br><span class="line">  <span class="attr">sendhealth:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sendposition:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">allowwebchat:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">webchat-interval:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">hidewebchatip:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">trustclientname:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">includehiddenplayers:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># (optional) if true, color codes in player display names are used</span></span><br><span class="line">  <span class="attr">use-name-colors:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># (optional) if true, player login IDs will be used for web chat when their IPs match</span></span><br><span class="line">  <span class="attr">use-player-login-ip:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># (optional) if use-player-login-ip is true, setting this to true will cause chat messages not matching a known player IP to be ignored</span></span><br><span class="line">  <span class="attr">require-player-login-ip:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># (optional) block player login IDs that are banned from chatting</span></span><br><span class="line">  <span class="attr">block-banned-player-chat:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Require login for web-to-server chat (requires login-enabled: true)</span></span><br><span class="line">  <span class="attr">webchat-requires-login:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If set to true, users must have dynmap.webchat permission in order to chat</span></span><br><span class="line">  <span class="attr">webchat-permissions:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Limit length of single chat messages</span></span><br><span class="line">  <span class="attr">chatlengthlimit:</span> <span class="number">256</span></span><br><span class="line"><span class="comment">#  # Optional - make players hidden when they are inside/underground/in shadows (#=light level: 0=full shadow,15=sky)</span></span><br><span class="line"><span class="comment">#  hideifshadow: 4</span></span><br><span class="line"><span class="comment">#  # Optional - make player hidden when they are under cover (#=sky light level,0=underground,15=open to sky)</span></span><br><span class="line"><span class="comment">#  hideifundercover: 14</span></span><br><span class="line"><span class="comment">#  # (Optional) if true, players that are crouching/sneaking will be hidden </span></span><br><span class="line">  <span class="attr">hideifsneaking:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, player positions/status is protected (login with ID with dynmap.playermarkers.seeall permission required for info other than self)</span></span><br><span class="line">  <span class="attr">protected-player-info:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, hide players with invisibility potion effects active</span></span><br><span class="line">  <span class="attr">hide-if-invisiblity-potion:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, player names are not shown on map, chat, list</span></span><br><span class="line">  <span class="attr">hidenames:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#- class: org.dynmap.JsonFileClientUpdateComponent</span></span><br><span class="line"><span class="comment">#  writeinterval: 1</span></span><br><span class="line"><span class="comment">#  sendhealth: true</span></span><br><span class="line"><span class="comment">#  sendposition: true</span></span><br><span class="line"><span class="comment">#  allowwebchat: true</span></span><br><span class="line"><span class="comment">#  webchat-interval: 5</span></span><br><span class="line"><span class="comment">#  hidewebchatip: false</span></span><br><span class="line"><span class="comment">#  includehiddenplayers: false</span></span><br><span class="line"><span class="comment">#  use-name-colors: false</span></span><br><span class="line"><span class="comment">#  use-player-login-ip: false</span></span><br><span class="line"><span class="comment">#  require-player-login-ip: false</span></span><br><span class="line"><span class="comment">#  block-banned-player-chat: true</span></span><br><span class="line"><span class="comment">#  hideifshadow: 0</span></span><br><span class="line"><span class="comment">#  hideifundercover: 0</span></span><br><span class="line"><span class="comment">#  hideifsneaking: false</span></span><br><span class="line"><span class="comment">#  # Require login for web-to-server chat (requires login-enabled: true)</span></span><br><span class="line"><span class="comment">#  webchat-requires-login: false</span></span><br><span class="line"><span class="comment">#  # If set to true, users must have dynmap.webchat permission in order to chat</span></span><br><span class="line"><span class="comment">#  webchat-permissions: false</span></span><br><span class="line"><span class="comment">#  # Limit length of single chat messages</span></span><br><span class="line"><span class="comment">#  chatlengthlimit: 256</span></span><br><span class="line"><span class="comment">#  hide-if-invisiblity-potion: true</span></span><br><span class="line"><span class="comment">#  hidenames: false</span></span><br></pre></td></tr></table></figure></div></div>    </div>    <div class="cell" style="">    <p><strong>更改后</strong></p><div class="tag-plugin colorful note" color="green" child="codeblock"><div class="body"><figure class="highlight yaml"><figcaption><span>\dynmap\configuration.txt:54</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># - class: org.dynmap.InternalClientUpdateComponent</span></span><br><span class="line">   <span class="comment">#sendhealth: true</span></span><br><span class="line">   <span class="comment">#sendposition: true</span></span><br><span class="line">   <span class="comment">#allowwebchat: true</span></span><br><span class="line">   <span class="comment">#webchat-interval: 5</span></span><br><span class="line">   <span class="comment">#hidewebchatip: false</span></span><br><span class="line">   <span class="comment">#trustclientname: false</span></span><br><span class="line">   <span class="comment">#includehiddenplayers: false</span></span><br><span class="line">   <span class="comment"># (optional) if true, color codes in player display names are used</span></span><br><span class="line">   <span class="comment">#use-name-colors: false</span></span><br><span class="line">   <span class="comment"># (optional) if true, player login IDs will be used for web chat when their IPs match</span></span><br><span class="line">   <span class="comment">#use-player-login-ip: true</span></span><br><span class="line">   <span class="comment"># (optional) if use-player-login-ip is true, setting this to true will cause chat messages not matching a known player IP to be ignored</span></span><br><span class="line">   <span class="comment">#require-player-login-ip: false</span></span><br><span class="line">   <span class="comment"># (optional) block player login IDs that are banned from chatting</span></span><br><span class="line">   <span class="comment">#block-banned-player-chat: true</span></span><br><span class="line">   <span class="comment"># Require login for web-to-server chat (requires login-enabled: true)</span></span><br><span class="line">   <span class="comment">#webchat-requires-login: false</span></span><br><span class="line">   <span class="comment"># If set to true, users must have dynmap.webchat permission in order to chat</span></span><br><span class="line">   <span class="comment">#webchat-permissions: false</span></span><br><span class="line">   <span class="comment"># Limit length of single chat messages</span></span><br><span class="line">   <span class="comment">#chatlengthlimit: 256</span></span><br><span class="line"> <span class="comment">#  # Optional - make players hidden when they are inside/underground/in shadows (#=light level: 0=full shadow,15=sky)</span></span><br><span class="line"> <span class="comment">#  hideifshadow: 4</span></span><br><span class="line"> <span class="comment">#  # Optional - make player hidden when they are under cover (#=sky light level,0=underground,15=open to sky)</span></span><br><span class="line"> <span class="comment">#  hideifundercover: 14</span></span><br><span class="line"> <span class="comment">#  # (Optional) if true, players that are crouching/sneaking will be hidden </span></span><br><span class="line">   <span class="comment">#hideifsneaking: false</span></span><br><span class="line">   <span class="comment"># If true, player positions/status is protected (login with ID with dynmap.playermarkers.seeall permission required for info other than self)</span></span><br><span class="line">   <span class="comment">#protected-player-info: false</span></span><br><span class="line">   <span class="comment"># If true, hide players with invisibility potion effects active</span></span><br><span class="line">   <span class="comment">#hide-if-invisiblity-potion: true</span></span><br><span class="line">   <span class="comment"># If true, player names are not shown on map, chat, list</span></span><br><span class="line">   <span class="comment">#hidenames: false</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">org.dynmap.JsonFileClientUpdateComponent</span></span><br><span class="line">   <span class="attr">writeinterval:</span> <span class="number">1</span></span><br><span class="line">   <span class="attr">sendhealth:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">sendposition:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">allowwebchat:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">webchat-interval:</span> <span class="number">5</span></span><br><span class="line">   <span class="attr">hidewebchatip:</span> <span class="literal">false</span></span><br><span class="line">   <span class="attr">includehiddenplayers:</span> <span class="literal">false</span></span><br><span class="line">   <span class="attr">use-name-colors:</span> <span class="literal">false</span></span><br><span class="line">   <span class="attr">use-player-login-ip:</span> <span class="literal">false</span></span><br><span class="line">   <span class="attr">require-player-login-ip:</span> <span class="literal">false</span></span><br><span class="line">   <span class="attr">block-banned-player-chat:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">hideifshadow:</span> <span class="number">0</span></span><br><span class="line">   <span class="attr">hideifundercover:</span> <span class="number">0</span></span><br><span class="line">   <span class="attr">hideifsneaking:</span> <span class="literal">false</span></span><br><span class="line"> <span class="comment">#  # Require login for web-to-server chat (requires login-enabled: true)</span></span><br><span class="line">   <span class="attr">webchat-requires-login:</span> <span class="literal">false</span></span><br><span class="line"> <span class="comment">#  # If set to true, users must have dynmap.webchat permission in order to chat</span></span><br><span class="line">   <span class="attr">webchat-permissions:</span> <span class="literal">false</span></span><br><span class="line"> <span class="comment">#  # Limit length of single chat messages</span></span><br><span class="line">   <span class="attr">chatlengthlimit:</span> <span class="number">256</span></span><br><span class="line">   <span class="attr">hide-if-invisiblity-potion:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">hidenames:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></div></div>    </div>    </div></div></details><p>然后找到<code>disable-webserver</code>并将值从<code>false</code>更改为 <code>true</code> 以禁用内部网页服务器</p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/10/65c6dcbe8e7e7.webp" alt="1707531452723.webp"></p><p>再修改相应的请求地址（<code>url:</code>）</p><div class="tag-plugin grid"  style="grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));"><div class="cell" style="">    <p><strong>更改前</strong></p><div class="tag-plugin colorful note" color="red" child="codeblock"><div class="body"><figure class="highlight yaml"><figcaption><span>\dynmap\configuration.txt:441</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span></span><br><span class="line">    <span class="comment"># configuration URL</span></span><br><span class="line">    <span class="comment">#configuration: &quot;up/configuration&quot;</span></span><br><span class="line">    <span class="comment"># update URL</span></span><br><span class="line">    <span class="comment">#update: &quot;up/world/&#123;world&#125;/&#123;timestamp&#125;&quot;</span></span><br><span class="line">    <span class="comment"># sendmessage URL</span></span><br><span class="line">    <span class="comment">#sendmessage: &quot;up/sendmessage&quot;</span></span><br><span class="line">    <span class="comment"># login URL</span></span><br><span class="line">    <span class="comment">#login: &quot;up/login&quot;</span></span><br><span class="line">    <span class="comment"># register URL</span></span><br><span class="line">    <span class="comment">#register: &quot;up/register&quot;</span></span><br><span class="line">    <span class="comment"># tiles base URL</span></span><br><span class="line">    <span class="comment">#tiles: &quot;tiles/&quot;</span></span><br><span class="line">    <span class="comment"># markers base URL</span></span><br><span class="line">    <span class="comment">#markers: &quot;tiles/&quot;</span></span><br></pre></td></tr></table></figure></div></div>    </div>    <div class="cell" style="">    <p><strong>MySQL</strong></p><div class="tag-plugin colorful note" color="green" child="codeblock"><div class="body"><figure class="highlight yaml"><figcaption><span>\dynmap\configuration.txt:441</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span></span><br><span class="line">    <span class="comment"># configuration URL</span></span><br><span class="line">    <span class="attr">configuration:</span> <span class="string">&quot;standalone/MySQL_configuration.php&quot;</span></span><br><span class="line">    <span class="comment"># update URL</span></span><br><span class="line">    <span class="attr">update:</span> <span class="string">&quot;standalone/MySQL_update.php?world=&#123;world&#125;&amp;ts=&#123;timestamp&#125;&quot;</span></span><br><span class="line">    <span class="comment"># sendmessage URL</span></span><br><span class="line">    <span class="attr">sendmessage:</span> <span class="string">&quot;standalone/MySQL_sendmessage.php&quot;</span></span><br><span class="line">    <span class="comment"># login URL</span></span><br><span class="line">    <span class="attr">login:</span> <span class="string">&quot;standalone/MySQL_login.php&quot;</span></span><br><span class="line">    <span class="comment"># register URL</span></span><br><span class="line">    <span class="attr">register:</span> <span class="string">&quot;standalone/MySQL_register.php&quot;</span></span><br><span class="line">    <span class="comment"># tiles base URL</span></span><br><span class="line">    <span class="attr">tiles:</span> <span class="string">&quot;standalone/MySQL_tiles.php?tile=&quot;</span></span><br><span class="line">    <span class="comment"># markers base URL</span></span><br><span class="line">    <span class="attr">markers:</span> <span class="string">&quot;standalone/MySQL_markers.php?marker=&quot;</span></span><br></pre></td></tr></table></figure></div></div>    </div>    <div class="cell" style="">    <p><strong>SQLite</strong></p><div class="tag-plugin colorful note" color="green" child="codeblock"><div class="body"><figure class="highlight yaml"><figcaption><span>\dynmap\configuration.txt:441</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span></span><br><span class="line">    <span class="comment"># configuration URL</span></span><br><span class="line">    <span class="attr">configuration:</span> <span class="string">&quot;standalone/configuration.php&quot;</span></span><br><span class="line">    <span class="comment"># update URL</span></span><br><span class="line">    <span class="attr">update:</span> <span class="string">&quot;standalone/update.php?world=&#123;world&#125;&amp;ts=&#123;timestamp&#125;&quot;</span></span><br><span class="line">    <span class="comment"># sendmessage URL</span></span><br><span class="line">    <span class="attr">sendmessage:</span> <span class="string">&quot;standalone/sendmessage.php&quot;</span></span><br><span class="line">    <span class="comment"># login URL</span></span><br><span class="line">    <span class="attr">login:</span> <span class="string">&quot;standalone/login.php&quot;</span></span><br><span class="line">    <span class="comment"># register URL</span></span><br><span class="line">    <span class="attr">register:</span> <span class="string">&quot;standalone/register.php&quot;</span></span><br><span class="line">    <span class="comment"># tiles base URL</span></span><br><span class="line">    <span class="attr">tiles:</span> <span class="string">&quot;standalone/tiles.php?tile=&quot;</span></span><br><span class="line">    <span class="comment"># markers base URL</span></span><br><span class="line">    <span class="attr">markers:</span> <span class="string">&quot;standalone/markers.php?marker=&quot;</span></span><br></pre></td></tr></table></figure></div></div>    </div>    </div><div class="tag-plugin colorful note" color="blue"><div class="title">Dynmap还支持MariaDB、PostgreSQL及S3存储。使用MariaDB的话将</div><div class="body"><p><code>type: mysql</code> 改为 <code>type: mariadb</code> ，PostgreSQL 改为 <code>type: postgres</code> 并将 <code>url:</code> 中的 <code>MySQL_</code> 替换为 <code>PostgreSQL_</code> 。至于S3，太豪气了应该没人用吧，自建当我没说（小声bb</p></div></div><p>最后修改一下配置文件中前端的地址（会在游戏中显示）</p><figure class="highlight yaml"><figcaption><span>\dynmap\configuration.txt:478</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Published public URL for Dynmap server (allows users to use &#x27;dynmap url&#x27; command to get public URL usable to access server</span></span><br><span class="line"><span class="comment"># If not set, &#x27;dynmap url&#x27; will not return anything.  URL should be fully qualified (e.g. https://mc.westeroscraft.com/)</span></span><br><span class="line"><span class="attr">publicURL:</span> <span class="string">https://yourdomain.com/</span></span><br></pre></td></tr></table></figure><ol start="3"><li>安装用于MySQL的java驱动包<div class="tag-plugin colorful note" color="yellow"><div class="body"><p>非MySQL存储可跳过</p></div></div><div class="tag-plugin link dis-select"><a class="link-card plain" title="MySQL_JDBC_(Fabric/Forge)" href="https://www.curseforge.com/minecraft/mc-mods/mysql-jdbc/files" target="_blank" rel="external nofollow noopener noreferrer" cardlink api="https://siteinfo-api.hzchu.top/api/v1?url=https://www.curseforge.com/minecraft/mc-mods/mysql-jdbc/files" autofill=""><div class="left"><span class="title">MySQL_JDBC_(Fabric/Forge)</span><span class="cap link footnote">https://www.curseforge.com/minecraft/mc-mods/mysql-jdbc/files</span></div><div class="right"><div class="lazy img" data-bg="https://static-beta.curseforge.com/images/favicon.ico"></div></div></a></div></li></ol><p>下载后放入 <code>mods</code> 文件夹</p><ol start="4"><li>试运行</li></ol><p>​开启服务端，观察日志输出中有无报错，同时检查数据库中是否有数据表生成</p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/10/65c6f4896779f.webp" alt="1707537542036.webp"></p><ol start="5"><li>成功运行后配置网页前端。先安装PHP-7.4（实测8.0会存在bug无法登录），将<code>...\dynmap\web</code>下所有文件复制到网页根目录即可。（模组在启动后会自动完成配置，以配置mysql为存储为例，配置会写入 <code>\standalone\config.js</code>和 <code>\web\standalone\MySQL_config.php</code>）如果数据库无法访问可尝试手动设置<code>$dbhost</code>为<code>127.0.0.1</code></li></ol><p><img src="https://onep.hzchu.top/mount/pic/2024/02/10/65c7326a8ff9a.webp" alt="1707553384528.webp"></p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/10/65c7327ca274f.webp" alt="1707553403171.webp"></p><ol start="6"><li>打开看看吧~ 哦？一片漆黑，因为这时候还没有执行渲染命令，dynmap还没工作<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatcoffee.png"/></span>，因此我们可以执行 <code>/dynmap radiusrender world 0 0 10</code>来对主世界出生点周围进行渲染，并查看中有无数据写入到<code>tiles</code>表中</li></ol><p><img src="https://onep.hzchu.top/mount/pic/2024/02/10/65c7349bafa98.webp" alt="例子"></p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/10/65c735c561384.webp" alt="1707554242561.webp"></p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/10/65c7382b5d84f.webp" alt="出来了"></p><p>初步测试完成后就可以执行 <code>/dynmap fullrender world</code> 渲染整个世界了。</p><p>前端我做了一定修改，有兴趣可以下载看看：</p><div class="tag-plugin link dis-select"><a class="link-card rich" title="" href="https://pan.hzchu.top/s/MWU7?password=uzyj8y" target="_blank" rel="external nofollow noopener noreferrer" cardlink api="https://siteinfo-api.hzchu.top/api/v1?url=https://pan.hzchu.top/s/MWU7?password=uzyj8y" autofill="title,icon,desc"><div class="top"><div class="lazy img" data-bg="https://jsd.hzchu.top/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div><span class="cap link footnote">https://pan.hzchu.top/s/MWU7?password=uzyj8y</span></div><div class="bottom"><span class="title">https://pan.hzchu.top/s/MWU7?password=uzyj8y</span><span class="cap desc footnote"></span></div></a></div><div class="tag-plugin colorful note" color="yellow"><div class="body"><p>注意：该地图会对性能及带宽占用上造成一定影响，请参考网上其他调优资料，根据自身实际情况调整</p></div></div><div class="tag-plugin quot"><h3 class="content" id="在线服务" type="icon"><a href="#在线服务" class="headerlink" title="在线服务"></a><img class="icon prefix" src="https://mcweb.hzchu.top/favicon.ico" /><span class="text">在线服务</span><span class="empty"></span></h3></div><p><img src="https://onep.hzchu.top/mount/pic/2024/02/10/65c73dfd4c862.webp" alt="相关图片"></p><blockquote><p><a href="https://d.hzchu.top/xznnj">峰间云海 (hzchu.top)</a></p></blockquote><p>与其叫做官网，倒不如说是一个 <code>综合服务平台</code> ， 当初想着与其整个花里胡哨的页面，不如整个有用的。虽然事实证明还是花哨的好。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatsadreach.png"/></span></p><ol><li>前端</li></ol><p>因为当时赶工期， 从头学各种框架来不及，用Py写了个拼凑html的程序，基本能用，后面MRUI也延续了这套，后续如果有空改进下。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatpeek2.png"/></span></p><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/thun888/mcweb"><img src="https://github-readme-stats.xaoxuu.com/api/pin/?username=thun888&repo=mcweb&&show_owner=true"/></a></div><p>基本是开箱即用了</p><p>功能在后面混着讲</p><ol start="2"><li>后端</li></ol><p><strong>首页：</strong>状态检测使用了<code>mcstatus</code>库，具体操作可以参考<a href="https://d.hzchu.top/a4zaw">mcstatus · PyPI</a>。公告用了Artalk，<del>歪门邪道</del></p><p><strong>聊天记录：</strong></p><figure class="highlight python"><figcaption><span>main.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/user/msg&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getmsg</span>():</span><br><span class="line">    num = request.args.get(<span class="string">&#x27;num&#x27;</span>, default=<span class="number">0</span>, <span class="built_in">type</span>=<span class="built_in">int</span>)</span><br><span class="line">    <span class="comment"># 限制访问前200条记录</span></span><br><span class="line">    <span class="keyword">if</span> num &gt; <span class="number">160</span>:</span><br><span class="line">        messages = []</span><br><span class="line">        message = &#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&#x27;playername&#x27;</span>: <span class="string">&quot;Null&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;msg&#x27;</span>: <span class="string">&quot;200条后不予查看&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;time&#x27;</span>: <span class="string">&quot;Null&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        messages.append(message)</span><br><span class="line">        <span class="keyword">return</span> jsonify(messages), <span class="number">200</span></span><br><span class="line">    conn= mysql.connector.connect(**DATABASE)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    sql = <span class="string">&quot;SELECT id, playername, msg, time FROM chat ORDER BY id DESC LIMIT %s, %s&quot;</span></span><br><span class="line">    cursor.execute(sql, (num, <span class="number">40</span>))</span><br><span class="line">    result = cursor.fetchall()</span><br><span class="line">    cursor.close()</span><br><span class="line"></span><br><span class="line">    messages = []</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> result:</span><br><span class="line">        message = &#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: row[<span class="number">0</span>],</span><br><span class="line">            <span class="string">&#x27;playername&#x27;</span>: row[<span class="number">1</span>],</span><br><span class="line">            <span class="string">&#x27;msg&#x27;</span>: row[<span class="number">2</span>],</span><br><span class="line">            <span class="string">&#x27;time&#x27;</span>: row[<span class="number">3</span>].strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        messages.append(message)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(messages), <span class="number">200</span></span><br></pre></td></tr></table></figure><p>在前端页面中，我是直接用了表格的形式显示，不够好看，原草稿大概是这样，<del>可惜没时间</del></p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/11/65c8dc3376bd8.webp" alt="1707662385052.webp"></p><p>用于当时忘了xss处理，要在前端补上</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// msg.textContent = dexss(player.msg);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dexss</span>(<span class="params">str, kwargs</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="string">&#x27;&#x27;</span> + str)</span><br><span class="line">    .<span class="title function_">replace</span>(<span class="regexp">/&amp;/g</span>, <span class="string">&#x27;&amp;amp;&#x27;</span>)</span><br><span class="line">    .<span class="title function_">replace</span>(<span class="regexp">/&lt;/g</span>, <span class="string">&#x27;&amp;lt;&#x27;</span>) <span class="comment">// DEC=&gt; &amp;#60; HEX=&gt; &amp;#x3c; Entity=&gt; &amp;lt;</span></span><br><span class="line">    .<span class="title function_">replace</span>(<span class="regexp">/&gt;/g</span>, <span class="string">&#x27;&amp;gt;&#x27;</span>)</span><br><span class="line">    .<span class="title function_">replace</span>(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;&amp;quot;&#x27;</span>)</span><br><span class="line">    .<span class="title function_">replace</span>(<span class="regexp">/&#x27;/g</span>, <span class="string">&#x27;&amp;#x27;&#x27;</span>) <span class="comment">// &amp;apos; 不推荐，因为它不在HTML规范中</span></span><br><span class="line">    .<span class="title function_">replace</span>(<span class="regexp">/\//g</span>, <span class="string">&#x27;&amp;#x2F;&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>相册：</strong></p><p>这部分与前者差不多，前端网上随便找了个改了改，现在想想直接用Lsky pro的画廊就行了</p><blockquote><p>此部分仅为读取，写入的部分由QQ机器人负责</p></blockquote><figure class="highlight python"><figcaption><span>main.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/user/photo&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_data</span>():</span><br><span class="line">    num = request.args.get(<span class="string">&#x27;num&#x27;</span>, default=<span class="number">0</span>, <span class="built_in">type</span>=<span class="built_in">int</span>)</span><br><span class="line">    </span><br><span class="line">    conn= mysql.connector.connect(**DATABASE)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        query = <span class="string">&quot;SELECT id, nickname, author, time, url FROM photo ORDER BY id DESC LIMIT %s, %s&quot;</span></span><br><span class="line">        cursor.execute(query, (num, <span class="number">24</span>))</span><br><span class="line">        results = cursor.fetchall()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 将查询结果转换为字典列表</span></span><br><span class="line">        data = []</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> results:</span><br><span class="line">            data.append(&#123;</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span>: row[<span class="number">0</span>],</span><br><span class="line">                <span class="string">&#x27;nickname&#x27;</span>: row[<span class="number">1</span>],</span><br><span class="line">                <span class="string">&#x27;author&#x27;</span>: row[<span class="number">2</span>],</span><br><span class="line">                <span class="string">&#x27;time&#x27;</span>: row[<span class="number">3</span>],</span><br><span class="line">                <span class="string">&#x27;url&#x27;</span>: row[<span class="number">4</span>]</span><br><span class="line">            &#125;)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> jsonify(data)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;error&#x27;</span>: <span class="built_in">str</span>(e)&#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        cursor.close()</span><br><span class="line">        conn.close()</span><br></pre></td></tr></table></figure><p><strong>坐标&amp;反馈：</strong>缩水了，用Artalk替代了，只能说与我计划中差的有亿点多</p><p><strong>排行榜：</strong></p><p>​这就有点意思了，为了实现这些数据统计，我在游戏中新建了<code>若干的计分板</code>+一些在常加载区块里的<code>命令方块</code>，随后每隔一段时间读取存档里的存储着计分板数据的文件（\world\data\scoreboard.dat），将数值计入数据库。（起初使用Rcon执行命令显示该玩家所有计分板数据并使用正则表达式提取再存入，前期还好，到后来影响太大被迫改进）</p><p>​游戏里的命令就不说了，需求不一定相同，网上一大把教程</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://www.bilibili.com/read/cv12839156/" target="_blank" rel="external nofollow noopener noreferrer" cardlink api="https://siteinfo-api.hzchu.top/api/v1?url=https://www.bilibili.com/read/cv12839156/" autofill="title,icon"><div class="left"><span class="title">https://www.bilibili.com/read/cv12839156/</span><span class="cap link footnote">https://www.bilibili.com/read/cv12839156/</span></div><div class="right"><div class="lazy img" data-bg="https://jsd.hzchu.top/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div><p>​在实际程序中，为了简化主程序的复杂程度（拉侧边滚动条都拉出火花了），我把新定义的函数放在<code>extra.py</code>里</p><figure class="highlight python"><figcaption><span>extra.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"><span class="keyword">import</span> python_nbt.nbt <span class="keyword">as</span> nbt</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_scoreboard</span>(<span class="params">scoreboard_name</span>):</span><br><span class="line"><span class="comment"># 将字符串转换为 Python 对象</span></span><br><span class="line">    start_time = time.time()</span><br><span class="line">    file = nbt.read_from_nbt_file(<span class="string">&quot;D:\MCC\mcdr_server\server\world\data\scoreboard.dat&quot;</span>)</span><br><span class="line">    string_data = <span class="built_in">str</span>(file)</span><br><span class="line">    <span class="comment"># print(string_data)</span></span><br><span class="line">    python_object = ast.literal_eval(string_data)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将 Python 对象转换为 JSON 字符串</span></span><br><span class="line">    json_data = json.dumps(python_object)</span><br><span class="line">    data = json.loads(json_data)</span><br><span class="line">    <span class="comment"># print(json_data)</span></span><br><span class="line">    <span class="comment"># print(data[&quot;value&quot;][&quot;data&quot;][&quot;value&quot;][&quot;PlayerScores&quot;][&quot;value&quot;])</span></span><br><span class="line">    data = data[<span class="string">&quot;value&quot;</span>][<span class="string">&quot;data&quot;</span>][<span class="string">&quot;value&quot;</span>][<span class="string">&quot;PlayerScores&quot;</span>][<span class="string">&quot;value&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">if</span> i[<span class="string">&quot;Objective&quot;</span>][<span class="string">&quot;value&quot;</span>] == scoreboard_name:</span><br><span class="line">            name = i[<span class="string">&quot;Name&quot;</span>][<span class="string">&quot;value&quot;</span>]</span><br><span class="line">            score = i[<span class="string">&quot;Score&quot;</span>][<span class="string">&quot;value&quot;</span>]</span><br><span class="line">            <span class="comment">#print(name,&quot;:&quot;,score)</span></span><br><span class="line">            conn= mysql.connector.connect(**DATABASE)</span><br><span class="line">            cursor = conn.cursor()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                insert_query = <span class="string">&quot;INSERT INTO scoreboard (player, &#123;&#125;) VALUES (%s, %s) ON DUPLICATE KEY UPDATE &#123;&#125; = %s&quot;</span>.<span class="built_in">format</span>(scoreboard_name, scoreboard_name)</span><br><span class="line">                data = (name, score, score)</span><br><span class="line">                cursor.execute(insert_query, data)</span><br><span class="line"></span><br><span class="line">                conn.commit()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">str</span>(e))</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">finally</span>:</span><br><span class="line">                cursor.close()</span><br><span class="line">                conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 记录结束时间</span></span><br><span class="line">    end_time = time.time()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算执行时间</span></span><br><span class="line">    execution_time = end_time - start_time</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印执行时间</span></span><br><span class="line">    <span class="keyword">return</span>(execution_time)</span><br></pre></td></tr></table></figure><p>​该函数回返回执行时间，不过没用错误处理，虽然一般情况下不会发生错误，不过最好也改进下再用</p><figure class="highlight python"><figcaption><span>main.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> extra</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">updatabase</span>():</span><br><span class="line">    time_used = extra.get_scoreboard(<span class="string">&quot;pickaxe_total&quot;</span>)</span><br><span class="line">    time_used = time_used + extra.get_scoreboard(<span class="string">&quot;gametime&quot;</span>)</span><br><span class="line">    time_used = time_used + extra.get_scoreboard(<span class="string">&quot;Kills&quot;</span>)</span><br><span class="line">    time_used = time_used + extra.get_scoreboard(<span class="string">&quot;fish&quot;</span>)</span><br><span class="line">    time_used = time_used + extra.get_scoreboard(<span class="string">&quot;xp&quot;</span>)</span><br><span class="line">    time_used =<span class="string">&quot; &#123;:.3f&#125;&quot;</span>.<span class="built_in">format</span>(time_used)</span><br><span class="line">    <span class="comment">#msg_type = &quot;System-AutoTasks&quot;</span></span><br><span class="line">    <span class="comment">#msg_value = &quot;计分板同步成功，耗时:&quot; + str(time_used) + &quot;秒&quot;</span></span><br><span class="line">    <span class="comment">#extra.eventssave(msg_type,msg_value)</span></span><br><span class="line">    <span class="comment"># 用于日志保存，可去掉</span></span><br><span class="line">                          </span><br><span class="line">                  </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_timer</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 每2h执行一次</span></span><br><span class="line">        <span class="comment"># 简单粗暴，实际使用请使用schedule库</span></span><br><span class="line">        time.sleep(<span class="number">2</span>* <span class="number">60</span> * <span class="number">60</span>)</span><br><span class="line">        <span class="comment"># 在后台线程中执行需要定时执行的函数</span></span><br><span class="line">        threading.Thread(target=updatabase).start()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过以下路由返回数据</p><figure class="highlight python"><figcaption><span>main.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/user/scoreboard&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_scoreboard</span>():</span><br><span class="line">    cnx = mysql.connector.connect(**DATABASE)</span><br><span class="line">    cursor = cnx.cursor()</span><br><span class="line">    query = <span class="string">&quot;SELECT * FROM scoreboard&quot;</span></span><br><span class="line">    cursor.execute(query)</span><br><span class="line">    data = [&#123;<span class="string">&#x27;playername&#x27;</span>: row[<span class="number">0</span>], <span class="string">&#x27;pickaxe_total&#x27;</span>: row[<span class="number">1</span>], <span class="string">&#x27;gametime&#x27;</span>: row[<span class="number">2</span>], <span class="string">&#x27;Kills&#x27;</span>: row[<span class="number">3</span>], <span class="string">&#x27;fish&#x27;</span>: row[<span class="number">4</span>], <span class="string">&#x27;xp&#x27;</span>: row[<span class="number">5</span>]&#125; <span class="keyword">for</span> row <span class="keyword">in</span> cursor.fetchall()]</span><br><span class="line">    cursor.close()</span><br><span class="line">    <span class="keyword">return</span> jsonify(data)</span><br></pre></td></tr></table></figure><p>前端用了AI帮忙，太折磨人了。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatumm.png"/></span></p><details class="tag-plugin colorful folding" ><summary><span>默认折叠</span></summary><div class="body"><figure class="highlight javascript"><figcaption><span>list.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> scoreboardUrl = <span class="string">&#x27;https://***************/user/scoreboard&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> scoreboardBodyPickaxe = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;scoreboard-body-pickaxe&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> scoreboardBodyKills = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;scoreboard-body-kills&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> scoreboardBodyFish = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;scoreboard-body-fish&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> scoreboardBodyGametime = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;scoreboard-body-gametime&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> scoreboardBodyxp = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;scoreboard-body-xp&#x27;</span>);</span><br><span class="line"><span class="title function_">fetch</span>(scoreboardUrl)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">scoreboard</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//定义一个比较函数，按照pickaxe_total的大小从高到低排序</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">compareByPickaxe</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> b.<span class="property">pickaxe_total</span> - a.<span class="property">pickaxe_total</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个比较函数，按照Kills的大小从高到低排序</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">compareByKills</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> b.<span class="property">Kills</span> - a.<span class="property">Kills</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个比较函数，按照fish的大小从高到低排序</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">compareByFish</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> b.<span class="property">fish</span> - a.<span class="property">fish</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个比较函数，按照gametime的大小从高到低排序</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">compareByGametime</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> b.<span class="property">gametime</span> - a.<span class="property">gametime</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个比较函数，按照xp的大小从高到低排序</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">compareByxp</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> b.<span class="property">xp</span> - a.<span class="property">xp</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义一个过滤函数，排除掉pickaxe_total为0的玩家</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">filterByPickaxe</span>(<span class="params">a</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> a.<span class="property">pickaxe_total</span> &gt; <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个过滤函数，排除掉Kills为null的玩家</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">filterByKills</span>(<span class="params">a</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> a.<span class="property">Kills</span> != <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个过滤函数，排除掉fish为null的玩家</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">filterByFish</span>(<span class="params">a</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> a.<span class="property">fish</span> != <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个过滤函数，排除掉gametime为null的玩家</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">filterByGametime</span>(<span class="params">a</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> a.<span class="property">gametime</span> != <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义一个过滤函数，排除掉xp为null的玩家 </span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">filterByxp</span>(<span class="params">a</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> a.<span class="property">xp</span> != <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//对scoreboard数组进行过滤</span></span><br><span class="line">        scoreboard = scoreboard.<span class="title function_">filter</span>(filterByPickaxe);</span><br><span class="line">        <span class="comment">// 参照最初版重写！！！！</span></span><br><span class="line">        <span class="comment">//创建一个副本数组，按照pickaxe_total排序</span></span><br><span class="line">        <span class="keyword">let</span> scoreboardByPickaxe = [...scoreboard];</span><br><span class="line">        scoreboardByPickaxe.<span class="title function_">sort</span>(compareByPickaxe);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(scoreboardByPickaxe)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个副本数组，按照Kills排序，并过滤掉null值</span></span><br><span class="line">        <span class="keyword">let</span> scoreboardByKills = [...scoreboard];</span><br><span class="line">        scoreboardByKills.<span class="title function_">sort</span>(compareByKills);</span><br><span class="line">        scoreboardByKills = scoreboardByKills.<span class="title function_">filter</span>(filterByKills);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个副本数组，按照fish排序，并过滤掉null值</span></span><br><span class="line">        <span class="keyword">let</span> scoreboardByFish = [...scoreboard];</span><br><span class="line">        scoreboardByFish.<span class="title function_">sort</span>(compareByFish);</span><br><span class="line">        scoreboardByFish = scoreboardByFish.<span class="title function_">filter</span>(filterByFish);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个副本数组，按照gametime排序，并过滤掉null值</span></span><br><span class="line">        <span class="keyword">let</span> scoreboardByGametime = [...scoreboard];</span><br><span class="line">        scoreboardByGametime.<span class="title function_">sort</span>(compareByGametime);</span><br><span class="line">        scoreboardByGametime = scoreboardByGametime.<span class="title function_">filter</span>(filterByGametime);</span><br><span class="line">        <span class="comment">//创建一个副本数组，按照xp排序，并过滤掉null值 </span></span><br><span class="line">        <span class="keyword">let</span> scoreboardByXp = [...scoreboard];</span><br><span class="line">        scoreboardByXp.<span class="title function_">sort</span>(compareByxp);</span><br><span class="line">        scoreboardByXp = scoreboardByXp.<span class="title function_">filter</span>(filterByxp);</span><br><span class="line">        <span class="comment">//遍历按照pickaxe_total排序的数组，创建表格行和单元格，并添加到对应的表格中</span></span><br><span class="line">        scoreboardByPickaxe.<span class="title function_">forEach</span>(<span class="function">(<span class="params">player, index</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> row = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;tr&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> rank = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> playerName = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> pickaxeTotal = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            rank.<span class="property">textContent</span> = index + <span class="number">1</span>;</span><br><span class="line">            playerName.<span class="property">textContent</span> = player.<span class="property">playername</span>;</span><br><span class="line">            pickaxeTotal.<span class="property">textContent</span> = player.<span class="property">pickaxe_total</span>;</span><br><span class="line"></span><br><span class="line">            row.<span class="title function_">appendChild</span>(rank);</span><br><span class="line">            row.<span class="title function_">appendChild</span>(playerName);</span><br><span class="line">            row.<span class="title function_">appendChild</span>(pickaxeTotal);</span><br><span class="line"></span><br><span class="line">            scoreboardBodyPickaxe.<span class="title function_">appendChild</span>(row);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历按照Kills排序的数组，创建表格行和单元格，并添加到对应的表格中</span></span><br><span class="line">        scoreboardByKills.<span class="title function_">forEach</span>(<span class="function">(<span class="params">player, index</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> row = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;tr&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> rank = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> playerName = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> kills = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            rank.<span class="property">textContent</span> = index + <span class="number">1</span>;</span><br><span class="line">            playerName.<span class="property">textContent</span> = player.<span class="property">playername</span>;</span><br><span class="line">            kills.<span class="property">textContent</span> = player.<span class="property">Kills</span>;</span><br><span class="line"></span><br><span class="line">            row.<span class="title function_">appendChild</span>(rank);</span><br><span class="line">            row.<span class="title function_">appendChild</span>(playerName);</span><br><span class="line">            row.<span class="title function_">appendChild</span>(kills);</span><br><span class="line"></span><br><span class="line">            scoreboardBodyKills.<span class="title function_">appendChild</span>(row);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历按照fish排序的数组，创建表格行和单元格，并添加到对应的表格中</span></span><br><span class="line">        scoreboardByFish.<span class="title function_">forEach</span>(<span class="function">(<span class="params">player, index</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> row = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;tr&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> rank = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> playerName = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> fish = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            rank.<span class="property">textContent</span> = index + <span class="number">1</span>;</span><br><span class="line">            playerName.<span class="property">textContent</span> = player.<span class="property">playername</span>;</span><br><span class="line">            fish.<span class="property">textContent</span> = player.<span class="property">fish</span>;</span><br><span class="line"></span><br><span class="line">            row.<span class="title function_">appendChild</span>(rank);</span><br><span class="line">            row.<span class="title function_">appendChild</span>(playerName);</span><br><span class="line">            row.<span class="title function_">appendChild</span>(fish);</span><br><span class="line"></span><br><span class="line">            scoreboardBodyFish.<span class="title function_">appendChild</span>(row);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历按照gametime排序的数组，创建表格行和单元格，并添加到对应的表格中</span></span><br><span class="line">        scoreboardByGametime.<span class="title function_">forEach</span>(<span class="function">(<span class="params">player, index</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> row = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;tr&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> rank = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> playerName = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> gametime = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            rank.<span class="property">textContent</span> = index + <span class="number">1</span>;</span><br><span class="line">            playerName.<span class="property">textContent</span> = player.<span class="property">playername</span>;</span><br><span class="line">            gametime.<span class="property">textContent</span> = <span class="title class_">Math</span>.<span class="title function_">floor</span>(player.<span class="property">gametime</span> / <span class="number">60</span> / <span class="number">60</span>) + <span class="string">&quot;h&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            row.<span class="title function_">appendChild</span>(rank);</span><br><span class="line">            row.<span class="title function_">appendChild</span>(playerName);</span><br><span class="line">            row.<span class="title function_">appendChild</span>(gametime);</span><br><span class="line"></span><br><span class="line">            scoreboardBodyGametime.<span class="title function_">appendChild</span>(row);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//遍历按照xp排序的数组，创建表格行和单元格，并添加到对应的表格中 </span></span><br><span class="line">        scoreboardByXp.<span class="title function_">forEach</span>(<span class="function">(<span class="params">player, index</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> row = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;tr&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> rank = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> playerName = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> xp = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            rank.<span class="property">textContent</span> = index + <span class="number">1</span>;</span><br><span class="line">            playerName.<span class="property">textContent</span> = player.<span class="property">playername</span>;</span><br><span class="line">            xp.<span class="property">textContent</span> = <span class="title function_">getLevel</span>(player.<span class="property">xp</span>);</span><br><span class="line"></span><br><span class="line">            row.<span class="title function_">appendChild</span>(rank);</span><br><span class="line">            row.<span class="title function_">appendChild</span>(playerName);</span><br><span class="line">            row.<span class="title function_">appendChild</span>(xp);</span><br><span class="line"></span><br><span class="line">            scoreboardBodyxp.<span class="title function_">appendChild</span>(row);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="comment">// 定义一个函数，参数为原始经验值</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getLevel</span>(<span class="params">exp</span>) &#123;</span><br><span class="line">    <span class="comment">// 定义一个变量，存储经验等级</span></span><br><span class="line">    <span class="keyword">let</span> level = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 定义一个变量，存储升级所需的经验值</span></span><br><span class="line">    <span class="keyword">let</span> expToNext = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 使用循环，不断更新经验等级和升级所需的经验值，直到原始经验值不足以升级为止</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="comment">// 根据公式，计算升级所需的经验值</span></span><br><span class="line">        <span class="keyword">if</span> (level &lt;= <span class="number">15</span>) &#123;</span><br><span class="line">            expToNext = <span class="number">2</span> * level + <span class="number">7</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (level &lt;= <span class="number">30</span>) &#123;</span><br><span class="line">            expToNext = <span class="number">5</span> * level - <span class="number">38</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            expToNext = <span class="number">9</span> * level - <span class="number">158</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 判断原始经验值是否足够升级</span></span><br><span class="line">        <span class="keyword">if</span> (exp &gt;= expToNext) &#123;</span><br><span class="line">            <span class="comment">// 如果足够，减去升级所需的经验值，增加经验等级</span></span><br><span class="line">            exp -= expToNext;</span><br><span class="line">            level++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 如果不足，跳出循环</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返回经验等级</span></span><br><span class="line">    <span class="keyword">return</span> level;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><p><strong>管理：</strong></p><p>如果内建账号密码登录，要增加一些工作量，所以我借鉴了一下之前某个AIGC平台的做法，向qq机器人发信息以获取有效期一周的token用于登录，这样安全性大大提高，而且写起来也不用顾虑太多。<span class="tag-plugin emoji"></span>在初次打开时网页会发送鉴权请求判断是否有效，后续请求也都带上这个token。以下是部分代码片段</p><figure class="highlight python"><figcaption><span>封禁玩家</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/admin/banplayer&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">banplayer</span>():</span><br><span class="line">    playername = request.json.get(<span class="string">&#x27;playername&#x27;</span>)</span><br><span class="line">    reason = request.json.get(<span class="string">&#x27;reason&#x27;</span>)</span><br><span class="line">...</span><br><span class="line">    <span class="keyword">if</span> reason == <span class="string">&quot;&quot;</span>:</span><br><span class="line">        reason = <span class="string">&quot;未记录原因的封禁，请联系管理员&quot;</span></span><br><span class="line"></span><br><span class="line">    command = <span class="string">&#x27;kick &#x27;</span> + playername + <span class="string">&#x27; &#x27;</span> + reason</span><br><span class="line">    response = extra.sendcommand(command)</span><br><span class="line">    command = <span class="string">&#x27;ban &#x27;</span> + playername + <span class="string">&#x27; &#x27;</span> + reason</span><br><span class="line">    response = extra.sendcommand(command)</span><br><span class="line">    conn = mysql.connector.connect(**DATABASE)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">0</span>,<span class="string">&#x27;response&#x27;</span>: response&#125;), <span class="number">200</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>extra.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mcrcon</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主机 密码 端口</span></span><br><span class="line">client = mcrcon.MCRcon(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="string">&#x27;*-*-*-*&#x27;</span>, <span class="number">2</span>****<span class="number">5</span>)</span><br><span class="line">client.connect()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sendcommand</span>(<span class="params">command</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> command:</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&#x27;error&#x27;</span>: <span class="string">&#x27;No command provided&#x27;</span>&#125;</span><br><span class="line">    </span><br><span class="line">    response = client.command(command)</span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>解除封禁</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/admin/debanplayer&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">debanplayer</span>():</span><br><span class="line">    playername = request.json.get(<span class="string">&#x27;playername&#x27;</span>)</span><br><span class="line">...</span><br><span class="line">    command = <span class="string">&#x27;pardon &#x27;</span> + playername</span><br><span class="line">    response = extra.sendcommand(command)</span><br><span class="line">    conn = mysql.connector.connect(**DATABASE)</span><br><span class="line">...</span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">0</span>,<span class="string">&#x27;response&#x27;</span>: response&#125;), <span class="number">200</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>获取用户信息</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ipdb</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/admin/getaccount&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getaccount</span>():</span><br><span class="line">    accountinfo = request.json.get(<span class="string">&#x27;accountinfo&#x27;</span>)</span><br><span class="line">    mode = <span class="built_in">int</span>(request.json.get(<span class="string">&#x27;mode&#x27;</span>))</span><br><span class="line">...</span><br><span class="line">    conn = mysql.connector.connect(**DATABASE)</span><br><span class="line">    c = conn.cursor()</span><br><span class="line">    <span class="keyword">if</span> mode == <span class="number">1</span>:</span><br><span class="line">        c.execute(<span class="string">&quot;SELECT * FROM `qq_user` where qq_id = %s&quot;</span>, (accountinfo,))</span><br><span class="line">    <span class="keyword">elif</span> mode == <span class="number">2</span>:</span><br><span class="line">        c.execute(<span class="string">&quot;SELECT * FROM `qq_user` where user_name = %s&quot;</span>, (accountinfo,))</span><br><span class="line">    <span class="keyword">elif</span> mode == <span class="number">3</span>:</span><br><span class="line">        c.execute(<span class="string">&quot;SELECT * FROM `qq_user` where be_name = %s&quot;</span>, (accountinfo,))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        c.execute(<span class="string">&quot;SELECT * FROM `qq_user` where qq_id = %s&quot;</span>, (accountinfo,))</span><br><span class="line">    acc_result = c.fetchall()</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> acc_result:</span><br><span class="line">        <span class="keyword">if</span> acc_result[<span class="number">0</span>][<span class="number">5</span>] <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            be_name = <span class="string">&quot;!未绑定!&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            be_name = acc_result[<span class="number">0</span>][<span class="number">5</span>]</span><br><span class="line">        playername = acc_result[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">        <span class="comment"># 用的MySQL数据库，Authme和该服务共用一个数据库，因此直接调用其获取IP</span></span><br><span class="line">        c.execute(<span class="string">&quot;SELECT * FROM `authme` where realname = %s or username = %s&quot;</span>, (playername,playername,))</span><br><span class="line">        ip_result = c.fetchall()</span><br><span class="line">        conn.close()</span><br><span class="line">        <span class="comment">#嵌套有点多，整活部分可以改掉</span></span><br><span class="line">        <span class="keyword">if</span> ip_result:</span><br><span class="line">            ip = ip_result[<span class="number">0</span>][<span class="number">4</span>]</span><br><span class="line">            <span class="keyword">if</span> ipaddress.ip_address(ip).is_private:</span><br><span class="line">                ip = <span class="string">&quot;内网地址&quot;</span></span><br><span class="line">                country=<span class="string">&quot;南极洲&quot;</span></span><br><span class="line">                city=<span class="string">&quot;中山站&quot;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ipinfo=db.find_map(ip, <span class="string">&quot;CN&quot;</span>)</span><br><span class="line">                country=ipinfo[<span class="string">&quot;country_name&quot;</span>]</span><br><span class="line">                city= ipinfo[<span class="string">&quot;region_name&quot;</span>]+<span class="string">&quot;，&quot;</span>+ipinfo[<span class="string">&quot;city_name&quot;</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = <span class="string">&quot;!未记录在数据库!&quot;</span></span><br><span class="line">            country=<span class="string">&quot;北极点&quot;</span></span><br><span class="line">            city=<span class="string">&quot;鹦鹉螺号&quot;</span></span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">0</span>,<span class="string">&#x27;qq&#x27;</span>: acc_result[<span class="number">0</span>][<span class="number">0</span>],<span class="string">&#x27;user_name&#x27;</span>: playername,<span class="string">&#x27;bind_time&#x27;</span>: acc_result[<span class="number">0</span>][<span class="number">2</span>],<span class="string">&#x27;group&#x27;</span>: acc_result[<span class="number">0</span>][<span class="number">3</span>],<span class="string">&#x27;status&#x27;</span>: acc_result[<span class="number">0</span>][<span class="number">4</span>],<span class="string">&#x27;be_name&#x27;</span>: be_name,<span class="string">&#x27;ip&#x27;</span>: ip,<span class="string">&#x27;country&#x27;</span>:country,<span class="string">&#x27;city&#x27;</span>:city&#125;), <span class="number">200</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        conn.close()</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">1000</span>,<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;没有相应玩家消息&#x27;</span>&#125;), <span class="number">200</span></span><br></pre></td></tr></table></figure><div class="tag-plugin quot"><h3 class="content" id="QQ-BOT" type="icon"><a href="#QQ-BOT" class="headerlink" title="QQ-BOT"></a><img class="icon prefix" src="https://onep.hzchu.top/mount/pic/2024/02/11/65c8e5059a363.webp" /><span class="text">QQ-BOT</span><span class="empty"></span></h3></div><p>在整个规划中，它承担了相当重要的责任，譬如自动添加白名单（绑定）</p><p><img src="https://onep.hzchu.top/mount/pic/2024/02/11/65c8e69a32833.webp" alt="绑定与解绑"></p><p> <img src="https://onep.hzchu.top/mount/pic/2024/02/12/65c9acd876283.webp" alt="目录结构"></p><p><strong>绑定：</strong>一开始我使用了一个极为简单的绑定方式：通过Rcon连接到服务器执行 <code>whitelist add playername</code>，按理来说这没问题，但是后面来的玩家基本都在抱怨进不去服务器。错误截图都一样，不在白名单内。最后发现uuid不一致，有些人的离线用户名与某些正版用户名重复了，导致服务端直接沿用正版用户的uuid，过不去后续校验。所以我这里就直接计算离线用户的uuid写入到<code>whitelist.json</code>内</p><figure class="highlight python"><figcaption><span>mchelper\__init__.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@bind.handle()</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">handle_first_receive</span>(<span class="params">matcher: Matcher, args: Message = CommandArg(<span class="params"></span>)</span>):</span><br><span class="line">    plain_text = args.extract_plain_text()  <span class="comment"># 首次发送命令时跟随的参数，例：/绑定 username，则args为username</span></span><br><span class="line">    <span class="keyword">if</span> plain_text:</span><br><span class="line">        matcher.set_arg(<span class="string">&quot;username&quot;</span>, args)  <span class="comment"># 如果用户发送了参数则直接赋值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@bind.got(<span class="params"><span class="string">&quot;username&quot;</span>, prompt=<span class="string">&quot;请输入你的用户名&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">handle_username</span>(<span class="params">event: GroupMessageEvent, username: Message = Arg(<span class="params"></span>), username_str: <span class="built_in">str</span> = ArgPlainText(<span class="params"><span class="string">&quot;username&quot;</span></span>)</span>):</span><br><span class="line">    username = <span class="built_in">str</span>(username)</span><br><span class="line">    user_id = event.user_id</span><br><span class="line"></span><br><span class="line">    pattern = <span class="string">r&#x27;^[a-zA-Z0-9_]+$&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> re.<span class="keyword">match</span>(pattern, username):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        extra.settimeout()</span><br><span class="line">        <span class="keyword">await</span> bind.finish(<span class="string">f&quot;用户名只可以包括英文字母，数字，下划线&quot;</span>)</span><br><span class="line">...</span><br><span class="line">    binduser(username)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> bind.finish(<span class="string">f&quot;<span class="subst">&#123;username&#125;</span> 绑定成功（若仍无法进入服务器，可尝试发送“正常流程绑定”）&quot;</span>)</span><br><span class="line">    <span class="comment"># 即用whitelist add</span></span><br><span class="line">            </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">binduser</span>(<span class="params">playername</span>):</span><br><span class="line">    offline_uuid = <span class="built_in">str</span>(extra.touuid(playername))</span><br><span class="line">    <span class="comment">#offline_uuid = offline_uuid_raw[:8] + &quot;-&quot; + offline_uuid_raw[8:12] + &quot;-&quot; + offline_uuid_raw[12:16] + &quot;-&quot; + offline_uuid_raw[16:20] + &quot;-&quot; + offline_uuid_raw[20:]</span></span><br><span class="line">    <span class="comment">#读取 ***\whitelist.json,找到playername对应的uuid，用offline_uuid替换</span></span><br><span class="line">    whitelist_file_path = <span class="string">r&quot;Z:\server\whitelist.json&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(whitelist_file_path, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = json.load(f)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 先尝试是否能找到对应玩家名称的条目，并替换uuid字段，如果没有，则新增</span></span><br><span class="line">    found = <span class="literal">False</span> <span class="comment"># 定义一个变量，用来标记是否找到了对应的玩家条目</span></span><br><span class="line">    <span class="keyword">for</span> player <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">if</span> player[<span class="string">&quot;name&quot;</span>] == playername:</span><br><span class="line">            player[<span class="string">&quot;uuid&quot;</span>] = offline_uuid <span class="comment"># 替换uuid字段</span></span><br><span class="line">            found = <span class="literal">True</span> <span class="comment"># 将变量设为True，表示找到了对应的玩家条目</span></span><br><span class="line">            <span class="keyword">break</span> <span class="comment"># 跳出循环，不再继续查找</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> found: <span class="comment"># 如果变量为False，表示没有找到对应的玩家条目</span></span><br><span class="line">        data.append(&#123;<span class="string">&quot;name&quot;</span>: playername, <span class="string">&quot;uuid&quot;</span>: offline_uuid&#125;) <span class="comment"># 在data列表中添加一个新的字典，包含玩家的名字和uuid</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将修改后的内容写回whitelist.json文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(whitelist_file_path, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        json.dump(data, f)</span><br><span class="line">    <span class="comment"># 调用外部命令来重载白名单</span></span><br><span class="line">    client.connect()</span><br><span class="line">    command = <span class="string">&quot;whitelist reload&quot;</span></span><br><span class="line">    response = client.command(command)</span><br><span class="line">    client.disconnect()</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>mchelper\extra.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"></span><br><span class="line"><span class="comment">#该函数用于计算离线用户的uuid</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">touuid</span>(<span class="params">name</span>):</span><br><span class="line">    name = <span class="string">&quot;OfflinePlayer:&quot;</span> + name</span><br><span class="line">    md5 = hashlib.md5()</span><br><span class="line">    md5.update(name.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    md5_bytes = md5.digest()</span><br><span class="line"></span><br><span class="line">    md5_bytes = <span class="built_in">bytearray</span>(md5_bytes) </span><br><span class="line"></span><br><span class="line">    md5_bytes[<span class="number">6</span>] &amp;= <span class="number">0x0f</span></span><br><span class="line">    md5_bytes[<span class="number">6</span>] |= <span class="number">0x30</span></span><br><span class="line">    md5_bytes[<span class="number">8</span>] &amp;= <span class="number">0x3f</span></span><br><span class="line">    md5_bytes[<span class="number">8</span>] |= <span class="number">0x80</span> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> uuid.UUID(<span class="built_in">bytes</span>=<span class="built_in">bytes</span>(md5_bytes))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>解绑：</strong>其实差不了多少</p><figure class="highlight python"><figcaption><span>mchelper\__init__.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">debinduser</span>(<span class="params">playername</span>):</span><br><span class="line">    offline_uuid = <span class="built_in">str</span>(extra.touuid(playername))</span><br><span class="line">    whitelist_file_path = <span class="string">r&quot;Z:\server\whitelist.json&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(whitelist_file_path, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = json.load(f)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> player <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">if</span> player[<span class="string">&quot;name&quot;</span>] == playername:</span><br><span class="line">            data.remove(player) <span class="comment"># 移除该条目</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将修改后的内容写回whitelist.json文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(whitelist_file_path, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        json.dump(data, f)</span><br><span class="line">    <span class="comment"># 调用外部命令来重载白名单</span></span><br><span class="line">    client.connect()</span><br><span class="line">    command = <span class="string">&quot;whitelist reload&quot;</span></span><br><span class="line">    response = client.command(command)</span><br><span class="line">    client.disconnect()</span><br></pre></td></tr></table></figure><p><strong>图片上传：</strong></p><pre class="mermaid">flowchart LR    A[User] -->|"@BOT+图片"| B["nb2-mchelper"]    B <-->|"upgit"| C("pic.hzchu.top(lysk pro)")    B --> D["MySQL"]</pre><figure class="highlight python"><figcaption><span>mchelper\__init__.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">upphoto = on_message(rule=to_me(), priority=<span class="number">5</span>, block=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@upphoto.handle()</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">handle_upphoto</span>(<span class="params">bot: Bot, event: GroupMessageEvent, state: T_State</span>):</span><br><span class="line">    user_id = event.user_id</span><br><span class="line">    message = <span class="built_in">str</span>(event.get_message())</span><br><span class="line">    conn = mysql.connector.connect(**DATABASE)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(message)</span></span><br><span class="line">    <span class="keyword">if</span> message:</span><br><span class="line">        <span class="keyword">if</span> matches:</span><br><span class="line">            pattern = <span class="string">r&quot;\[CQ:image,file=\w+\.image,subType=\d+,url=(https?://\S+?)]&quot;</span></span><br><span class="line">            matches = re.findall(pattern, message)</span><br><span class="line">            current_time = time.strftime(<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>, time.localtime(time.time()))</span><br><span class="line">            <span class="comment"># print(matches)</span></span><br><span class="line">            <span class="keyword">for</span> <span class="keyword">match</span> <span class="keyword">in</span> matches:</span><br><span class="line">                <span class="comment"># print(match)</span></span><br><span class="line">                </span><br><span class="line">                file_name =  <span class="built_in">str</span>(user_id) + <span class="built_in">str</span>(time.time() * <span class="number">1000</span>)+<span class="string">&quot;.jpg&quot;</span></span><br><span class="line">                save_path = <span class="string">&#x27;./tmp/&#x27;</span> + file_name</span><br><span class="line">                response = requests.get(<span class="keyword">match</span>, stream=<span class="literal">True</span>)</span><br><span class="line">                <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">                    <span class="keyword">with</span> <span class="built_in">open</span>(save_path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">                        <span class="keyword">for</span> chunk <span class="keyword">in</span> response.iter_content(<span class="number">1024</span>):</span><br><span class="line">                            file.write(chunk)</span><br><span class="line">                    path = <span class="string">&quot;Z:\\nb2\\mc\\tmp\\&quot;</span> + file_name</span><br><span class="line">                    response = extra.upload_image(path)</span><br><span class="line">                    <span class="keyword">if</span> response.startswith(<span class="string">&quot;https://&quot;</span>):</span><br><span class="line">                        url = response</span><br><span class="line">                        c = conn.cursor()</span><br><span class="line">                        c.execute(<span class="string">&quot;INSERT INTO photo VALUES (%s,%s,%s,%s,%s)&quot;</span>, (<span class="literal">None</span>, <span class="built_in">str</span>(event.sender.card),user_id, current_time, url))</span><br><span class="line">                        conn.commit()</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        conn.disconnect()</span><br><span class="line">                        <span class="keyword">await</span> upphoto.finish(<span class="string">&quot;上传失败（调用上传工具错误）&quot;</span>)</span><br><span class="line">                    os.remove(path)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    conn.disconnect()</span><br><span class="line">                    <span class="keyword">await</span> upphoto.finish(<span class="string">&quot;上传失败(请求图片错误)&quot;</span>)</span><br><span class="line">            conn.disconnect()</span><br><span class="line">            <span class="keyword">await</span> upphoto.finish(<span class="string">&quot;上传成功&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            conn.disconnect()</span><br><span class="line">            <span class="keyword">return</span>  <span class="comment"># 没有图片链接，不执行回复操作</span></span><br></pre></td></tr></table></figure><p><strong>聊天记录同步：</strong></p><figure class="highlight python"><figcaption><span>send\__init__.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> on_message, logger</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.onebot.v11 <span class="keyword">import</span> GroupMessageEvent, Bot,MessageSegment</span><br><span class="line"><span class="keyword">from</span> nonebot.rule <span class="keyword">import</span> startswith</span><br><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> get_driver</span><br><span class="line"><span class="keyword">import</span> mcrcon</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msg_matcher = on_message(priority=<span class="number">10</span>, block=<span class="literal">False</span>)</span><br><span class="line">client = mcrcon.MCRcon(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="string">&#x27;******&#x27;</span>, <span class="number">2</span>***<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sendcommand</span>(<span class="params">command</span>):</span><br><span class="line">    response = client.command(command)</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="meta">@msg_matcher.handle()</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">_</span>(<span class="params">bot: Bot, event: GroupMessageEvent</span>):</span><br><span class="line">    <span class="keyword">if</span> event.group_id == <span class="number">790118052</span>:</span><br><span class="line">        nick = <span class="built_in">str</span>(event.sender.card)</span><br><span class="line">        <span class="keyword">if</span> nick == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            nick = <span class="built_in">str</span>(event.sender.nickname)</span><br><span class="line">        msg = nick+<span class="string">&quot;:&quot;</span>+replace(event.message)</span><br><span class="line">        qqqq = <span class="string">&quot;[Q群]&quot;</span></span><br><span class="line">        msg =<span class="string">f&#x27;[&#123;&#123;&quot;text&quot;:&quot;<span class="subst">&#123;qqqq&#125;</span>&quot;,&quot;color&quot;:&quot;gold&quot;&#125;&#125;,&#123;&#123;&quot;text&quot;:&quot;<span class="subst">&#123;msg&#125;</span>&quot;,&quot;color&quot;:&quot;white&quot;&#125;&#125;]&#x27;</span></span><br><span class="line">        command=<span class="string">f&quot;tellraw @a [<span class="subst">&#123;msg&#125;</span>]&quot;</span></span><br><span class="line">        <span class="comment"># print(command)</span></span><br><span class="line">        sendcommand(command)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个函数，接受一个文本参数，返回替换后的文本</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">replace</span>(<span class="params">text</span>):</span><br><span class="line">  text = <span class="built_in">str</span>(text)</span><br><span class="line"></span><br><span class="line">  image_pattern = <span class="string">r&quot;\[CQ:image,file=.+?image,subType=0,url=.+?\]&quot;</span></span><br><span class="line"></span><br><span class="line">  at_pattern = <span class="string">r&quot;\[CQ:at,qq=\d+\]&quot;</span></span><br><span class="line"></span><br><span class="line">  picface_pattern = <span class="string">r&quot;\[CQ:image,file=.+?image,subType=1,url=.+?\]&quot;</span></span><br><span class="line">  face_pattern = <span class="string">r&quot;\[CQ:face,id=.+?]&quot;</span></span><br><span class="line"></span><br><span class="line">  record_pattern = <span class="string">r&quot;\[CQ:record,file=.+?amr,url=.+?\]&quot;</span></span><br><span class="line">  redbag_pattern = <span class="string">r&quot;\[CQ:redbag,title=.+?\]&quot;</span></span><br><span class="line">  shit_pattern = <span class="string">r&quot;请使用最新版手机QQ体验新功能&quot;</span></span><br><span class="line"></span><br><span class="line">  result = re.sub(image_pattern, <span class="string">&quot;[图片]&quot;</span>, text)</span><br><span class="line"></span><br><span class="line">  result = re.sub(picface_pattern, <span class="string">&quot;[图片表情]&quot;</span>, result)</span><br><span class="line">  result = re.sub(face_pattern, <span class="string">&quot;[表情]&quot;</span>, result)</span><br><span class="line">  result = re.sub(at_pattern, <span class="string">&quot;@&quot;</span>, result)</span><br><span class="line"></span><br><span class="line">  result = re.sub(record_pattern, <span class="string">&quot;[语音]&quot;</span>, result)</span><br><span class="line"></span><br><span class="line">  result = re.sub(redbag_pattern, <span class="string">&quot;[红包]&quot;</span>, result)</span><br><span class="line"></span><br><span class="line">  result = re.sub(shit_pattern, <span class="string">&quot;不支持的信息类型&quot;</span>, result)</span><br><span class="line">  result = result.replace(<span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;《&quot;</span>).replace(<span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;》&quot;</span>)</span><br><span class="line">  <span class="comment"># 返回替换后的结果</span></span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">connectagain</span>():</span><br><span class="line">    client.connect()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_timer</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 每5分钟执行一次</span></span><br><span class="line">        time.sleep(<span class="number">5</span> * <span class="number">60</span>)</span><br><span class="line">        <span class="comment"># 在后台线程中执行需要定时执行的函数</span></span><br><span class="line">        threading.Thread(target=connectagain).start()</span><br><span class="line"><span class="comment"># 避免重复执行使得后台刷屏</span></span><br><span class="line">connectagain()</span><br><span class="line">timer_thread = threading.Thread(target=run_timer)</span><br><span class="line">timer_thread.daemon = <span class="literal">True</span></span><br><span class="line">timer_thread.start()</span><br></pre></td></tr></table></figure><div class="tag-plugin quot"><h3 class="content" id="杂项" type="icon"><a href="#杂项" class="headerlink" title="杂项"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" /><span class="text">杂项</span><span class="empty"></span></h3></div><ol><li>备份相关：</li></ol><p>由于之前存档炸过一次，相关的备份措施也随之建立起来。可分为主动式和被动式。主动式嘛，好说，不就是手动关掉自动保存然后压缩到一个独立硬盘嘛</p><p>被动的话就是用Syncthing进行单向同步，目前，我设置了2台设备用于备份</p><pre class="mermaid">flowchart LR    A[Game Server] -->|"有更改时同步"| B("B Server")    A[Game Server] -->|"2h全部同步"| C    C("A Server")-->|"有更改时同步"|B</pre><p>也用过git，但同步太耗性能了，遂放弃</p><ol start="2"><li>自动节能</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> psutil</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> mcstatus <span class="keyword">import</span> JavaServer</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"></span><br><span class="line">BALANCE = <span class="string">&#x27;381b4222-f694-41f0-9685-ff5bb260df2e&#x27;</span></span><br><span class="line">HIGH_PERFORMANCE = <span class="string">&#x27;8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c&#x27;</span></span><br><span class="line">ENERGY_SAVER = <span class="string">&#x27;a1841308-3541-4fab-bc81-f71556f20b4a&#x27;</span></span><br><span class="line">redis_client = redis.Redis(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">6379</span>, db=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">server = JavaServer.lookup(<span class="string">&quot;127.0.0.1:26565&quot;</span>)</span><br><span class="line">people = <span class="number">1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_power_plan</span>(<span class="params">plan</span>):</span><br><span class="line">    subprocess.run(<span class="string">f&#x27;powercfg /S <span class="subst">&#123;plan&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_power_plan</span>():</span><br><span class="line">    output = subprocess.run(<span class="string">&quot;powercfg /GETACTIVESCHEME&quot;</span>, shell=<span class="literal">True</span>, stdout=subprocess.PIPE).stdout.decode(<span class="string">&quot;GBK&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> output.split(<span class="string">&quot; &quot;</span>)[-<span class="number">3</span>]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">what_power_plan</span>(<span class="params">plan</span>):</span><br><span class="line">    <span class="keyword">if</span> plan == BALANCE:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;BALANCE&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> plan == ENERGY_SAVER:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ENERGY_SAVER&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> plan == HIGH_PERFORMANCE:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;HIGH_PERFORMANCE&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Unknown&quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">what_power_planid</span>(<span class="params">plan</span>):</span><br><span class="line">    <span class="keyword">if</span> plan == <span class="string">&quot;BALANCE&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> BALANCE</span><br><span class="line">    <span class="keyword">elif</span> plan == <span class="string">&quot;ENERGY_SAVER&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> ENERGY_SAVER</span><br><span class="line">    <span class="keyword">elif</span> plan == <span class="string">&quot;HIGH_PERFORMANCE&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> HIGH_PERFORMANCE</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Unknown&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    current_time = time.strftime(<span class="string">&quot;%H:%M:%S&quot;</span>, time.localtime())</span><br><span class="line">    plan = get_power_plan()</span><br><span class="line">    mcserve_plan = redis_client.get(<span class="string">&#x27;powerplan&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> mcserve_plan <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        cpu_percent = psutil.cpu_percent()</span><br><span class="line">        status = server.status()</span><br><span class="line">        hour = <span class="built_in">int</span>(current_time.split(<span class="string">&quot;:&quot;</span>)[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span> hour &gt;= <span class="number">0</span> <span class="keyword">and</span> hour &lt;= <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">if</span> plan != ENERGY_SAVER:</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">str</span>(current_time) + <span class="string">&quot;：切换到节能模式&quot;</span>)</span><br><span class="line">                change_power_plan(ENERGY_SAVER)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> status.players.online &gt; <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">if</span> plan != HIGH_PERFORMANCE:</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">str</span>(current_time) + <span class="string">&quot;：多人，切换到高性能模式&quot;</span>)</span><br><span class="line">                change_power_plan(HIGH_PERFORMANCE)</span><br><span class="line">        <span class="keyword">elif</span> status.players.online &gt; people:</span><br><span class="line">            <span class="keyword">if</span> plan != BALANCE:</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">str</span>(current_time) + <span class="string">&quot;：有人，切换到平衡模式&quot;</span>)</span><br><span class="line">                change_power_plan(BALANCE)</span><br><span class="line">        <span class="keyword">elif</span> cpu_percent &gt; <span class="number">70</span>:</span><br><span class="line">            <span class="keyword">if</span> plan != HIGH_PERFORMANCE:</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">str</span>(current_time) + <span class="string">&quot;：CPU占用过高，切换到平衡模式&quot;</span>)</span><br><span class="line">                change_power_plan(BALANCE)</span><br><span class="line">        <span class="keyword">elif</span> status.players.online &lt;= people:</span><br><span class="line">            <span class="keyword">if</span> plan != ENERGY_SAVER:</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">str</span>(current_time) + <span class="string">&quot;：无人，切换到节能模式&quot;</span>)</span><br><span class="line">                change_power_plan(ENERGY_SAVER)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> plan != BALANCE:</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">str</span>(current_time) + <span class="string">&quot;：切换到平衡模式&quot;</span>)</span><br><span class="line">                change_power_plan(BALANCE)</span><br><span class="line">    <span class="keyword">if</span> mcserve_plan <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        decoded_mcserve_plan = mcserve_plan.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> what_power_plan(plan) == decoded_mcserve_plan:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            power_plan_id = what_power_planid(decoded_mcserve_plan)</span><br><span class="line">            change_power_plan(power_plan_id)</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">str</span>(current_time) + <span class="string">&quot;：MCSERVE覆盖配置，切换到&quot;</span> + decoded_mcserve_plan + <span class="string">&quot;计划&quot;</span>)</span><br><span class="line"></span><br><span class="line">    time.sleep(<span class="number">300</span>)</span><br></pre></td></tr></table></figure><pre class="mermaid">graph TB    A["开始"]    B{"获取mcserve_plan"}    C{"mcserve_plan为空"}    D["获取当前时间、电源计划、CPU占用率和服务器状态"]    E{"时间在0-5点"}    F{"在线人数大于3"}    G{"在线人数大于1"}    H{"CPU占用率大于70%"}    I{"在线人数小于等于1"}    J["切换到节能模式"]    K["切换到高性能模式"]    L["切换到平衡模式"]    M["切换到节能模式"]    N["切换到平衡模式"]    O{"mcserve_plan不为空"}    Q["根据mcserve_plan切换电源计划"]    R["结束"]    A-->B    B-->C    C--是-->D    D-->E    E--是-->J    E--否-->F    F--是-->K    F--否-->G    G--是-->L    G--否-->H    H--"是（后来临时修改）"-->L    H--否-->I    I--是-->M    I--否-->N    C--否-->O    O--是-->R    O--否-->Q    Q-->R</pre><blockquote><p>注：在部分情况下（如E5）使用高性能模式会使单核最高睿频下降，反而不利，可自行抉择</p></blockquote><ol start="3"><li>未开发完成功能</li></ol><ul><li><strong>[WEB]小黑屋：</strong> 在实行<code>白名单</code>后破坏性外挂直接绝迹，直接鸽了。</li><li><strong>[WEB]假人管理：</strong>后来人也绝迹了，鸽</li><li><strong>[WEB]成就：</strong>鸽</li><li><strong>[WEB]自检：</strong> 用于检查一开始结构图中各个部分的运行情况，后来发现都正常的很，遂鸽.</li><li><strong>[MCDR]实体追踪器：</strong>鸽</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>​逝去的事物，只是换了个形式陪伴在你我身边。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatheart.png"/></span></p><p>​<strong>相册（多图预警）</strong></p><div class="tag-plugin gallery grid-box" size="mix" ratio="square"><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/06/22/6494658d39c93.webp" alt="THEOSMANTHUSWINE()_1687446921569.9314.webp"/><div class="image-meta"><span class="image-caption">THEOSMANTHUSWINE()_1687446921569.9314.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/06/22/6494678037ccc.webp" alt="H_Skippy（原Yangyyx）()_1687447421090.0547.webp"/><div class="image-meta"><span class="image-caption">H_Skippy（原Yangyyx）()_1687447421090.0547.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/06/22/649467851b891.webp" alt="H_Skippy（原Yangyyx）()_1687447425470.0432.webp"/><div class="image-meta"><span class="image-caption">H_Skippy（原Yangyyx）()_1687447425470.0432.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/06/22/649467889d7bc.webp" alt="H_Skippy（原Yangyyx）()_1687447430099.4773.webp"/><div class="image-meta"><span class="image-caption">H_Skippy（原Yangyyx）()_1687447430099.4773.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/06/22/6494678b7dfa4.webp" alt="H_Skippy（原Yangyyx）()_1687447433416.5522.webp"/><div class="image-meta"><span class="image-caption">H_Skippy（原Yangyyx）()_1687447433416.5522.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/06/22/6494678e5d823.webp" alt="H_Skippy（原Yangyyx）()_1687447436391.867.webp"/><div class="image-meta"><span class="image-caption">H_Skippy（原Yangyyx）()_1687447436391.867.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/06/22/649467915a61f.webp" alt="H_Skippy（原Yangyyx）()_1687447439140.172.webp"/><div class="image-meta"><span class="image-caption">H_Skippy（原Yangyyx）()_1687447439140.172.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/06/22/64946794e9347.webp" alt="H_Skippy（原Yangyyx）()_1687447442236.669.webp"/><div class="image-meta"><span class="image-caption">H_Skippy（原Yangyyx）()_1687447442236.669.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/07/09/64a9ed6c50c22.webp" alt="2644.webp"/><div class="image-meta"><span class="image-caption">2644.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/07/09/64a9ed9c3ad38.webp" alt="726.webp"/><div class="image-meta"><span class="image-caption">726.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/07/09/64a9ed9f54362.webp" alt="821.webp"/><div class="image-meta"><span class="image-caption">821.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/07/09/64a9eda62b4d3.webp" alt="192.webp"/><div class="image-meta"><span class="image-caption">192.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/07/09/64a9eda98c3bd.webp" alt="1228.webp"/><div class="image-meta"><span class="image-caption">1228.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/07/09/64aa6b4872aab.webp" alt="5107.webp"/><div class="image-meta"><span class="image-caption">5107.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/07/09/64aa6b4e18551.webp" alt="2917.webp"/><div class="image-meta"><span class="image-caption">2917.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/07/09/64aa966c95dda.webp" alt="8945.webp"/><div class="image-meta"><span class="image-caption">8945.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/07/16/64b3d29485703.webp" alt="1045.webp"/><div class="image-meta"><span class="image-caption">1045.webp</span></div></div><div class="grid-cell"><img data-fancybox="gallery-1" src="https://onep.hzchu.top/mount/pic/2023/07/18/64b6a0da75e70.webp" alt="9756.webp"/><div class="image-meta"><span class="image-caption">9756.webp</span></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;​	2023年的暑假，在我百般聊赖之际，网上冲浪时刷到了一个 mc服务器的视频。于是呼，心里萌发了一个想法——建立一个属于自己的服务器。在考</summary>
      
    
    
    
    
    <category term="python" scheme="https://blog.hzchu.top/tags/python/"/>
    
    <category term="MC" scheme="https://blog.hzchu.top/tags/MC/"/>
    
  </entry>
  
  <entry>
    <title>Mirouterui简要部署指南</title>
    <link href="https://blog.hzchu.top/2023/howtorunmrui/"/>
    <id>https://blog.hzchu.top/2023/howtorunmrui/</id>
    <published>2023-08-28T15:25:56.000Z</published>
    <updated>2023-08-28T15:25:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>该项目是由于我厌倦了管理后台和APP的卡顿而写的，因此项目开发之初就<strong>不考虑集成在管理后台</strong>，做成一个<strong>独立</strong>的页面，并实现跨平台。</p><p>并且，调用的都是小米路由器<strong>独有</strong>的api接口，与Openwrt<strong>完全不兼容</strong>。</p><p>用于测试的只有r1d和r4a，对于别的型号的支持，还得看大家的反馈才能完善。</p><p>感谢<code>YSC6666，黑衣剑士z，Super丶聪(@bilibili)</code>的帮助</p><p>代码开源在 <a href="https://github.com/Mirouterui/">https://github.com/Mirouterui/</a> ，欢迎 star&amp;提prヾ(≧▽≦*)o</p><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Mirouterui/mirouter-ui"><img src="https://github-readme-stats.xaoxuu.com/api/pin/?username=Mirouterui&repo=mirouter-ui&theme=white&show_owner=true"/></a></div><blockquote><p>碍于实际需求，拿一台瘦客户机装了个ikuai，这个项目先鸽了</p></blockquote><h2 id="面板展示"><a href="#面板展示" class="headerlink" title="面板展示"></a>面板展示</h2><div class="tag-plugin tabs" align="center"id="tab_1"><div class="nav-tabs"><div class="tab active"><a href="#tab_1-1">首页</a></div><div class="tab"><a href="#tab_1-2">路由器详情</a></div><div class="tab"><a href="#tab_1-3">设备列表</a></div><div class="tab"><a href="#tab_1-4">设备详情</a></div><div class="tab"><a href="#tab_1-5">温度显示（仅支持部分设备）</a></div><div class="tab"><a href="#tab_1-6">历史数据统计</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_1-1"><p><img src="https://onep.hzchu.top/mount/pic/2023/08/29/64eda7065545f.webp" alt="首页"></p></div><div class="tab-pane" id="tab_1-2"><p><img src="https://onep.hzchu.top/mount/pic/2023/08/29/64eda5d44eefa.webp" alt="路由器详情"></p></div><div class="tab-pane" id="tab_1-3"><p><img src="https://onep.hzchu.top/mount/pic/2023/08/29/64eda5d0ed93e.webp" alt="设备列表"></p></div><div class="tab-pane" id="tab_1-4"><p><img src="https://onep.hzchu.top/mount/pic/2023/08/29/64eda5d396d7e.webp" alt="设备详情"></p></div><div class="tab-pane" id="tab_1-5"><p><img src="https://onep.hzchu.top/mount/pic/2023/08/29/64eda75443b5e.webp" alt="温度显示"></p></div><div class="tab-pane" id="tab_1-6"><p><img src="https://onep.hzchu.top/mount/pic/2023/12/16/657da564382fb.webp" alt="history_index.webp"></p></div></div></div><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><blockquote><p>小米路由器是基于Openwrt的，故下文Openwrt仅指小米路由器<br>附：<br>​<img src="https://onep.hzchu.top/mount/pic/2023/08/28/64ec662280acf.webp"></p></blockquote><div class="tag-plugin tabs" align="center"id="tab_2"><div class="nav-tabs"><div class="tab active"><a href="#tab_2-1">Windows</a></div><div class="tab"><a href="#tab_2-2">Openwrt</a></div><div class="tab"><a href="#tab_2-3">Docker</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_2-1"><p>从<a href="https://github.com/thun888/mirouter-ui/releases/">Release</a>下载对应的架构的发行版</p><blockquote><p>64位：amd64，32位：i386，arm: arm</p><p>可访问<a href="https://h5ai.hzchu.top/Mirouter-ui/">镜像站</a>以获取更快的速度</p></blockquote><p>然后运行，程序会自动下载配置文件，在其中填上密码即可。配置文件中其它条目在下面</p><p><img src="https://onep.hzchu.top/mount/pic/2023/08/29/64ed9a2394601.gif"></p><p>再次运行，等待下载页面静态文件，若能支持获取token即为成功</p><p><img src="https://onep.hzchu.top/mount/pic/2023/08/29/64ed9a23945b0.gif"></p><blockquote><p>部分设备出现无法运行&amp;无法找到配置文件可使用“不使用upx压缩”版本（即带<code>_noupx</code>后缀的版本）</p></blockquote></div><div class="tab-pane" id="tab_2-2"><p>从<a href="https://d.hzchu.top/e">Release</a>复制对应的架构的发行版的下载链接</p><blockquote><p>使用<code>uname –a</code>查看架构（如果为<code>armv7l</code>，考虑使用<code>armv5</code>版本）</p></blockquote><p><img src="https://onep.hzchu.top/mount/pic/2023/08/29/64ed9b78dbe91.webp" alt="R1D"></p><p>运行：</p><blockquote><p>curl –L yourlink –o mirouterui</p><p>chmod 777 mirouterui</p><p>.&#x2F;mirouterui</p></blockquote><p>程序会自动下载配置文件，在其中填上密码即可。配置文件中其它条目在下面。.</p><p>再次运行，等待下载页面静态文件</p><p>若能支持获取token即为成功</p><p><strong>常见问题：</strong></p><ol><li>无法下载配置文件，<del>路由器太老了</del></li></ol><p><img src="https://onep.hzchu.top/mount/pic/2023/08/29/64ed9e59288c3.webp"></p><blockquote><p>使用 <code>curl https://mruiapi.hzchu.top/downloadconfig -o config.json</code> 手动下载</p></blockquote><ol start="2"><li>无法下载配置文件</li></ol><p>从<a href="https://d.hzchu.top/d">Mirouterui&#x2F;static: 前端静态文件 (github.com)</a>下载，并解压到<code>static</code>目录</p><p><img src="https://onep.hzchu.top/mount/pic/2023/08/29/64eda04788f04.webp"></p></div><div class="tab-pane" id="tab_2-3"><p>命令：</p><blockquote><p>docker run -d -p 6789:6789 -v $(pwd):&#x2F;app&#x2F;data –name mirouter-ui –restart&#x3D;always thun888&#x2F;mirouter-ui</p></blockquote><p>新建一个文件夹，并在该文件夹里运行上述命令，程序会在该文件夹里生成配置文件，修改即可</p><p>修改完成后重启该容器（或等待自动重启）</p></div></div></div><p>最后命令窗口中会显示网页的访问端口，使用设备的<code>ip地址+端口号(6789)</code>访问面板</p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><p>密码正确，但无法登陆：尝试获取自己路由器的key，可参考<a href="https://d.hzchu.top/c">视频</a>或使用<a href="https://d.hzchu.top/b">自动工具</a></p></li><li><p>CPU占用为0： 受api限制，新版路由器无法正常获取，可尝试将其部署在路由器上</p></li><li><p>温度显示： 目前API模式只支持R1D,R2D,命令模式只支持红米AX6和R1D</p></li><li><p>设备显示不全： 当设备过多时，首页只会显示当前有网络活动的设备，请进入设备详细列表查看</p></li><li><p>在线前端无法使用： 受浏览器安全限制，需关闭访问私有ip限制</p></li></ol><p><img src="https://onep.hzchu.top/mount/pic/2023/08/29/64eda267463b1.webp" alt="Chrome"></p><p><img src="https://onep.hzchu.top/mount/pic/2023/08/29/64eda26a747a5.webp" alt="Edge"></p><h3 id="配置项"><a href="#配置项" class="headerlink" title="配置项"></a>配置项</h3><p><img src="https://onep.hzchu.top/mount/pic/2023/12/16/657da76badee9.webp" alt="config"></p><table><thead><tr><th>配置名</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>dev</td><td>[]</td><td>路由器信息，参阅<code>dev项</code></td></tr><tr><td>history</td><td>[]</td><td>历史记录相关功能，参阅<code>history项</code></td></tr><tr><td>tiny</td><td>false</td><td>启用后，不再下载静态文件，需搭配<a href="http://mrui.hzchu.top:8880/">在线前端</a>使用</td></tr><tr><td>netdata_routerid</td><td>0</td><td>调用netdata api时返回的路由器（对应dev项中第n个）</td></tr><tr><td>flushTokenTime</td><td>1800</td><td>刷新token时间间隔(s)</td></tr><tr><td>port</td><td>6789</td><td>网页页面端口号</td></tr><tr><td>debug</td><td>true</td><td>debug模式，建议在测试正常后关闭</td></tr></tbody></table><p><strong>dev</strong>项：</p><table><thead><tr><th>配置名</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>password</td><td></td><td>路由器管理后台密码</td></tr><tr><td>key</td><td>a2ffa5c9be07488bbb04a3a47d3c5f6a</td><td>路由器管理后台key</td></tr><tr><td>ip</td><td>192.168.31.1</td><td>路由器IP</td></tr><tr><td>routerunit</td><td>false</td><td>启用后，程序通过<code>gopsutil</code>库获取CPU占用</td></tr></tbody></table><p><strong>history</strong>项：</p><table><thead><tr><th>配置名</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>enable</td><td>false</td><td>是否启用历史数据统计</td></tr><tr><td>sampletime</td><td>300</td><td>采样时间间隔(s)</td></tr><tr><td>maxsaved</td><td>8640</td><td>最多记录条数</td></tr></tbody></table><p>命令行参数：</p><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>–config</td><td>配置文件路径，默认为“.&#x2F;config.json”</td></tr><tr><td>–basedirectory</td><td>基础目录路径，在里面存放静态文件</td></tr><tr><td>–databasepath</td><td>数据库路径，默认为“.&#x2F;database.db”</td></tr></tbody></table><h3 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h3><p>注册为系统服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/mrui.service</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=mrui</span><br><span class="line"><span class="attr">After</span>=network.target network-<span class="literal">on</span>line.target</span><br><span class="line"><span class="attr">Requires</span>=network-<span class="literal">on</span>line.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">ExecStart</span>=/pathto/mrui</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><p>设置开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> mrui</span><br></pre></td></tr></table></figure><p>管理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看状态：systemctl status mrui</span><br><span class="line">启动：sudo systemctl start mrui</span><br><span class="line">停止：sudo systemctl stop mrui</span><br><span class="line">重启：sudo systemctl restart mrui</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/fps2tao/p/16433588.html">windows守护进程工具–nssm详解  - 博客园 (cnblogs.com)</a></p><h2 id="Stars"><a href="#Stars" class="headerlink" title="Stars~"></a>Stars~</h2><p><a href="https://d.hzchu.top/7"><img src="https://starchart.cc/mirouterui/mirouter-ui.svg" alt="Stars~"></a></p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li><input checked="" disabled="" type="checkbox"> 历史数据统计</li><li><input checked="" disabled="" type="checkbox"> 深色模式</li><li><input checked="" disabled="" type="checkbox"> 多路由支持</li><li><input checked="" disabled="" type="checkbox"> 快捷更新</li><li><input disabled="" type="checkbox"> 设备小工具</li><li><input checked="" disabled="" type="checkbox"> netdata，api形式兼容</li></ul><p><a href="https://bbs.hzchu.top/d/2-mruikai-fa-gui-hua">MRUI开发规划</a></p><blockquote><p>主要功能已完成开发,接下来随缘更新😶‍🌫️</p></blockquote><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><div class="tag-plugin timeline stellar-timeline-api" api="https://cfproxy.hzchu.top/https://api.github.com/repos/Mirouterui/mirouter-ui/releases?per_page=3"></div>]]></content>
    
    
    <summary type="html">基于小米路由器API的展示面板</summary>
    
    
    
    
    <category term="Mirouterui" scheme="https://blog.hzchu.top/tags/Mirouterui/"/>
    
  </entry>
  
  <entry>
    <title>基于Onedrive的高可用性图床</title>
    <link href="https://blog.hzchu.top/2023/photoononedrive/"/>
    <id>https://blog.hzchu.top/2023/photoononedrive/</id>
    <published>2023-07-31T11:53:17.000Z</published>
    <updated>2023-07-31T11:53:17.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>一直以来，我都在尝试各种图片存储方案，一开始便是经典的Github+jsd，但考虑到违反了tos后面就用了cf+b2，但速度不尽人意。后来用了vercel反代gh和一些杂七杂八的，但换汤不换药嘛，还是不靠谱。</p><span id="more"></span><p>在差不多一年前，我在捣鼓网心云时想到个主意：何不用家里电脑作为图片存储，通过非标准端口访问绕过备案要求。于是在<a href="https://notes.hzchu.top/">随记</a>上提出个简易pcdn的想法</p><p><img src="https://onep.hzchu.top/mount/pic/cf1/2022/08/29/630c0d1c1087e.webp"></p><p>不过像我这种小站没必要搞那么重量级了，于是改进了下</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p><img src="https://onep.hzchu.top/mount/pic/2023/08/01/64c90aaccffac.webp"></p><p>首先，本质上是个缓存服务，存储在OneDrive（下文简称od），通过各个节点分发图片，<del>就是给od套了个CDN嘛</del>。</p><p>因为我这网站也没多少流量，并发不高，我更倾向葫芦娃救爷爷式的单节点当主力，挂了再切换到其它节点的方式。</p><p>最后就是轻量，总不能把od下放到每个节点吧。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatneutral.png"/></span></p><p>故：</p><ol><li>设立一个“主服务器”，用来将od的内容分发到节点，可以用无服务器函数，也可以直接和”图床服务器“合并。同时因为服务器间同步有延时，在”图床服务器“要留个口直接下载刚刚上传的图片。</li><li>设立一个”副服务器“，负责检测节点状况和跳转到对应节点。</li><li>”图床服务器“：使用lsky-pro作为图床程序，将od使用rclone挂载到对应的存储策略文件夹上。</li><li>节点：获取访问的链接，检查本地有无缓存，有就返回，没有就下载再返回。考虑到要用php的话配置起来麻烦，直接用py了。</li></ol><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ol><li>服务器 &gt;&#x3D;1台，最好是访问速度快的</li><li>一个微软账户（我这里用的是E5订阅账户）</li><li><em>有公网IP的家庭宽带（可选）</em></li></ol><p>在od中新建<code>/share/mount</code>目录，若自行更改请注意将下文涉及的地方一起修改</p><p>推荐使用Linux，如果使用Windows下文操作将有所不同，需自行更改</p><h3 id="安装（图床服务器）"><a href="#安装（图床服务器）" class="headerlink" title="安装（图床服务器）"></a>安装（图床服务器）</h3><p>首先完成“图床服务器”的搭建。</p><h4 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h4><h5 id="libfuse"><a href="#libfuse" class="headerlink" title="libfuse"></a>libfuse</h5><p>安装<code>meson ninja</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install meson ninja</span><br></pre></td></tr></table></figure><a class="tag-plugin colorful hashtag" color="red" href="https://blog.csdn.net/qq_38980655/article/details/86579348"><svg t="1701408144765" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4228" width="200" height="200"><path d="M426.6 64.8c34.8 5.8 58.4 38.8 52.6 73.6l-19.6 117.6h190.2l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6s58.4 38.8 52.6 73.6l-19.4 117.6H896c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-42.6 256H832c35.4 0 64 28.6 64 64s-28.6 64-64 64h-137.8l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.6-117.4h-190.4l-23 138.6c-5.8 34.8-38.8 58.4-73.6 52.6s-58.4-38.8-52.6-73.6l19.4-117.8H128c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l42.6-256H192c-35.4 0-64-28.6-64-64s28.6-64 64-64h137.8l23-138.6c5.8-34.8 38.8-58.4 73.6-52.6z m11.6 319.2l-42.6 256h190.2l42.6-256h-190.2z" p-id="4229"></path></svg><span>安装pip的三种方法</span></a><p>从 <a href="https://github.com/libfuse/libfuse/releases">https://github.com/libfuse/libfuse/releases</a> 下载libfuse的源码</p><p>解压，创建一个（临时）构建目录，然后 运行<code>meson</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar xzf fuse-3.15.1.tar.gz; <span class="built_in">cd</span> fuse-3.15.1/</span><br><span class="line"><span class="built_in">mkdir</span> build; <span class="built_in">cd</span> build</span><br><span class="line">meson setup ..</span><br></pre></td></tr></table></figure><blockquote><p>3.15.1 替换为对应的releases版本</p></blockquote><p>运行<code>ninja</code>进行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ninja install</span><br></pre></td></tr></table></figure><h5 id="rclone"><a href="#rclone" class="headerlink" title="rclone"></a>rclone</h5><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://rclone.org/install.sh | sudo bash</span><br></pre></td></tr></table></figure><blockquote><p>同时在本地也要安装，用来获取token</p></blockquote><p>在本地运行rclone config进行配置</p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c78ef1d6bdd.webp"></p><p>把token复制出来备用（token包括两端的{}）</p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c78ee02488b.webp"></p><p>在服务端进行同样的操作，但在<code>Edit advanced config</code>中填<code>y</code></p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c78d2be701c.webp" alt="image-20230731182953894"></p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c78d6802369.webp" alt="image-20230731183101473"></p><p>然后一路回车，在<code>Already have a token - refresh?</code>填<code>n</code></p><p>然后按要求填写</p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c790cd11e2f.webp"></p><blockquote><p>会自动获取drive_id,drive_type，不要回车太快按过了</p></blockquote><p>挂载试试吧</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> mount</span><br><span class="line">rclone mount one:/share/mount/ ./mount/</span><br></pre></td></tr></table></figure><p>不出意外你能看见这个报错<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatbox.png"/></span></p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c791e12d260.webp"></p><p>打开报错涉及的文件，取消注释，保存</p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c791ad2e565.webp"></p><p>再试下，如果没报错就可以了</p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c7b69648695.webp"></p><blockquote><p>新建的mount文件夹在下文没有作用，建议删除~</p><p>使用fusermount -qzu mount 卸载</p></blockquote><h5 id="LNMP"><a href="#LNMP" class="headerlink" title="LNMP"></a>LNMP</h5><p>不用多说</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><h5 id="图床本体"><a href="#图床本体" class="headerlink" title="图床本体"></a>图床本体</h5><p>我这里用的是<a href="https://docs.lsky.pro/docs/free/v2/quick-start/installation.html">Lsky Pro</a>作为图床程序，其他大同小异</p><p>按照文档安装好后，新建一个<strong>本地</strong>存储策略，访问地址指向“副服务器”，并在后面加上<code>/mount</code>，存储路径根据自己的网站路径来，如<code>/www/wwwroot/pic.hzchu.top/</code>就填<code>/www/wwwroot/pic.hzchu.top/storage/app/mount/</code></p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c7bd10e5167.webp"></p><blockquote><p>记得更改&amp;新建相应目录</p></blockquote><h5 id="Rclone"><a href="#Rclone" class="headerlink" title="Rclone"></a>Rclone</h5><p>rclone需要持久化运行，我这里建议的是Supervisor或系统自带的systemd，windows使用nssm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone mount one:/share/mount/ /www/wwwroot/pic.hzchu.top/storage/app/mount/ --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --<span class="built_in">umask</span> 000 --vfs-cache-mode full --attr-timeout 15m --vfs-cache-max-age 240h --vfs-cache-max-size 1G --buffer-size 100M</span><br></pre></td></tr></table></figure><div class="tag-plugin tabs" align="center"id="tab_3"><div class="nav-tabs"><div class="tab active"><a href="#tab_3-1">supervisor</a></div><div class="tab"><a href="#tab_3-2">systemd</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_3-1"><p>以宝塔面板为例</p><p>打开<code>软件商店</code>，搜索并安装<code>进程守护管理器</code>：</p><p>点击<code>添加守护进程</code>，如图所示</p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c7c05cc5077.webp"></p></div><div class="tab-pane" id="tab_3-2"><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/rclone-one.service</span><br></pre></td></tr></table></figure><p>​写入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=rclone-one</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">ExecStart=rclone mount one:/share/mount/ /www/wwwroot/pic.hzchu.top/storage/app/mount/ --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --<span class="built_in">umask</span> 000 --vfs-cache-mode full --attr-timeout 15m --vfs-cache-max-age 240h --vfs-cache-max-size 1G --buffer-size 100M</span><br><span class="line">ExecReload=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line">ExecStop=/bin/kill -s QUIT <span class="variable">$MAINPID</span></span><br><span class="line">Restart=on-abnormal</span><br><span class="line">RestartSec=5s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></div></div></div><h3 id="安装（主服务器）"><a href="#安装（主服务器）" class="headerlink" title="安装（主服务器）"></a>安装（主服务器）</h3><p>可以用无服务器函数，这里使用<a href="https://github.com/spencerwooo/onedrive-vercel-index">onedrive-vercel-index</a>作为OneDrive的直链解析，<a href="https://ovi.swo.moe/zh/docs/getting-started">这里</a>是它的文档</p><p>将<code>baseDirectory</code>设为<code>/share</code></p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c7c4a67fdad.webp" alt="1690813605718.webp"></p><p>由于原作者的应用程序已过期，需要自行配置，参考<a href="https://ovi.swo.moe/zh/docs/advanced#%E4%BD%BF%E7%94%A8%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84-client-id-%E4%B8%8E-secret">高级 - OneDrive Vercel Index (swo.moe)</a>进行调整</p><blockquote><p>由于<code>vercel.app</code>在国内污染严重，请绑定你的域名</p></blockquote><h3 id="中途-开香槟-测试"><a href="#中途-开香槟-测试" class="headerlink" title="中途 开香槟 测试"></a>中途 <del>开香槟</del> 测试</h3><ol><li>在图床中上传一张图片，查看是否上传成功，若出现错误，则检查图床服务器</li><li>等待5分钟后访问<code>https://yourdomain.top/zh-CN/mount/</code>，查看是否出现<code>pic</code>文件夹，并根据<code>年/月/日</code>进入子文件夹查看能否访问图片</li></ol><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c7c5eaae480.webp" alt="1690813930882.webp"></p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c7c61147819.webp" alt="image-20230731223247351"></p><h3 id="安装（副服务器）"><a href="#安装（副服务器）" class="headerlink" title="安装（副服务器）"></a>安装（副服务器）</h3><p>需要安装redis，故不推荐使用虚拟主机，但非要用可以使用Vercel的<a href="https://vercel.com/dashboard/stores">Durable Redis</a></p><blockquote><p><strong>注：</strong></p><p>jumpurl为该节点的对外访问地址</p><p>apiurl 为“副服务器”的对外访问地址</p><p>backupurl 为“图床服务器“的对外访问地址</p><p>mainurl 为“主服务器“的对外访问地址</p></blockquote><div class="tag-plugin tabs" align="center"id="tab_4"><div class="nav-tabs"><div class="tab active"><a href="#tab_4-1">PHP版本</a></div><div class="tab"><a href="#tab_4-2">Python版本</a></div><div class="tab"><a href="#tab_4-3">解析</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_4-1"><blockquote><p>需要修改redis连接地址，$user_token和$mainurl</p></blockquote><p>Code:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 连接 Redis 服务器</span></span><br><span class="line"><span class="variable">$redis</span> = <span class="keyword">new</span> <span class="title class_">Redis</span>();</span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">connect</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">6379</span>);</span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">select</span>(<span class="number">2</span>);</span><br><span class="line"><span class="comment">//token</span></span><br><span class="line"><span class="variable">$user_token</span> = <span class="string">&quot;yourtoken&quot;</span>;</span><br><span class="line"><span class="comment">//主服务器url</span></span><br><span class="line"><span class="variable">$mainurl</span> = <span class="string">&quot;https://yourdomain.top/api/raw/?path=/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义限制器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Limiter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$limits</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$key_func</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$requests</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$key_func</span>, <span class="variable">$default_limits</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;limits = <span class="variable">$default_limits</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;key_func = <span class="variable">$key_func</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;requests = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">limit</span>(<span class="params"><span class="variable">$route</span>, <span class="variable">$limit</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;requests[<span class="variable">$route</span>])) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;requests[<span class="variable">$route</span>] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$this</span>-&gt;key_func);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;requests[<span class="variable">$route</span>][<span class="variable">$key</span>])) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;requests[<span class="variable">$route</span>][<span class="variable">$key</span>] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;requests[<span class="variable">$route</span>][<span class="variable">$key</span>], <span class="title function_ invoke__">time</span>());</span><br><span class="line">        <span class="keyword">while</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;requests[<span class="variable">$route</span>][<span class="variable">$key</span>]) &gt; <span class="number">0</span> &amp;&amp; <span class="title function_ invoke__">time</span>() - <span class="variable language_">$this</span>-&gt;requests[<span class="variable">$route</span>][<span class="variable">$key</span>][<span class="number">0</span>] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">array_shift</span>(<span class="variable">$this</span>-&gt;requests[<span class="variable">$route</span>][<span class="variable">$key</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;requests[<span class="variable">$route</span>][<span class="variable">$key</span>]) &gt; <span class="variable">$limit</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">http_response_code</span>(<span class="number">429</span>);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Too Many Requests&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义获取客户端 IP 地址的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_remote_address</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化限制器</span></span><br><span class="line"><span class="variable">$limiter</span> = <span class="keyword">new</span> <span class="title class_">Limiter</span>(<span class="string">&#x27;get_remote_address&#x27;</span>, <span class="keyword">array</span>(<span class="string">&#x27;40 per second&#x27;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 update 路由</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="string">&#x27;POST&#x27;</span> &amp;&amp; <span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>] === <span class="string">&#x27;/_api/update&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 检查请求速率</span></span><br><span class="line">    <span class="variable">$limiter</span>-&gt;<span class="title function_ invoke__">limit</span>(<span class="string">&#x27;/_api/update&#x27;</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取请求参数</span></span><br><span class="line">    <span class="variable">$json</span> = <span class="title function_ invoke__">json_decode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>), <span class="literal">true</span>);</span><br><span class="line">    <span class="variable">$token</span> = <span class="keyword">isset</span>(<span class="variable">$json</span>[<span class="string">&#x27;token&#x27;</span>]) ? <span class="variable">$json</span>[<span class="string">&#x27;token&#x27;</span>] : <span class="literal">null</span>;</span><br><span class="line">    <span class="variable">$server_id</span> = <span class="keyword">isset</span>(<span class="variable">$json</span>[<span class="string">&#x27;server_id&#x27;</span>]) ? <span class="variable">$json</span>[<span class="string">&#x27;server_id&#x27;</span>] : <span class="literal">null</span>;</span><br><span class="line">    <span class="variable">$url</span> = <span class="keyword">isset</span>(<span class="variable">$json</span>[<span class="string">&#x27;url&#x27;</span>]) ? <span class="variable">$json</span>[<span class="string">&#x27;url&#x27;</span>] : <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查参数完整性</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$token</span> || !<span class="variable">$server_id</span> || !<span class="variable">$url</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">http_response_code</span>(<span class="number">400</span>);</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&#x27;code&#x27;</span> =&gt; <span class="number">1002</span>, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;Missing required parameters.&#x27;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查 token 是否有效</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$token</span> !== <span class="variable">$user_token</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">http_response_code</span>(<span class="number">400</span>);</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&#x27;code&#x27;</span> =&gt; <span class="number">1002</span>, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;Invalid token.&#x27;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新服务器信息</span></span><br><span class="line">    <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">setEx</span>(<span class="string">&quot;jump_<span class="subst">$server_id</span>&quot;</span>, <span class="number">1200</span>, <span class="variable">$url</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回成功消息</span></span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: application/json&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&#x27;code&#x27;</span> =&gt; <span class="number">0</span>, <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="string">&#x27;ok&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 jump 路由</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="string">&#x27;GET&#x27;</span> &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\/(.+)$/&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>], <span class="variable">$matches</span>)) &#123;</span><br><span class="line">    <span class="comment">// 检查请求速率</span></span><br><span class="line">    <span class="variable">$limiter</span>-&gt;<span class="title function_ invoke__">limit</span>(<span class="string">&#x27;/&lt;path:url&gt;&#x27;</span>, <span class="number">40</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取客户端请求的 URL</span></span><br><span class="line">    <span class="variable">$url</span> = <span class="variable">$matches</span>[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从 Redis 中读取数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">5</span>; ++<span class="variable">$i</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">exists</span>(<span class="string">&quot;jump_<span class="subst">$i</span>&quot;</span>)) &#123;</span><br><span class="line">            <span class="variable">$orig_url</span> = <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&quot;jump_<span class="subst">$i</span>&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果未找到数据，则使用默认的原始 URL</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$orig_url</span>)) &#123;</span><br><span class="line">        <span class="variable">$orig_url</span> = <span class="variable">$mainurl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拼接 URL 并重定向客户端</span></span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: &#x27;</span> . (<span class="variable">$orig_url</span> . <span class="title function_ invoke__">urlencode</span>(<span class="variable">$url</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>伪静态配置:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$args</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab_4-2"><p>Code:</p><blockquote><p>需要修改redis连接地址，user_token和mainurl</p></blockquote><p>安装依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install flask flask_limiter hypercorn flask_cors</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, jsonify, request, redirect</span><br><span class="line"><span class="keyword">from</span> flask_limiter <span class="keyword">import</span> Limiter</span><br><span class="line"><span class="keyword">from</span> flask_limiter.util <span class="keyword">import</span> get_remote_address</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">from</span> hypercorn.asyncio <span class="keyword">import</span> serve</span><br><span class="line"><span class="keyword">from</span> hypercorn.config <span class="keyword">import</span> Config</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line">limiter = Limiter(</span><br><span class="line">    key_func=get_remote_address,</span><br><span class="line">    default_limits=[<span class="string">&quot;20 per second&quot;</span>],</span><br><span class="line">    storage_uri=<span class="string">&#x27;redis://localhost:6379&#x27;</span></span><br><span class="line">)</span><br><span class="line">config = Config()</span><br><span class="line"><span class="comment">#配置区</span></span><br><span class="line">redis_client = redis.Redis(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">6379</span>, db=<span class="number">2</span>)</span><br><span class="line">mainurl = <span class="string">&quot;https://yourdomain.top/api/raw/?path=/&quot;</span></span><br><span class="line">user_token = <span class="string">&quot;user_token&quot;</span> <span class="comment">#双端保持一致</span></span><br><span class="line">config.bind = [<span class="string">&quot;0.0.0.0:56789&quot;</span>] <span class="comment">#可自行修改端口号</span></span><br><span class="line">config.protocol = <span class="string">&quot;h2&quot;</span>  <span class="comment"># 启用HTTP2</span></span><br><span class="line"><span class="comment">#注意需要替换为你的证书路径</span></span><br><span class="line">config.certfile = <span class="string">&quot;./pem.pem&quot;</span></span><br><span class="line">config.keyfile = <span class="string">&quot;./key.key&quot;</span></span><br><span class="line"><span class="comment">#访问日志</span></span><br><span class="line">config.accesslog = <span class="string">&quot;access.log&quot;</span></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">limiter.init_app(app)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/_api/update&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="meta">@limiter.limit(<span class="params"><span class="string">&quot;5 per second&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update</span>():</span><br><span class="line">    token = request.json.get(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">    server_id = request.json.get(<span class="string">&#x27;server_id&#x27;</span>)</span><br><span class="line">    url = request.json.get(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> token <span class="keyword">or</span> <span class="keyword">not</span> url <span class="keyword">or</span> <span class="keyword">not</span> server_id:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">1002</span>,<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;Missing required parameters.&#x27;</span>&#125;), <span class="number">400</span></span><br><span class="line">    <span class="keyword">if</span> token != user_token:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">1002</span>,<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;Invalid token.&#x27;</span>&#125;), <span class="number">400</span></span><br><span class="line">    <span class="built_in">print</span>(server_id)</span><br><span class="line">    key = <span class="string">f&#x27;jump_<span class="subst">&#123;server_id&#125;</span>&#x27;</span></span><br><span class="line">    redis_client.setex(key, <span class="number">1200</span>, url)</span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">0</span>,<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;ok&#x27;</span>&#125;), <span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&lt;path:url&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@limiter.limit(<span class="params"><span class="string">&quot;30 per second&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jump</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">        <span class="comment"># 从Redis中读取数据</span></span><br><span class="line">        orig_url = <span class="literal">None</span></span><br><span class="line">        value = redis_client.get(<span class="string">f&#x27;jump_<span class="subst">&#123;i&#125;</span>&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> value:</span><br><span class="line">            orig_url = value.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> orig_url:</span><br><span class="line">        orig_url = mainurl</span><br><span class="line">    backurl = orig_url + url</span><br><span class="line">    <span class="keyword">return</span> redirect(backurl)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment">#app.run(debug=True)</span></span><br><span class="line">    <span class="comment">#app.run()</span></span><br><span class="line">    asyncio.run(serve(app, config))</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab_4-3"><p>运行逻辑：</p><p><img src="https://onep.hzchu.top/mount/pic/2023/08/02/64ca059284ed4.webp" alt="image-20230802152803639"></p><pre class="mermaid">flowchart TDid0([访问]) --> id1["判断路径是否为'/_api/update'"]id1 --> |是| id2["读取相关数据计入redis"]id1 --> |否| id3["设初始值为n(n₀=1,<6)，读取redis中'jump_n'"]id3 --> |值不存在| id4["n+1"]id4 --> id3id3 ---> |值存在| id5["读取相应值，与访问路径拼接后重定向"]id3 ---> |值均不存在| id6["将'主服务器'地址与访问路径拼接后重定向"]</pre><ol><li>接受服务器状态：相比于主动检测，被动式显然更简单。通过向<code>/_api/update</code>发送<code>POST</code>请求(json)，内容包括<code>token,server_id,url</code>，server_id是阿拉伯数字，url是节点的对外访问地址，将存入redis中，20分钟过期</li><li><code>/*</code>の跳转：在请求图片时，会把1-5的数字往挨个请求[如果有更多节点可以更改]，如果有值，则取该值与访问地址拼接后，返回重定向请求。如果无节点在线，则将主服务器地址与访问地址拼接再返回。</li><li>均有访问速率限制，防止被人打到爆炸，可以根据实际情况调节上限。</li></ol></div></div></div><p>在搭建完成后，测试访问之前上传的图片，如果能返回图片即ok</p><h3 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h3><p>考虑到php部署起来麻烦，这里用python解决一切</p><div class="tag-plugin colorful note" child="tabs"><div class="title"><strong>后期吐槽</strong></div><div class="body"><p>在arm设备上配环境配半天，一气之下用go重写了主要逻辑，编译成二进制文件到处丢太爽了</p></div></div><div class="tag-plugin tabs" align="center"id="tab_5"><div class="nav-tabs"><div class="tab active"><a href="#tab_5-1">Python</a></div><div class="tab"><a href="#tab_5-2">解析</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_5-1"><p>下载数据库到程序同目录：<a href="https://raw.hzchu.top/thun888/MNSLXOD/main/node/data.db">[点击下载]</a></p><p>安装依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install flask flask_limiter hypercorn flask_cors</span><br></pre></td></tr></table></figure><p>Code:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, jsonify, send_file, request</span><br><span class="line"><span class="keyword">from</span> flask_limiter <span class="keyword">import</span> Limiter</span><br><span class="line"><span class="keyword">from</span> flask_limiter.util <span class="keyword">import</span> get_remote_address</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> hypercorn.asyncio <span class="keyword">import</span> serve</span><br><span class="line"><span class="keyword">from</span> hypercorn.config <span class="keyword">import</span> Config</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line">limiter = Limiter(</span><br><span class="line">    key_func=get_remote_address,</span><br><span class="line">    default_limits=[<span class="string">&quot;40 per second&quot;</span>],</span><br><span class="line">    storage_uri=<span class="string">&#x27;redis://localhost:6379&#x27;</span></span><br><span class="line">)</span><br><span class="line">config = Config()</span><br><span class="line"><span class="comment">###配置区###</span></span><br><span class="line">config.bind = [<span class="string">&quot;0.0.0.0:45678&quot;</span>]  <span class="comment"># 自行更改端口</span></span><br><span class="line">config.protocol = <span class="string">&quot;h2&quot;</span>  <span class="comment"># 启用HTTP2</span></span><br><span class="line"><span class="comment">#注意需要替换为你的证书路径，不用就连带下面两行注释掉</span></span><br><span class="line">config.certfile = <span class="string">&quot;./pem.pem&quot;</span></span><br><span class="line">config.keyfile = <span class="string">&quot;./key.key&quot;</span></span><br><span class="line"><span class="comment">#访问日志目录</span></span><br><span class="line">config.accesslog = <span class="string">&quot;access.log&quot;</span></span><br><span class="line">server_id = <span class="number">1</span></span><br><span class="line">mainurl = <span class="string">&quot;https://yuordomain.top/api/raw/?path=/&quot;</span></span><br><span class="line">jumpurl = <span class="string">&quot;https://jumpurl/&quot;</span></span><br><span class="line">apiurl = <span class="string">&quot;http://apiurl/&quot;</span></span><br><span class="line">backupurl = <span class="string">&quot;http://backupurl/&quot;</span></span><br><span class="line">token = <span class="string">&quot;token&quot;</span></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">limiter.init_app(app)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">savetodatabase</span>(<span class="params">nowtime,outdata,indata</span>):</span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;data.db&#x27;</span>)</span><br><span class="line">    cursor_daily = conn.cursor()</span><br><span class="line">    cursor_daily.execute(<span class="string">&quot;SELECT COUNT(*) FROM daily WHERE date=?&quot;</span>, (nowtime,))</span><br><span class="line">    <span class="keyword">if</span> cursor_daily.fetchone()[<span class="number">0</span>] == <span class="number">0</span>:</span><br><span class="line">        cursor_daily.execute(<span class="string">&quot;INSERT INTO daily (date, get, traffic_out, traffic_in) VALUES (?, ?, ?, ?)&quot;</span>, (nowtime, <span class="number">1</span>, outdata, indata))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cursor_daily.execute(<span class="string">&quot;UPDATE daily SET traffic_out = traffic_out + ?, get = get + ?, traffic_in = traffic_in + ? WHERE date=?&quot;</span>, (outdata, <span class="number">1</span>, indata, nowtime))</span><br><span class="line"></span><br><span class="line">    cursor_total = conn.cursor()</span><br><span class="line">    cursor_total.execute(<span class="string">&quot;UPDATE total SET traffic_out = traffic_out + ?, get = get + ?, traffic_in = traffic_in + ?&quot;</span>, (outdata, <span class="number">1</span>, indata))</span><br><span class="line">    conn.commit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/_api/status&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@limiter.limit(<span class="params"><span class="string">&quot;1 per second&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_status</span>():</span><br><span class="line">    uptime = <span class="built_in">str</span>(datetime.datetime.now() - start_time)</span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;data.db&#x27;</span>)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    cursor.execute(<span class="string">&quot;SELECT get,traffic_in,traffic_out FROM total&quot;</span>)</span><br><span class="line">    result = cursor.fetchone()</span><br><span class="line">    get = result[<span class="number">0</span>]</span><br><span class="line">    traffic_in = result[<span class="number">1</span>]</span><br><span class="line">    traffic_out = result[<span class="number">2</span>]</span><br><span class="line">    <span class="comment"># 构造状态信息</span></span><br><span class="line">    status = &#123;</span><br><span class="line">        <span class="string">&#x27;server_id&#x27;</span>: server_id,</span><br><span class="line">        <span class="string">&#x27;uptime&#x27;</span>: uptime,</span><br><span class="line">        <span class="string">&#x27;traffic_out&#x27;</span>: traffic_out,</span><br><span class="line">        <span class="string">&#x27;traffic_in&#x27;</span>: traffic_in,</span><br><span class="line">        <span class="string">&#x27;get&#x27;</span>: get</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(status)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/_api/traffic&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@limiter.limit(<span class="params"><span class="string">&quot;1 per second&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_traffic_daily</span>():</span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;data.db&#x27;</span>)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line"></span><br><span class="line">    cursor.execute(<span class="string">&#x27;SELECT * FROM &quot;daily&quot; ORDER BY &quot;date&quot; DESC LIMIT 0,14&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    rows = cursor.fetchall()</span><br><span class="line">    cursor.close()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line">    data = []</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">        data.append(&#123;</span><br><span class="line">            <span class="string">&#x27;date&#x27;</span>: row[<span class="number">0</span>],</span><br><span class="line">            <span class="string">&#x27;traffic_out&#x27;</span>: row[<span class="number">3</span>],</span><br><span class="line">            <span class="string">&#x27;traffic_in&#x27;</span>: row[<span class="number">2</span>]</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(data)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/_api/cache_clean&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@limiter.limit(<span class="params"><span class="string">&quot;1 per second&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cache_clean</span>():</span><br><span class="line">    day = <span class="built_in">int</span>(request.args.get(<span class="string">&#x27;day&#x27;</span>, <span class="number">1</span>))</span><br><span class="line">    size = clear_old_files(<span class="number">0</span>)</span><br><span class="line">    status = &#123;</span><br><span class="line">        <span class="string">&#x27;size&#x27;</span>: size,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(status)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&lt;path:url&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@limiter.limit(<span class="params"><span class="string">&quot;40 per second&quot;</span></span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_file</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="comment">#print(url)</span></span><br><span class="line">    <span class="keyword">if</span> url == <span class="string">&quot;favicon.ico&quot;</span>:</span><br><span class="line">        url = <span class="string">&quot;mount/pic/favicon.webp&quot;</span></span><br><span class="line">    cache_path = os.path.join(<span class="string">&#x27;tmp&#x27;</span>, url)</span><br><span class="line">    nowtime = datetime.datetime.now().strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(cache_path):</span><br><span class="line">        file_size = os.path.getsize(cache_path)</span><br><span class="line">        savetodatabase(nowtime,file_size,<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> send_file(cache_path)</span><br><span class="line"></span><br><span class="line">    primary_url = mainurl + url</span><br><span class="line">    response = requests.get(primary_url, allow_redirects=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            os.makedirs(os.path.dirname(cache_path))</span><br><span class="line">        <span class="keyword">except</span> OSError:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(cache_path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(response.content)</span><br><span class="line"></span><br><span class="line">        file_size = os.path.getsize(cache_path)</span><br><span class="line">        savetodatabase(nowtime,file_size,file_size)</span><br><span class="line">        <span class="keyword">return</span> send_file(cache_path)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;从原站获取&quot;</span>+url)</span><br><span class="line">    secondary_url = backupurl + url</span><br><span class="line">    response = requests.get(secondary_url, allow_redirects=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            os.makedirs(os.path.dirname(cache_path))</span><br><span class="line">        <span class="keyword">except</span> OSError:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(cache_path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(response.content)</span><br><span class="line"></span><br><span class="line">        file_size = os.path.getsize(cache_path)</span><br><span class="line">        savetodatabase(nowtime,file_size,file_size)</span><br><span class="line">        <span class="keyword">return</span> send_file(cache_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        error_msg = <span class="string">&#x27;Failed to download file. URLs: %s&#x27;</span> % (primary_url)</span><br><span class="line">        app.logger.error(error_msg)</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;error&#x27;</span>: error_msg&#125;), <span class="number">404</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_directory_size</span>(<span class="params">path</span>):</span><br><span class="line">    total_size = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> dirpath, dirnames, filenames <span class="keyword">in</span> os.walk(path):</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">            file_path = os.path.join(dirpath, filename)</span><br><span class="line">            total_size += os.path.getsize(file_path)</span><br><span class="line">    <span class="keyword">return</span> total_size</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clear_old_files</span>(<span class="params">days</span>):</span><br><span class="line">    total_deleted_size = <span class="number">0</span>  <span class="comment"># 用于记录删除文件的总大小</span></span><br><span class="line">    <span class="comment"># 获取当前时间</span></span><br><span class="line">    current_time = datetime.datetime.now()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算1天前的时间</span></span><br><span class="line">    one_day_ago = current_time - datetime.timedelta(days=days)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历目录中的所有文件</span></span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(current_directory):</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            file_path = os.path.join(root, file)</span><br><span class="line"></span><br><span class="line">            modification_time = datetime.datetime.fromtimestamp(os.path.getmtime(file_path))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 如果文件的修改时间早于1天前的时间，则删除文件</span></span><br><span class="line">            <span class="keyword">if</span> modification_time &lt; one_day_ago:</span><br><span class="line">                file_size = os.path.getsize(file_path)  <span class="comment"># 获取文件大小</span></span><br><span class="line">                total_deleted_size += file_size  <span class="comment"># 累加删除文件的大小</span></span><br><span class="line">                os.remove(file_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> total_deleted_size</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delcache</span>():</span><br><span class="line">    size = get_directory_size(current_directory)</span><br><span class="line">    <span class="keyword">if</span> size &gt; <span class="number">5368709120</span>:</span><br><span class="line">        clear_old_files(<span class="number">10</span>)                       </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update</span>():</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;token&quot;</span>: token,</span><br><span class="line">        <span class="string">&quot;server_id&quot;</span>: server_id, </span><br><span class="line">        <span class="string">&quot;url&quot;</span>: jumpurl </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义目标网址</span></span><br><span class="line">    target_url = apiurl + <span class="string">&quot;_api/update&quot;</span></span><br><span class="line">    <span class="comment"># 发送post请求，并获取响应</span></span><br><span class="line">    response = requests.post(target_url, json=data)       </span><br><span class="line">    <span class="keyword">return</span> response                      </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_timer</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:                                                                                                                                                                              </span><br><span class="line">        <span class="comment"># 每15分钟执行一次</span></span><br><span class="line">        time.sleep(<span class="number">15</span> * <span class="number">60</span>)</span><br><span class="line">        threading.Thread(target=delcache).start()</span><br><span class="line">        threading.Thread(target=update).start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start_time = datetime.datetime.now()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;tmp&#x27;</span>):</span><br><span class="line">        os.mkdir(<span class="string">&#x27;tmp&#x27;</span>)</span><br><span class="line">    current_directory = os.path.join(os.getcwd(), <span class="string">&#x27;tmp&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;缓存目录为:&quot;</span>,current_directory)</span><br><span class="line">    update()</span><br><span class="line">    <span class="comment">#print(start_time)</span></span><br><span class="line">    timer_thread = threading.Thread(target=run_timer)</span><br><span class="line">    timer_thread.daemon = <span class="literal">True</span></span><br><span class="line">    timer_thread.start()</span><br><span class="line">    <span class="comment"># app.run(debug=True,host=&#x27;0.0.0.0&#x27;)</span></span><br><span class="line">    <span class="comment"># app.run(host=&#x27;0.0.0.0&#x27;)</span></span><br><span class="line">    asyncio.run(serve(app, config))  <span class="comment"># 启动服务器</span></span><br></pre></td></tr></table></figure><blockquote><p>节点附带了两个简易api用于查看该节点运行情况</p><p>实际部署中可能需要自行配置ssl证书以使开启了https的网站可以正常访问</p><p>如果外部不套反向代理建议自定义10000-65535的端口</p><p>进程同样需要持久化，可以参考rclone部分</p></blockquote></div><div class="tab-pane" id="tab_5-2"><p><img src="https://onep.hzchu.top/mount/pic/2023/08/02/64ca3aef2cf43.webp"></p><pre class="mermaid">flowchart TD    id0([访问]) --> id1["判断路径是否为'/_api/...'"]    id1 --> |是| id2["读取相关数据返回"]    id1 --> |否| id3["检查本地有无对应文件缓存"]    id3 ---> |文件存在| id4["读取文件返回"]    id3 ---> |文件不存在| id5["将'主服务器'地址与访问路径拼接后请求，下载文件后返回"]    id6(["定时器（15min）"]) --> id7(["清理缓存"]) --> id8["检查缓存目录大小"] --> |>5GB| id9["清理一天前缓存"]    id8 --> |"≦5GB"| id10["不动作"]    id6 --> id11(["上报服务器消息"])</pre></div></div></div><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><div class="tag-plugin tabs" align="center"id="tab_6"><div class="nav-tabs"><div class="tab active"><a href="#tab_6-1">直接访问OneDrive目录程序</a></div><div class="tab"><a href="#tab_6-2">正常访问效果</a></div><div class="tab"><a href="#tab_6-3">直接访问家宽节点</a></div><div class="tab"><a href="#tab_6-4">搭配Nginx缓存</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_6-1"><p>低并发</p><p><img src="https://onep.hzchu.top/mount/pic/2023/08/01/64c85bab42978.webp" alt="1690852265630.webp"></p><p>高并发</p><p><img src="https://onep.hzchu.top/mount/pic/2023/08/01/64c85bceda8cc.webp" alt="1690852301797.webp"></p></div><div class="tab-pane" id="tab_6-2"><p>低并发</p><p><img src="https://onep.hzchu.top/mount/pic/2023/08/01/64c85ada80fe5.webp"></p><p>高并发</p><p><img src="https://onep.hzchu.top/mount/pic/2023/08/02/64ca4417e3b0d.webp"></p></div><div class="tab-pane" id="tab_6-3"><p>低并发</p><p><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c7c747d041a.webp"></p><p>高并发</p><p><img src="https://onep.hzchu.top/mount/pic/2023/08/02/64ca523d745c7.webp"></p></div><div class="tab-pane" id="tab_6-4"><p>高并发</p><p><img src="https://onep.hzchu.top/mount/pic/2024/01/31/65b9a7ebb16cc.webp"></p></div></div></div><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>对应这个项目，我感觉就是：<code>易上手，易扩展</code>同时可以薅到各大厂商的羊毛（怎么薅就看各位的了），既可以把一些不稳定的服务利用起来，又不用担心出问题时全部拉闸，并且背靠微软不用担心无良厂商跑路数据丢失，当然，在目前只能算的上是一个高可用性的小型cdn，比起pcdn还有不少不足，但个人使用足以。</p><p>而关于利用国内宽带在未备案情况下提供网络服务的问题，我想联通与其抓我这1个月200MB上传的小服务，不如去抓那些狗大户，更重要的是图床时自用的，不用担心因为有人上传违法色情的图片被请去喝茶。</p><p>该项目也可以用在别的地方，自行发挥啦<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatattentionreverse.png"/></span></p><p>项目开源地址：</p><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/thun888/MNSLXOD"><img src="https://github-readme-stats.xaoxuu.com/api/pin/?username=thun888&repo=MNSLXOD&theme=dark&show_owner=true"/></a></div><p>ps：</p><p>从4月份到现在为od节省了17倍的数据</p><p><img src="https://onep.hzchu.top/mount/pic/2023/08/02/64ca32eb1fac5.webp" alt="image-20230802183846133.webp"></p><p>从4月份到现在的日志<br><img src="https://onep.hzchu.top/mount/pic/2023/07/31/64c72c298f397.webp"><br>共480多条，大多数都是爬虫的贡献</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;一直以来，我都在尝试各种图片存储方案，一开始便是经典的Github+jsd，但考虑到违反了tos后面就用了cf+b2，但速度不尽人意。后来用了vercel反代gh和一些杂七杂八的，但换汤不换药嘛，还是不靠谱。&lt;/p&gt;</summary>
    
    
    
    
    <category term="MNSLXOD" scheme="https://blog.hzchu.top/tags/MNSLXOD/"/>
    
  </entry>
  
  <entry>
    <title>Windows下的电源计划自动控制</title>
    <link href="https://blog.hzchu.top/2023/auto-control-power-plan/"/>
    <id>https://blog.hzchu.top/2023/auto-control-power-plan/</id>
    <published>2023-01-17T19:07:20.000Z</published>
    <updated>2023-01-17T19:38:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h3><p>之前搞了一套E5扔在角落里吃灰，这几天想起来准备当nas用。不过在最高频率下运行功率实在恐怖（140w+），在Windows下限制CPU频率最简单的就是电源计划了，话不多说<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatattentionreverse.png"/></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> psutil</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">BALANCE=<span class="string">&#x27;381b4222-f694-41f0-9685-ff5bb260df2e&#x27;</span></span><br><span class="line">HIGH_PERFORMANCE=<span class="string">&#x27;8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c&#x27;</span></span><br><span class="line">ENERGY_SAVER=<span class="string">&#x27;a1841308-3541-4fab-bc81-f71556f20b4a&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_power_plan</span>(<span class="params">plan</span>):</span><br><span class="line">    subprocess.run(<span class="string">f&#x27;powercfg /S <span class="subst">&#123;plan&#125;</span>&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_power_plan</span>():</span><br><span class="line">    output = subprocess.run(<span class="string">&quot;powercfg /GETACTIVESCHEME&quot;</span>, shell=<span class="literal">True</span>, stdout=subprocess.PIPE).stdout.decode(<span class="string">&quot;GBK&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> output.split(<span class="string">&quot; &quot;</span>)[-<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    cpu_percent = psutil.cpu_percent(interval=<span class="number">1</span>)</span><br><span class="line">    current_time = time.localtime().tm_hour</span><br><span class="line">    plan = get_power_plan()</span><br><span class="line">    <span class="comment">#print(plan)</span></span><br><span class="line">    <span class="keyword">if</span> current_time &gt;= <span class="number">23</span> <span class="keyword">or</span> current_time &lt;= <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">if</span> plan != ENERGY_SAVER:</span><br><span class="line">            <span class="built_in">print</span>(current_time+<span class="string">&quot;：切换到节能模式&quot;</span>)</span><br><span class="line">            change_power_plan(ENERGY_SAVER)</span><br><span class="line">    <span class="keyword">elif</span> cpu_percent &gt; <span class="number">90</span>:</span><br><span class="line">        <span class="keyword">if</span> plan != HIGH_PERFORMANCE:</span><br><span class="line">            <span class="built_in">print</span>(current_time+<span class="string">&quot;：切换到高性能模式&quot;</span>)</span><br><span class="line">            change_power_plan(HIGH_PERFORMANCE)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> plan != BALANCE:</span><br><span class="line">            <span class="built_in">print</span>(current_time+<span class="string">&quot;：切换到平衡模式&quot;</span>)</span><br><span class="line">            change_power_plan(BALANCE)</span><br><span class="line">    time.sleep(<span class="number">60</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中，这一部分需要自己获取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BALANCE=<span class="string">&#x27;381b4222-f694-41f0-9685-ff5bb260df2e&#x27;</span></span><br><span class="line">HIGH_PERFORMANCE=<span class="string">&#x27;8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c&#x27;</span></span><br><span class="line">ENERGY_SAVER=<span class="string">&#x27;a1841308-3541-4fab-bc81-f71556f20b4a&#x27;</span></span><br></pre></td></tr></table></figure><p>使用<code>powercfg /GETACTIVESCHEME</code>获取电源计划GUID并填入</p><p><img src="https://onep.hzchu.top/mount/pic/2023/01/17/63c685e3ca534.webp" alt="image-20230117191532293"></p><p>当时间晚于11点或早于6点时，设置为节能</p><p>当CPU占用大于90时，调为高性能</p><p>其余时间为平衡</p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>为了演示，这里将时间间隔调整为1s</p><p><img src="https://onep.hzchu.top/mount/pic/2023/01/17/63c6873160cb1.gif" alt="1113.gif"></p><p>有负载时</p><p><img src="https://onep.hzchu.top/mount/pic/2023/01/17/63c6873d0f2cb.gif" alt="1114.gif"></p><p>PS：电源计划中限制频率的方法</p><p><img src="https://onep.hzchu.top/mount/pic/2023/01/17/63c687e21db58.webp" alt="1673955297733.webp"></p>]]></content>
    
    
    <summary type="html">之前搞了一套E5扔在角落里吃灰，这几天想起来准备当nas用。不过在最高频率下运行功率实在恐怖（140w+），在Windows下限制CPU频率心理有频率最简单的就是电源计划了</summary>
    
    
    
    
    <category term="Windows" scheme="https://blog.hzchu.top/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>定语从句要点复习（笔记）</title>
    <link href="https://blog.hzchu.top/2022/definite-clause-point-review/"/>
    <id>https://blog.hzchu.top/2022/definite-clause-point-review/</id>
    <published>2022-12-31T17:16:23.000Z</published>
    <updated>2022-12-31T17:16:23.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="要点一：判断"><a href="#要点一：判断" class="headerlink" title="要点一：判断"></a>要点一：判断</h3><p>1.位于名词或者代词之后：</p><p>2.可翻译为“……<mark class="tag-plugin colorful mark" color="orange">的</mark>”；</p><p>3.前后句有重叠部分</p><h3 id="要点二：关系代词和关系副词的选择"><a href="#要点二：关系代词和关系副词的选择" class="headerlink" title="要点二：关系代词和关系副词的选择"></a>要点二：关系代词和关系副词的选择</h3><p>关系代词：that&#x2F;which&#x2F;who&#x2F;whom&#x2F;whose&#x2F;<mark class="tag-plugin colorful mark" color="orange">as</mark></p><p>关系副词：when&#x2F;where&#x2F;why  （&#x3D;介词+which）</p><p>1.成分分析法：</p><p>​定语从句<mark class="tag-plugin colorful mark" color="orange">缺主语或宾语</mark>，用关系<mark class="tag-plugin colorful mark" color="orange">代词</mark>：</p><p>​定语从句<mark class="tag-plugin colorful mark" color="orange">完整</mark>，<mark class="tag-plugin colorful mark" color="orange">不缺主宾</mark>，用关系<mark class="tag-plugin colorful mark" color="orange">副词</mark>。</p><ol start="2"><li>代入法：</li></ol><p>​将先行词代入到定语从句中，若<mark class="tag-plugin colorful mark" color="orange">刚好完整</mark>用关系<mark class="tag-plugin colorful mark" color="orange">代词</mark>；</p><p>​若<mark class="tag-plugin colorful mark" color="orange">需要补充介词才完整</mark>，则用关系<mark class="tag-plugin colorful mark" color="orange">副词</mark>;</p><p>有关习题<br><img src="https://onep.hzchu.top/mount/pic/2022/12/31/63afff94ebba3.webp" alt="0d3ac79c-d33e-45b6-a1d8-4a3a4756b270.webp"><br><img src="https://onep.hzchu.top/mount/pic/2022/12/31/63affe4269583.webp" alt="dfc44830-58e2-4fd5-b0db-4e31a063f594.webp"></p><h3 id="要点三：that-v-s-which"><a href="#要点三：that-v-s-which" class="headerlink" title="要点三：that v.s which"></a>要点三：that v.s which</h3><p>在<mark class="tag-plugin colorful mark" color="orange">指物</mark>的情况下（毕竟which不能指人），that和which一般是可以互换的，但是以下情况不能互换。</p><h4 id="用that不用which的四种情况："><a href="#用that不用which的四种情况：" class="headerlink" title="用that不用which的四种情况："></a>用that不用which的四种情况：</h4><p>​1.先行词为指物的不定代词或被不定代词修饰：<br>​<br>​2.先行词被最高级或者序数词修饰；<br>​<br>​3.先行词被the very，the only或者just the修饰：<br>​<br>​4.先行词中既有人又有物。</p><h4 id="用which不用that的三种情况："><a href="#用which不用that的三种情况：" class="headerlink" title="用which不用that的三种情况："></a>用which不用that的三种情况：</h4><p>​1.<mark class="tag-plugin colorful mark" color="orange">非限制性</mark>定语从句（<mark class="tag-plugin colorful mark" color="orange">有逗号</mark>）；<br>​<br>​2.以<mark class="tag-plugin colorful mark" color="orange">整个句子</mark>作为先行词（<mark class="tag-plugin colorful mark" color="orange">非限制性</mark>定从）；<br>​<br>​3.<mark class="tag-plugin colorful mark" color="orange">介词</mark>后的关系代词。</p><blockquote><p>多写that</p></blockquote><h3 id="要点四：who-v-s-that"><a href="#要点四：who-v-s-that" class="headerlink" title="要点四：who v.s that"></a>要点四：who v.s that</h3><p>在<mark class="tag-plugin colorful mark" color="orange">指人</mark>的情况下，who和that一般是可以互换的，但是如果<mark class="tag-plugin colorful mark" color="orange">先行词是某些代词</mark>，比如<mark class="tag-plugin colorful mark" color="orange">he,anyone,those</mark>等，这时的关系代词应该<mark class="tag-plugin colorful mark" color="orange">用who</mark>，不用that。</p><mark class="tag-plugin colorful mark" color="green">eg: 谁能笑到最后,才是笑得最好: He who laughs last laughs best.</mark><h3 id="要点五：介词后关系代词的选择"><a href="#要点五：介词后关系代词的选择" class="headerlink" title="要点五：介词后关系代词的选择"></a>要点五：介词后关系代词的选择</h3><p>介词+（指<mark class="tag-plugin colorful mark" color="orange">物</mark>）<mark class="tag-plugin colorful mark" color="orange">which</mark></p><p>介词+（指<mark class="tag-plugin colorful mark" color="orange">人</mark>）<mark class="tag-plugin colorful mark" color="orange">whom</mark></p><blockquote><p>介词后不是加which，就是加whom</p></blockquote><h3 id="要点六：-whose-n"><a href="#要点六：-whose-n" class="headerlink" title="要点六： whose + n.*"></a>要点六： whose + n.*</h3><p>（指<mark class="tag-plugin colorful mark" color="orange">物</mark>）whose+n.&#x3D;<mark class="tag-plugin colorful mark" color="orange">of which</mark> + the + n.&#x3D;the + n. + of which</p><p>（指<mark class="tag-plugin colorful mark" color="orange">人</mark>）whose+n.&#x3D;<mark class="tag-plugin colorful mark" color="orange">of whom</mark> + the + n.&#x3D;the + n. + of whom</p><p>of 可表所属关系，抽象点理解可以得到第二种</p><mark class="tag-plugin colorful mark" color="orange">whose father = the father of whom</mark><mark class="tag-plugin colorful mark" color="orange">若挖空 ------- the n.则不考虑whose</mark><h3 id="要点七：as引导的定语从句"><a href="#要点七：as引导的定语从句" class="headerlink" title="要点七：as引导的定语从句"></a>要点七：as引导的定语从句</h3><mark class="tag-plugin colorful mark" color="orange">**as是关系代词**</mark><h4 id="限制性定语从句："><a href="#限制性定语从句：" class="headerlink" title="限制性定语从句："></a>限制性定语从句：</h4><p>当先行词被<mark class="tag-plugin colorful mark" color="orange">such/so/as/the same</mark>等修饰（<mark class="tag-plugin colorful mark" color="orange">结构</mark>类）</p><h4 id="非限制性定语从句："><a href="#非限制性定语从句：" class="headerlink" title="非限制性定语从句："></a>非限制性定语从句：</h4><mark class="tag-plugin colorful mark" color="orange">as以整个句子作为先行词，翻译为“**正如**”</mark><p>as is known（众所周知）, &#x2F; as is said（据说）,&#x2F; as is reported（据报道）,as is announced（据宣布）,&#x2F;as is expected（据期待）,&#x2F;as we know（正如我们知道的那样）, as we expect（正如我们期待的那样）,&#x2F;as often happens（正如经常发生的那样）,&#x2F;as is often the case（正如通常情况下）,…</p><h3 id="要点八：the-way-作为先行词的定语从句"><a href="#要点八：the-way-作为先行词的定语从句" class="headerlink" title="要点八：the way 作为先行词的定语从句*"></a>要点八：the way 作为先行词的定语从句*</h3><p>I don’t like <mark class="tag-plugin colorful mark" color="orange">the way</mark> <u>that/in which/省略</u> you speak to your Mom.</p><mark class="tag-plugin colorful mark" color="orange">通常为that</mark><h3 id="要点九：定语从句的主谓一致问题"><a href="#要点九：定语从句的主谓一致问题" class="headerlink" title="要点九：定语从句的主谓一致问题"></a>要点九：定语从句的主谓一致问题</h3><p>1.定语从句的谓语动词的单复数取决于<mark class="tag-plugin colorful mark" color="orange">先行词</mark>；</p><p>2.当先行词被<mark class="tag-plugin colorful mark" color="orange">one of</mark>修饰，定从谓语用<mark class="tag-plugin colorful mark" color="orange">复数</mark>；</p><p>   当先行词被<mark class="tag-plugin colorful mark" color="orange">the only one of</mark>修饰，定从谓语用<mark class="tag-plugin colorful mark" color="orange">单数</mark>；</p><p>3.<mark class="tag-plugin colorful mark" color="orange">as和which以整个句子作为先行词</mark>，定从谓语用<mark class="tag-plugin colorful mark" color="orange">单数</mark>；</p><blockquote><p>理解</p></blockquote><h3 id="要点十：特殊名词作为先行词的定语从句"><a href="#要点十：特殊名词作为先行词的定语从句" class="headerlink" title="要点十：特殊名词作为先行词的定语从句"></a>要点十：特殊名词作为先行词的定语从句</h3><p>situation&#x2F;case&#x2F;scene&#x2F;spot&#x2F;point（地步）&#x2F;stage   —<mark class="tag-plugin colorful mark" color="orange">关系副词用where</mark></p><p>occasion（时机）—<mark class="tag-plugin colorful mark" color="orange">关系副词用when</mark></p>]]></content>
    
    
    <summary type="html">网课内容：定语从句要点复习</summary>
    
    
    
    
    <category term="笔记" scheme="https://blog.hzchu.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>更便利地操控表彰大会--AHK</title>
    <link href="https://blog.hzchu.top/2022/Easier-Control-of-Recognition-Conferences-AHK/"/>
    <id>https://blog.hzchu.top/2022/Easier-Control-of-Recognition-Conferences-AHK/</id>
    <published>2022-12-25T14:44:07.000Z</published>
    <updated>2022-12-25T14:44:07.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>前几个月考完月考，第1次月考的时候因为主持人不懂按ppt.经过我舍友一番吹水，给我拉了上去，虽然威风，但我只负责按下一页和播放颁奖曲。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatsadreach.png"/></span></p><p>然鹅，放歌的重任着实有点难为我手上的翻页笔，导致我只能反反复复地从后台门旁跑到电脑旁，毕竟不能挡着队伍的道（谢天谢地，那台笔记本的键盘还有多媒体键<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatbox.png"/></span>）</p><p><img src="https://onep.hzchu.top/mount/pic/2022/12/25/63a7f3c180d9b.webp" alt="img"></p><p>那么，在尴尬了3个小时后，为了应对期中后表彰大会同样的情况，还是要想个对策</p><h4 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h4><p>翻页笔，说白了就是个小键盘（宏），上下翻页自然是上下键，“黑屏”即为B键，再高级的就不是单纯的键盘了。当然，我手上这支来自于我勤俭持家的英语老师，只有下图这几个键</p><p><img src="https://onep.hzchu.top/mount/pic/2022/12/25/63a7f3afa43d8.webp" alt="img"></p><blockquote><p>图片在某宝找了个同款</p></blockquote><p>环顾一圈，只有Enter键是用不上的，那不就可以搞一波按键映射，让它成为播放&#x2F;暂停键</p><h4 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h4><p>按键映射还得是老大哥<em>——</em>Autohotkey(AHK)</p><p>根据AHK的语法，下面的“句子”便可以实现，复制写入一个文档里并改后缀名为.ahk，导入即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter::Media_Play_Pause</span><br></pre></td></tr></table></figure><p>我这里为了方便将其导出为一个独立程序</p><p><img src="https://onep.hzchu.top/mount/pic/2022/12/25/63a7f3994f0f5.webp" alt="img"></p><p>事实证明，效果不错，让我还能在里面摸鱼<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatrainbow.png"/></span></p>]]></content>
    
    
    <summary type="html">在尴尬了3个小时后，为了应对期中后表彰大会同样的情况，还是要想个对策</summary>
    
    
    
    
    <category term="AHK" scheme="https://blog.hzchu.top/tags/AHK/"/>
    
  </entry>
  
  <entry>
    <title>使用Python半自动生成Altium原理图封装</title>
    <link href="https://blog.hzchu.top/2022/ptyhon-with-altium-designer/"/>
    <id>https://blog.hzchu.top/2022/ptyhon-with-altium-designer/</id>
    <published>2022-07-14T12:29:32.000Z</published>
    <updated>2022-07-14T12:29:32.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>放长假了，想搞点钱，对我而言来钱最快的就是帮别人画原理图PCB图了。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/cdn-x/emoji/aru-l/87.gif"/></span></p><p>不过画了几天发现一个问题：一直以来都自己画自己的，而现在帮别人画，客户发的很多原理图的封装都没有，基本上每画一个图都要画两三个，碰到一些小的还好几分钟就能画完，碰到一些大点的芯片引脚多的很的，自己画一个（配上电脑拉跨debuff）还要十几分钟，在立创EDA上面找的又经常有错，很是不爽<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/cdn-x/emoji/aru-l/34.gif"/></span></p><p>不过得益于AD高版本可以以成文本形式保存原理图文件，使用程序完成任务也就成为了可能。</p><h3 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h3><p>随便新建一个原理图以ASCII保存。打开来可以看见这么一份”模板“，<br><img src="https://k.hzchu.top/2022/08/23/63043cea7eada.webp"></p><details class="tag-plugin colorful folding" color="yellow" child="codeblock"><summary><span>模板</span></summary><div class="body"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">|<span class="variable constant_">HEADER</span>=<span class="title class_">Protel</span> <span class="keyword">for</span> <span class="title class_">Windows</span> - <span class="title class_">Schematic</span> <span class="title class_">Capture</span> <span class="title class_">Ascii</span> <span class="title class_">File</span> <span class="title class_">Version</span> <span class="number">5.0</span>|<span class="variable constant_">WEIGHT</span>=<span class="number">38</span></span><br><span class="line">|<span class="variable constant_">ISBOC</span>=T|<span class="variable constant_">RECORD</span>=<span class="number">31</span>|<span class="variable constant_">VISIBLEGRIDON</span>=T|<span class="variable constant_">VISIBLEGRIDSIZE</span>=<span class="number">10</span>|<span class="variable constant_">DISPLAY_UNIT</span>=<span class="number">4</span>|<span class="variable constant_">CUSTOMY</span>=<span class="number">950</span>|<span class="variable constant_">BORDERON</span>=T|<span class="variable constant_">HOTSPOTGRIDON</span>=T|<span class="variable constant_">CUSTOMX</span>=<span class="number">1500</span>|<span class="variable constant_">CUSTOMMARGINWIDTH</span>=<span class="number">20</span>|<span class="title class_">SIZE1</span>=<span class="number">10</span>|<span class="variable constant_">SHEETNUMBERSPACESIZE</span>=<span class="number">4</span>|<span class="variable constant_">CUSTOMYZONES</span>=<span class="number">4</span>|<span class="variable constant_">USEMBCS</span>=T|<span class="variable constant_">FONTIDCOUNT</span>=<span class="number">1</span>|<span class="variable constant_">SNAPGRIDSIZE</span>=<span class="number">10</span>|<span class="variable constant_">SHEETSTYLE</span>=<span class="number">5</span>|<span class="variable constant_">SYSTEMFONT</span>=<span class="number">1</span>|<span class="variable constant_">HOTSPOTGRIDSIZE</span>=<span class="number">4</span>|<span class="title class_">FONTNAME1</span>=<span class="title class_">Times</span> <span class="title class_">New</span> <span class="title class_">Roman</span>|<span class="variable constant_">TITLEBLOCKON</span>=T|<span class="variable constant_">AREACOLOR</span>=<span class="number">16317695</span>|<span class="variable constant_">SNAPGRIDON</span>=T|<span class="variable constant_">CUSTOMXZONES</span>=<span class="number">6</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">CurrentTime</span>|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">WFYPTBEC</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">CurrentDate</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">1</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">KRGPTHWR</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">Time</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">2</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">APNVELVY</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">Date</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">3</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">DOFGRYNH</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">DocumentFullPathAndName</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">4</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">XTILODYM</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">DocumentName</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">5</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">CIXOCUKW</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">ModifiedDate</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">6</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">CYVLOLHC</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">ApprovedBy</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">7</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">UKLMMPSH</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">CheckedBy</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">8</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">LGBVFHBI</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">Author</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">9</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">NNMPOPVS</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">CompanyName</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">10</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">ROXAGALI</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">DrawnBy</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">11</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">GSEQEJEE</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">Engineer</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">12</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">NMEAIFPG</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">Organization</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">13</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">CHTRTWQS</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">Address1</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">14</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">SLYDDXDR</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">Address2</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">15</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">JNHWHKQI</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">Address3</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">16</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">MIQKOJUC</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">Address4</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">17</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">TBHPRINX</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">Title</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">18</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">JRIVAVFH</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">DocumentNumber</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">19</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">SJJFVEJY</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">Revision</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">20</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">TPPALWNV</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">SheetNumber</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">21</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">IXCDWQOY</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">SheetTotal</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">22</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">WLJMRBEM</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">Rule</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">23</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">SGMPJKTU</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">ImagePath</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">24</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">CDHEMVMP</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">NAME</span>=<span class="title class_">ProjectName</span>|<span class="variable constant_">TEXT</span>=*|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">25</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">FMWVHCEF</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">HEADER</span>=<span class="title class_">Icon</span> storage</span><br><span class="line">|<span class="variable constant_">HEADER</span>=<span class="title class_">Protel</span> <span class="keyword">for</span> <span class="title class_">Windows</span> - <span class="title class_">Schematic</span> <span class="title class_">Capture</span> <span class="title class_">Ascii</span> <span class="title class_">File</span> <span class="title class_">Version</span> <span class="number">5.0</span></span><br></pre></td></tr></table></figure></div></details><blockquote><p>文本是OLE复合文档,有开发需要可以在这个仓库里查看。</p></blockquote><div class="tag-plugin link dis-select"><a class="link-card plain" title="Altium schematic file format" href="https://github.com/vadmium/python-altium/blob/master/format.md" target="_blank" rel="external nofollow noopener noreferrer" cardlink api="https://siteinfo-api.hzchu.top/api/v1?url=https://github.com/vadmium/python-altium/blob/master/format.md" autofill=""><div class="left"><span class="title">Altium schematic file format</span><span class="cap link footnote">https://github.com/vadmium/python-altium/blob/master/format.md</span></div><div class="right"><div class="lazy img" data-bg="/img/icons/08a41b181ce68.svg"></div></div></a></div><p>测试放置一个3PIN可以看到多了这么一部分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">1</span>|<span class="variable constant_">PARTIDLOCKED</span>=T|<span class="variable constant_">COLOR</span>=<span class="number">128</span>|<span class="variable constant_">SOURCELIBRARYNAME</span>=<span class="title class_">Miscellaneous</span> <span class="title class_">Devices</span>.<span class="property">SchLib</span>|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">DISPLAYMODECOUNT</span>=<span class="number">1</span>|<span class="variable constant_">INDEXINSHEET</span>=<span class="number">26</span>|<span class="variable constant_">DESIGNITEMID</span>=3PIN|<span class="variable constant_">PARTCOUNT</span>=<span class="number">2</span>|<span class="variable constant_">LIBREFERENCE</span>=3PIN|<span class="variable constant_">LIBRARYPATH</span>=*|<span class="variable constant_">LOCATION</span>.<span class="property">X</span>=<span class="number">440</span>|<span class="variable constant_">AREACOLOR</span>=<span class="number">11599871</span>|<span class="variable constant_">TARGETFILENAME</span>=*|<span class="variable constant_">CURRENTPARTID</span>=<span class="number">1</span>|<span class="variable constant_">LOCATION</span>.<span class="property">Y</span>=<span class="number">450</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">JDTBOSLP</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">14</span>|<span class="variable constant_">ISNOTACCESIBLE</span>=T|<span class="variable constant_">LOCATION</span>.<span class="property">X</span>=<span class="number">440</span>|<span class="variable constant_">CORNER</span>.<span class="property">Y</span>=<span class="number">450</span>|<span class="variable constant_">ISSOLID</span>=T|<span class="variable constant_">OWNERPARTID</span>=<span class="number">1</span>|<span class="variable constant_">OWNERINDEX</span>=<span class="number">27</span>|<span class="variable constant_">CORNER</span>.<span class="property">X</span>=<span class="number">470</span>|<span class="variable constant_">COLOR</span>=<span class="number">128</span>|<span class="variable constant_">AREACOLOR</span>=<span class="number">11599871</span>|<span class="variable constant_">LOCATION</span>.<span class="property">Y</span>=<span class="number">410</span></span><br><span class="line">|<span class="variable constant_">DESIGNATOR</span>=<span class="number">1</span>|<span class="variable constant_">RECORD</span>=<span class="number">2</span>|<span class="variable constant_">NAME</span>=<span class="number">1</span>|<span class="variable constant_">LOCATION</span>.<span class="property">X</span>=<span class="number">440</span>|<span class="variable constant_">PINLENGTH</span>=<span class="number">20</span>|<span class="variable constant_">OWNERPARTID</span>=<span class="number">1</span>|<span class="variable constant_">PINCONGLOMERATE</span>=<span class="number">42</span>|<span class="variable constant_">ELECTRICAL</span>=<span class="number">4</span>|<span class="variable constant_">OWNERINDEX</span>=<span class="number">27</span>|<span class="variable constant_">FORMALTYPE</span>=<span class="number">1</span>|<span class="variable constant_">LOCATION</span>.<span class="property">Y</span>=<span class="number">440</span>|<span class="variable constant_">SWAPIDPIN</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">LOCATION</span>.<span class="property">X</span>=<span class="number">440</span>|<span class="variable constant_">NAME</span>=<span class="title class_">PinUniqueId</span>|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">OWNERINDEX</span>=<span class="number">29</span>|<span class="variable constant_">TEXT</span>=<span class="variable constant_">BNSVPWEQ</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">LOCATION</span>.<span class="property">Y</span>=<span class="number">440</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">DESIGNATOR</span>=<span class="number">2</span>|<span class="variable constant_">RECORD</span>=<span class="number">2</span>|<span class="variable constant_">NAME</span>=<span class="number">2</span>|<span class="variable constant_">LOCATION</span>.<span class="property">X</span>=<span class="number">440</span>|<span class="variable constant_">PINLENGTH</span>=<span class="number">20</span>|<span class="variable constant_">OWNERPARTID</span>=<span class="number">1</span>|<span class="variable constant_">PINCONGLOMERATE</span>=<span class="number">42</span>|<span class="variable constant_">ELECTRICAL</span>=<span class="number">4</span>|<span class="variable constant_">OWNERINDEX</span>=<span class="number">27</span>|<span class="variable constant_">FORMALTYPE</span>=<span class="number">1</span>|<span class="variable constant_">LOCATION</span>.<span class="property">Y</span>=<span class="number">430</span>|<span class="variable constant_">SWAPIDPIN</span>=<span class="number">2</span></span><br><span class="line">|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">LOCATION</span>.<span class="property">X</span>=<span class="number">440</span>|<span class="variable constant_">NAME</span>=<span class="title class_">PinUniqueId</span>|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">OWNERINDEX</span>=<span class="number">30</span>|<span class="variable constant_">TEXT</span>=<span class="variable constant_">DQCSMDTO</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">LOCATION</span>.<span class="property">Y</span>=<span class="number">430</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">DESIGNATOR</span>=<span class="number">3</span>|<span class="variable constant_">RECORD</span>=<span class="number">2</span>|<span class="variable constant_">NAME</span>=<span class="number">3</span>|<span class="variable constant_">LOCATION</span>.<span class="property">X</span>=<span class="number">440</span>|<span class="variable constant_">PINLENGTH</span>=<span class="number">20</span>|<span class="variable constant_">OWNERPARTID</span>=<span class="number">1</span>|<span class="variable constant_">PINCONGLOMERATE</span>=<span class="number">42</span>|<span class="variable constant_">ELECTRICAL</span>=<span class="number">4</span>|<span class="variable constant_">OWNERINDEX</span>=<span class="number">27</span>|<span class="variable constant_">FORMALTYPE</span>=<span class="number">1</span>|<span class="variable constant_">LOCATION</span>.<span class="property">Y</span>=<span class="number">420</span>|<span class="variable constant_">SWAPIDPIN</span>=<span class="number">3</span></span><br><span class="line">|<span class="variable constant_">ISHIDDEN</span>=T|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">LOCATION</span>.<span class="property">X</span>=<span class="number">440</span>|<span class="variable constant_">NAME</span>=<span class="title class_">PinUniqueId</span>|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">OWNERINDEX</span>=<span class="number">31</span>|<span class="variable constant_">TEXT</span>=<span class="variable constant_">TFWBGGDS</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">LOCATION</span>.<span class="property">Y</span>=<span class="number">420</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">34</span>|<span class="variable constant_">LOCATION</span>.<span class="property">X</span>=<span class="number">440</span>|<span class="variable constant_">NAME</span>=<span class="title class_">Designator</span>|<span class="variable constant_">TEXT</span>=P?|<span class="variable constant_">OWNERINDEX</span>=<span class="number">27</span>|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388408</span>|<span class="variable constant_">INDEXINSHEET</span>=-<span class="number">1</span>|<span class="variable constant_">READONLYSTATE</span>=<span class="number">1</span>|<span class="variable constant_">LOCATION</span>.<span class="property">Y</span>=<span class="number">450</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">RECORD</span>=<span class="number">41</span>|<span class="variable constant_">LOCATION</span>.<span class="property">X</span>=<span class="number">440</span>|<span class="variable constant_">NAME</span>=<span class="title class_">Comment</span>|<span class="variable constant_">TEXT</span>=3PIN|<span class="variable constant_">OWNERINDEX</span>=<span class="number">27</span>|<span class="variable constant_">OWNERPARTID</span>=-<span class="number">1</span>|<span class="variable constant_">COLOR</span>=<span class="number">8388608</span>|<span class="variable constant_">INDEXINSHEET</span>=-<span class="number">1</span>|<span class="variable constant_">UNIQUEID</span>=<span class="variable constant_">SIFBYFRD</span>|<span class="variable constant_">LOCATION</span>.<span class="property">Y</span>=<span class="number">400</span>|<span class="variable constant_">FONTID</span>=<span class="number">1</span></span><br><span class="line">|<span class="variable constant_">OWNERINDEX</span>=<span class="number">27</span>|<span class="variable constant_">RECORD</span>=<span class="number">44</span></span><br></pre></td></tr></table></figure><p>可以看出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">RECORD</span> = </span><br><span class="line"><span class="number">1</span>：器件开始</span><br><span class="line"><span class="number">2</span>: 引脚</span><br><span class="line"><span class="number">14</span>：长方形（背景）</span><br><span class="line"><span class="number">34</span>：元件标号</span><br><span class="line"><span class="number">41</span>：脚注</span><br><span class="line"><span class="number">44</span>：器件结束</span><br><span class="line"><span class="variable constant_">DESIGNATOR</span>：管脚标号</span><br></pre></td></tr></table></figure><p>还有像xy坐标，NAME，COLOR等不必多说</p><p>接着就是写个python脚本把它们拼起来辣</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">head2 = <span class="string">&#x27;&#x27;&#x27;|ISBOC=T|RECORD=31|VISIBLEGRIDON=T|VISIBLEGRIDSIZE=10|DISPLAY_UNIT=4|CUSTOMY=950|BORDERON=T|HOTSPOTGRIDON=T|CUSTOMX=1500|CUSTOMMARGINWIDTH=20|SIZE1=10|SHEETNUMBERSPACESIZE=4|CUSTOMYZONES=4|USEMBCS=T|FONTIDCOUNT=1|SNAPGRIDSIZE=10|SHEETSTYLE=8|SYSTEMFONT=1|HOTSPOTGRIDSIZE=4|FONTNAME1=Times New Roman|TITLEBLOCKON=T|AREACOLOR=16317695|SNAPGRIDON=T|CUSTOMXZONES=6</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=CurrentTime|OWNERPARTID=-1|COLOR=8388608|TEXT=*|READONLYSTATE=1|UNIQUEID=WFYPTBEC|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=CurrentDate|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=1|COLOR=8388608|READONLYSTATE=1|UNIQUEID=KRGPTHWR|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=Time|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=2|COLOR=8388608|READONLYSTATE=1|UNIQUEID=APNVELVY|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=Date|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=3|COLOR=8388608|READONLYSTATE=1|UNIQUEID=DOFGRYNH|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=DocumentFullPathAndName|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=4|COLOR=8388608|READONLYSTATE=1|UNIQUEID=XTILODYM|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=DocumentName|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=5|COLOR=8388608|READONLYSTATE=1|UNIQUEID=CIXOCUKW|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=ModifiedDate|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=6|COLOR=8388608|READONLYSTATE=1|UNIQUEID=CYVLOLHC|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=ApprovedBy|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=7|COLOR=8388608|READONLYSTATE=1|UNIQUEID=UKLMMPSH|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=CheckedBy|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=8|COLOR=8388608|READONLYSTATE=1|UNIQUEID=LGBVFHBI|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=Author|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=9|COLOR=8388608|READONLYSTATE=1|UNIQUEID=NNMPOPVS|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=CompanyName|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=10|COLOR=8388608|READONLYSTATE=1|UNIQUEID=ROXAGALI|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=DrawnBy|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=11|COLOR=8388608|READONLYSTATE=1|UNIQUEID=GSEQEJEE|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=Engineer|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=12|COLOR=8388608|READONLYSTATE=1|UNIQUEID=NMEAIFPG|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=Organization|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=13|COLOR=8388608|READONLYSTATE=1|UNIQUEID=CHTRTWQS|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=Address1|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=14|COLOR=8388608|READONLYSTATE=1|UNIQUEID=SLYDDXDR|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=Address2|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=15|COLOR=8388608|READONLYSTATE=1|UNIQUEID=JNHWHKQI|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=Address3|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=16|COLOR=8388608|READONLYSTATE=1|UNIQUEID=MIQKOJUC|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=Address4|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=17|COLOR=8388608|READONLYSTATE=1|UNIQUEID=TBHPRINX|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=Title|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=18|COLOR=8388608|READONLYSTATE=1|UNIQUEID=JRIVAVFH|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=DocumentNumber|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=19|COLOR=8388608|READONLYSTATE=1|UNIQUEID=SJJFVEJY|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=Revision|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=20|COLOR=8388608|READONLYSTATE=1|UNIQUEID=TPPALWNV|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=SheetNumber|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=21|COLOR=8388608|READONLYSTATE=1|UNIQUEID=IXCDWQOY|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=SheetTotal|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=22|COLOR=8388608|READONLYSTATE=1|UNIQUEID=WLJMRBEM|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=Rule|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=23|COLOR=8388608|READONLYSTATE=1|UNIQUEID=SGMPJKTU|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=ImagePath|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=24|COLOR=8388608|READONLYSTATE=1|UNIQUEID=CDHEMVMP|FONTID=1</span></span><br><span class="line"><span class="string">|RECORD=41|ISHIDDEN=T|NAME=ProjectName|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=25|COLOR=8388608|READONLYSTATE=1|UNIQUEID=FMWVHCEF|FONTID=1</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    Component_overname =<span class="built_in">input</span>(<span class="string">&quot;输入元件标号(eg:U)：&quot;</span>)</span><br><span class="line">    Component_name = <span class="built_in">input</span>(<span class="string">&quot;输入设元件名称(eg:3PIN)：&quot;</span>)</span><br><span class="line">    Component_pin = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入元件引脚数量(eg:30)：&quot;</span>))</span><br><span class="line">    Component_size = <span class="built_in">input</span>(<span class="string">&quot;输入元件宽度(eg:5)：&quot;</span>)</span><br><span class="line">    Component_rightpin = <span class="built_in">input</span>(<span class="string">&quot;是否使用右侧引脚(y/n)：&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> Component_size == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        Component_size = <span class="number">5</span></span><br><span class="line">    <span class="keyword">if</span> Component_rightpin == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        Component_rightpin = <span class="string">&#x27;y&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> Component_rightpin == <span class="string">&quot;y&quot;</span> <span class="keyword">or</span> Component_rightpin == <span class="string">&quot;Y&quot;</span>:</span><br><span class="line">        Component_rightpin = <span class="string">&quot;y&quot;</span></span><br><span class="line">        Component_pintype=<span class="built_in">input</span>(<span class="string">&quot;选择放置类型И/凵/Z(输1为И，2为凵，3为Z)：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> Component_pintype != <span class="string">&quot;1&quot;</span> <span class="keyword">and</span> Component_pintype != <span class="string">&quot;2&quot;</span> <span class="keyword">and</span> Component_pintype != <span class="string">&quot;3&quot;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;输入错误，请重新输入&quot;</span>)</span><br><span class="line">            Component_pintype = <span class="built_in">input</span>(<span class="string">&quot;选择放置类型И/凵(输1为И，2为凵)：&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> Component_pin &gt;= <span class="number">35</span>:</span><br><span class="line">        Constants = <span class="number">930</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        Constants = <span class="number">450</span></span><br><span class="line">    x1 = Constants-<span class="built_in">int</span>(Component_size)*<span class="number">10</span></span><br><span class="line">    <span class="keyword">if</span> Component_rightpin == <span class="string">&quot;y&quot;</span> :</span><br><span class="line">        y = Constants+Component_pin*<span class="number">5</span>+<span class="number">10</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        y = Constants+Component_pin*<span class="number">10</span>+<span class="number">10</span></span><br><span class="line">    <span class="comment">#print(x1)</span></span><br><span class="line">    <span class="comment">#print(y)</span></span><br><span class="line">    body1 = <span class="string">&#x27;|RECORD=1|PARTIDLOCKED=T|COLOR=128|SOURCELIBRARYNAME=thisprogrambythun888.SchLib|OWNERPARTID=-1|DISPLAYMODECOUNT=1|INDEXINSHEET=26|DESIGNITEMID=&#x27;</span>+<span class="built_in">str</span>(Component_name)+<span class="string">&#x27;|PARTCOUNT=2|LIBREFERENCE=&#x27;</span>+<span class="built_in">str</span>(Component_name)+<span class="string">&#x27;|LIBRARYPATH=*|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(x1)+<span class="string">&#x27;|AREACOLOR=11599871|TARGETFILENAME=*|CURRENTPARTID=1|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|UNIQUEID=&#x27;</span>+<span class="built_in">str</span>(uniqueid())+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    body2 =<span class="string">&#x27;|RECORD=14|ISNOTACCESIBLE=T|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|CORNER.Y=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|ISSOLID=T|OWNERPARTID=1|OWNERINDEX=27|CORNER.X=&#x27;</span>+<span class="built_in">str</span>(x1)+<span class="string">&#x27;|COLOR=128|AREACOLOR=11599871|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(y)+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    body3 =<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(Component_pin):</span><br><span class="line">        pin_num = i+<span class="number">1</span></span><br><span class="line">        pin_name = <span class="built_in">input</span>(<span class="string">&quot;输入第&quot;</span>+<span class="built_in">str</span>(pin_num)+<span class="string">&quot;个pin的名称(eg:TX)：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> pin_name ==<span class="string">&quot;&quot;</span>:</span><br><span class="line">            pin_name = pin_num</span><br><span class="line">        pin_y = y-pin_num*<span class="number">10</span></span><br><span class="line">        index = i*<span class="number">2</span>+<span class="number">27</span></span><br><span class="line">        <span class="keyword">if</span> Component_rightpin == <span class="string">&quot;y&quot;</span>:</span><br><span class="line">            <span class="keyword">if</span> Component_pintype ==<span class="string">&quot;1&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span> pin_num&lt;= Component_pin/<span class="number">2</span>:</span><br><span class="line">                    body3 = body3+<span class="string">&#x27;|DESIGNATOR=&#x27;</span>+<span class="built_in">str</span>(pin_num)+<span class="string">&#x27;|RECORD=2|NAME=&#x27;</span>+<span class="built_in">str</span>(pin_name)+<span class="string">&#x27;|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(x1)+<span class="string">&#x27;|PINLENGTH=20|OWNERPARTID=1|PINCONGLOMERATE=58|ELECTRICAL=4|OWNERINDEX=27|FORMALTYPE=1|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                    body3 = body3+<span class="string">&#x27;|ISHIDDEN=T|RECORD=41|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|NAME=PinUniqueId|OWNERPARTID=-1|OWNERINDEX=&#x27;</span>+<span class="built_in">str</span>(index)+<span class="string">&#x27;|TEXT=&#x27;</span>+<span class="built_in">str</span>(uniqueid())+<span class="string">&#x27;|COLOR=8388608|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;|FONTID=1\n&#x27;</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    pin_y = delete_extra_zero(pin_y+Component_pin/<span class="number">2</span>*<span class="number">10</span>)</span><br><span class="line">                    <span class="comment">#print(pin_y)</span></span><br><span class="line">                    body3 = body3+<span class="string">&#x27;|DESIGNATOR=&#x27;</span>+<span class="built_in">str</span>(pin_num)+<span class="string">&#x27;|RECORD=2|NAME=&#x27;</span>+<span class="built_in">str</span>(pin_name)+<span class="string">&#x27;|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|PINLENGTH=20|OWNERPARTID=1|PINCONGLOMERATE=56|ELECTRICAL=4|OWNERINDEX=27|FORMALTYPE=1|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                    body3 = body3+<span class="string">&#x27;|ISHIDDEN=T|RECORD=41|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|NAME=PinUniqueId|OWNERPARTID=-1|OWNERINDEX=&#x27;</span>+<span class="built_in">str</span>(index)+<span class="string">&#x27;|TEXT=&#x27;</span>+<span class="built_in">str</span>(uniqueid())+<span class="string">&#x27;|COLOR=8388608|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;|FONTID=1\n&#x27;</span>                </span><br><span class="line">            <span class="keyword">elif</span> Component_pintype ==<span class="string">&quot;2&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span> pin_num&lt;= Component_pin/<span class="number">2</span>:</span><br><span class="line">                    body3 = body3+<span class="string">&#x27;|DESIGNATOR=&#x27;</span>+<span class="built_in">str</span>(pin_num)+<span class="string">&#x27;|RECORD=2|NAME=&#x27;</span>+<span class="built_in">str</span>(pin_name)+<span class="string">&#x27;|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(x1)+<span class="string">&#x27;|PINLENGTH=20|OWNERPARTID=1|PINCONGLOMERATE=58|ELECTRICAL=4|OWNERINDEX=27|FORMALTYPE=1|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                    body3 = body3+<span class="string">&#x27;|ISHIDDEN=T|RECORD=41|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|NAME=PinUniqueId|OWNERPARTID=-1|OWNERINDEX=&#x27;</span>+<span class="built_in">str</span>(index)+<span class="string">&#x27;|TEXT=&#x27;</span>+<span class="built_in">str</span>(uniqueid())+<span class="string">&#x27;|COLOR=8388608|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;|FONTID=1\n&#x27;</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    pin_y = delete_extra_zero(y-Component_pin/<span class="number">2</span>*<span class="number">10</span>+(pin_num-Component_pin/<span class="number">2</span>-<span class="number">1</span>)*<span class="number">10</span>)</span><br><span class="line">                    <span class="comment">#print(pin_y)</span></span><br><span class="line">                    body3 = body3+<span class="string">&#x27;|DESIGNATOR=&#x27;</span>+<span class="built_in">str</span>(pin_num)+<span class="string">&#x27;|RECORD=2|NAME=&#x27;</span>+<span class="built_in">str</span>(pin_name)+<span class="string">&#x27;|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|PINLENGTH=20|OWNERPARTID=1|PINCONGLOMERATE=56|ELECTRICAL=4|OWNERINDEX=27|FORMALTYPE=1|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                    body3 = body3+<span class="string">&#x27;|ISHIDDEN=T|RECORD=41|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|NAME=PinUniqueId|OWNERPARTID=-1|OWNERINDEX=&#x27;</span>+<span class="built_in">str</span>(index)+<span class="string">&#x27;|TEXT=&#x27;</span>+<span class="built_in">str</span>(uniqueid())+<span class="string">&#x27;|COLOR=8388608|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;|FONTID=1\n&#x27;</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">elif</span> Component_pintype ==<span class="string">&quot;3&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span> (pin_num &amp; <span class="number">1</span>) == <span class="number">0</span>: </span><br><span class="line">                    pin_y = y-pin_num*<span class="number">5</span> <span class="comment">#/2*10</span></span><br><span class="line">                    body3 = body3+<span class="string">&#x27;|DESIGNATOR=&#x27;</span>+<span class="built_in">str</span>(pin_num)+<span class="string">&#x27;|RECORD=2|NAME=&#x27;</span>+<span class="built_in">str</span>(pin_name)+<span class="string">&#x27;|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|PINLENGTH=20|OWNERPARTID=1|PINCONGLOMERATE=56|ELECTRICAL=4|OWNERINDEX=27|FORMALTYPE=1|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                    body3 = body3+<span class="string">&#x27;|ISHIDDEN=T|RECORD=41|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(x1)+<span class="string">&#x27;|NAME=PinUniqueId|OWNERPARTID=-1|OWNERINDEX=&#x27;</span>+<span class="built_in">str</span>(index)+<span class="string">&#x27;|TEXT=&#x27;</span>+<span class="built_in">str</span>(uniqueid())+<span class="string">&#x27;|COLOR=8388608|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;|FONTID=1\n&#x27;</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    pin_y = y-(pin_num+<span class="number">1</span>)*<span class="number">5</span> <span class="comment">#/2*10</span></span><br><span class="line">                    body3 = body3+<span class="string">&#x27;|DESIGNATOR=&#x27;</span>+<span class="built_in">str</span>(pin_num)+<span class="string">&#x27;|RECORD=2|NAME=&#x27;</span>+<span class="built_in">str</span>(pin_name)+<span class="string">&#x27;|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(x1)+<span class="string">&#x27;|PINLENGTH=20|OWNERPARTID=1|PINCONGLOMERATE=58|ELECTRICAL=4|OWNERINDEX=27|FORMALTYPE=1|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                    body3 = body3+<span class="string">&#x27;|ISHIDDEN=T|RECORD=41|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(x1)+<span class="string">&#x27;|NAME=PinUniqueId|OWNERPARTID=-1|OWNERINDEX=&#x27;</span>+<span class="built_in">str</span>(index)+<span class="string">&#x27;|TEXT=&#x27;</span>+<span class="built_in">str</span>(uniqueid())+<span class="string">&#x27;|COLOR=8388608|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;|FONTID=1\n&#x27;</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            body3 = body3+<span class="string">&#x27;|DESIGNATOR=&#x27;</span>+<span class="built_in">str</span>(pin_num)+<span class="string">&#x27;|RECORD=2|NAME=&#x27;</span>+<span class="built_in">str</span>(pin_name)+<span class="string">&#x27;|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(x1)+<span class="string">&#x27;|PINLENGTH=20|OWNERPARTID=1|PINCONGLOMERATE=58|ELECTRICAL=4|OWNERINDEX=27|FORMALTYPE=1|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">            body3 = body3+<span class="string">&#x27;|ISHIDDEN=T|RECORD=41|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(x1)+<span class="string">&#x27;|NAME=PinUniqueId|OWNERPARTID=-1|OWNERINDEX=&#x27;</span>+<span class="built_in">str</span>(index)+<span class="string">&#x27;|TEXT=&#x27;</span>+<span class="built_in">str</span>(uniqueid())+<span class="string">&#x27;|COLOR=8388608|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(pin_y)+<span class="string">&#x27;|FONTID=1\n&#x27;</span></span><br><span class="line">        head1 = <span class="string">&#x27;|HEADER=Protel for Windows - Schematic Capture Ascii File Version 5.0|WEIGHT=&#x27;</span>+<span class="built_in">str</span>(index+<span class="number">10</span>)+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    body4=<span class="string">&#x27;|RECORD=34|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|NAME=Designator|TEXT=&#x27;</span>+<span class="built_in">str</span>(Component_overname)+<span class="string">&#x27;|OWNERINDEX=27|OWNERPARTID=-1|COLOR=8388608|INDEXINSHEET=-1|READONLYSTATE=1|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|FONTID=1\n&#x27;</span></span><br><span class="line">    body5 = <span class="string">&#x27;|RECORD=41|LOCATION.X=&#x27;</span>+<span class="built_in">str</span>(Constants)+<span class="string">&#x27;|NAME=Comment|TEXT=&#x27;</span>+<span class="built_in">str</span>(Component_name)+<span class="string">&#x27;|OWNERINDEX=27|OWNERPARTID=-1|COLOR=8388608|INDEXINSHEET=-1|UNIQUEID=&#x27;</span>+<span class="built_in">str</span>(uniqueid())+<span class="string">&#x27;|LOCATION.Y=&#x27;</span>+<span class="built_in">str</span>(Constants-<span class="number">10</span>)+<span class="string">&#x27;|FONTID=1\n&#x27;</span></span><br><span class="line">    body6= <span class="string">&#x27;&#x27;&#x27;|OWNERINDEX=27|RECORD=44</span></span><br><span class="line"><span class="string">|HEADER=Icon storage</span></span><br><span class="line"><span class="string">|HEADER=Protel for Windows - Schematic Capture Ascii File Version 5.0</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    allofthem = head1+head2+body1+body2+body3+body4+body5+body6</span><br><span class="line">    filename = Component_name+<span class="string">&quot;.SchDoc&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(allofthem)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;生成成功，文件名为&quot;</span>+filename)</span><br><span class="line">    os.system(<span class="string">&quot;start &quot;</span>+filename)</span><br><span class="line">    <span class="keyword">return</span> filename</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">uniqueid</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;生成8位随机大写字母=&gt;uniqueid!&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(random.sample(string.ascii_uppercase, <span class="number">8</span>))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete_extra_zero</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;删除小数点后多余的0&quot;&quot;&quot;</span></span><br><span class="line">    n = <span class="string">&#x27;&#123;:g&#125;&#x27;</span>.<span class="built_in">format</span>(n)</span><br><span class="line">    n = <span class="built_in">float</span>(n) <span class="keyword">if</span> <span class="string">&#x27;.&#x27;</span> <span class="keyword">in</span> n <span class="keyword">else</span> <span class="built_in">int</span>(n)</span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    os.system(<span class="string">&quot;start &quot;</span>+main())</span><br><span class="line">    sys.exit()</span><br></pre></td></tr></table></figure><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/thun888/altium-helper"><img src="https://github-readme-stats.xaoxuu.com/api/pin/?username=thun888&repo=altium-helper&theme=dark&show_owner=true"/></a></div><p>再生成原理图库复制到自己的库就行了</p><p><img src="https://k.hzchu.top/2022/08/23/63043a58d9141.webp" alt="Snipaste_2022-07-17_09-13-24"></p><h3 id="小说明"><a href="#小说明" class="headerlink" title="小说明"></a>小说明</h3><h4 id="放置类型"><a href="#放置类型" class="headerlink" title="放置类型"></a>放置类型</h4><table><thead><tr><th>И</th><th>凵(常用)</th><th>Z</th></tr></thead><tbody><tr><td><img src="https://k.hzchu.top/2022/08/23/63043a2dd7177.webp" alt="Snipaste_2022-07-15_12-01-30"></td><td><img src="https://k.hzchu.top/2022/08/23/63043a72e7aa3.webp" alt="Snipaste_2022-07-15_12-02-37"></td><td><img src="https://k.hzchu.top/2022/08/23/63043a851122a.webp" alt="Snipaste_2022-07-15_12-03-26"></td></tr></tbody></table><h3 id="执行效果"><a href="#执行效果" class="headerlink" title="执行效果"></a>执行效果</h3><p><img src="https://k.hzchu.top/2022/08/22/6303717c45a8a.webp" alt="Snipaste_2022-07-14_19-18-29"></p><h3 id="值得注意的点"><a href="#值得注意的点" class="headerlink" title="值得注意的点"></a>值得注意的点</h3><p>1. 在“模板”的头部中，<code>WEIGHT</code>代表着剩余的部件量，如果设置的太小当AD读取完后就不会往下读了，就会导致缺这缺那</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|<span class="variable constant_">HEADER</span>=<span class="title class_">Protel</span> <span class="keyword">for</span> <span class="title class_">Windows</span> - <span class="title class_">Schematic</span> <span class="title class_">Capture</span> <span class="title class_">Ascii</span> <span class="title class_">File</span> <span class="title class_">Version</span> <span class="number">5.0</span>|<span class="variable constant_">WEIGHT</span>=<span class="number">38</span></span><br></pre></td></tr></table></figure><p>2.同样在“模板”的头部中，第二行中包括了纸张大小等的定义，如果遇到🐞可以适当修改</p><p><img src="https://k.hzchu.top/2022/08/23/63043a9b1224c.webp" alt="image"></p><p>3.引脚方向依据<code>PINCONGLOMERATE</code>的值，连接方向向右时为56，从此每逆时针旋转90°加一</p><p><img src="https://k.hzchu.top/2022/08/23/63043af131a4c.webp" alt="Snipaste_2022-07-14_08-55-25"></p><p>4.xy坐标必须为不带小数的整数，不然它立马扑街给你看<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/cdn-x/emoji/aru-l/160.gif"/></span></p>]]></content>
    
    
    <summary type="html">直接一套组合拳</summary>
    
    
    
    
    <category term="python" scheme="https://blog.hzchu.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>2021旧年总结</title>
    <link href="https://blog.hzchu.top/2022/2021%E6%97%A7%E5%B9%B4%E6%80%BB%E7%BB%93/"/>
    <id>https://blog.hzchu.top/2022/2021%E6%97%A7%E5%B9%B4%E6%80%BB%E7%BB%93/</id>
    <published>2022-01-31T21:37:15.000Z</published>
    <updated>2022-02-01T12:54:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2021-has-ended-but-2022-begins"><a href="#2021-has-ended-but-2022-begins" class="headerlink" title="2021 has ended but 2022 begins"></a>2021 has ended but 2022 begins</h2><p>新年伊始，又是新的一年。做个年终总结吧。<del>证明我还活着</del></p><p>先看看曾经定的Todo list</p><ul><li><p><input checked="" disabled="" type="checkbox"> 进到实验班。</p></li><li><p><input checked="" disabled="" type="checkbox"> 设立导航</p></li><li><p><input disabled="" type="checkbox"> 被百度收录。看淡了，我把站点地图怼它脸上，写个脚本每4分钟提交一次，还没收录，<del>百度是神马东西</del></p></li><li><p><input checked="" disabled="" type="checkbox"> 写个基于cfw的工具。写了不少</p></li><li><p><input checked="" disabled="" type="checkbox"> Golang入门。大概吧</p></li></ul><p>过去的一年，好像时间变快了不少，不知不觉就过去了。6月份往前都在备考生地，放个暑假回来后又是各种考试，<del>两周一休算了算回家的次数好像还不到10次</del></p><p>学会了很多，也见证了不少（省略数千字）</p><blockquote><p>定个目标</p></blockquote><ul><li><p><input disabled="" type="checkbox"> 考上一中!   （和学校有约~</p></li><li><p><input checked="" disabled="" type="checkbox"> 最好再进实验班</p></li></ul><h4 id="附"><a href="#附" class="headerlink" title="附"></a>附</h4><p>因为没啥时间，也没有写到什么实质上的内容，不过也有2200+的小伙伴来访~<br><img src="https://raw.hzchu.top/thun888/asstes/master/img/202202011232766.png" alt="Snipaste_2022-01-31_19-35-02"><br><img src="https://raw.hzchu.top/thun888/asstes/master/img/202202011231533.png" alt="Snipaste_2022-01-31_19-35-28"><br><img src="https://raw.hzchu.top/thun888/asstes/master/img/202202011232299.png" alt="大家梯子地区真广（划掉）"></p><hr><p>祝各位虎年大吉，虎虎生威<img src="https://raw.hzchu.top/thun888/asstes/master/img/202202011237099.jpg" alt="e0752da35b9e7a4b089f962442192898"></p>]]></content>
    
    
    <summary type="html">2021 has ended but 2022 begins</summary>
    
    
    
    
    <category term="yearreport" scheme="https://blog.hzchu.top/tags/yearreport/"/>
    
  </entry>
  
  <entry>
    <title>把玩intel的开发服务器</title>
    <link href="https://blog.hzchu.top/2021/%E6%8A%8A%E7%8E%A9intel%E7%9A%84%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://blog.hzchu.top/2021/%E6%8A%8A%E7%8E%A9intel%E7%9A%84%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2021-08-08T13:59:03.000Z</published>
    <updated>2021-08-08T13:59:03.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h4><p>打开<a href="https://d.hzchu.top/3">Intel® DevCloud</a>，有账号登录，没账号注册，</p><p><img src="https://k.hzchu.top/2022/08/18/62fddfdb4a480.png" alt="image-20210808145043855"></p><p>拉下来找到<code>Intel® DevCloud for the Edge</code>点进去</p><p><img src="https://k.hzchu.top/2022/08/18/62fddff130630.png" alt="62fddff130630"></p><blockquote><p>注意邮箱</p></blockquote><p><img src="https://k.hzchu.top/2022/08/18/62fde00c0c138.png" alt="image-20210808145254426"></p><p><img src="https://k.hzchu.top/2022/08/18/62fde01dcd877.png" alt="image-20210808145347119"></p><p><img src="https://k.hzchu.top/2022/08/18/62fde02c21ac7.png" alt="image-20210808145438494"></p><p><img src="https://k.hzchu.top/2022/08/18/62fde03a076a0.png" alt="image-20210808145505189"></p><p><img src="https://k.hzchu.top/2022/08/18/62fde04eb6364.png" alt="image-20210808145523053"></p><p>在看到<code>Server not running</code>这个话前基本都500错误或者点了没反应，等半个小时就好(也可以切换网络环境等)</p><div class="tag-plugin swiper fancybox" id="swiper-api" width="25"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="https://k.hzchu.top/2022/08/18/62fde05e2fbdc.png" alt="Snipaste_2021-08-07_17-49-13"></div><div class="swiper-slide"><img no-lazy src="https://k.hzchu.top/2022/08/18/62fde0a76a277.png" alt="Snipaste_2021-08-07_18-35-16"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><p><img src="https://k.hzchu.top/2022/08/18/62fde0b9b553c.png" alt="image-20210808145540103"></p><p>打开终端</p><p><img src="https://k.hzchu.top/2022/08/18/62fde0c967b48.png" alt="Snipaste_2021-08-07_18-11-33"></p><p>然后就可以<del>为所欲为了</del><u>没有root</u>的啦<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://jsd.hzchu.top/gh/cdn-x/emoji/aru-l/11.gif"/></span></p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>80核，256g( ‵▽′)ψ，（共用）</p><p><img src="https://k.hzchu.top/2022/08/18/62fde0d94e6ff.png" alt="Snipaste_2021-08-07_18-21-17"></p><p><img src="https://k.hzchu.top/2022/08/18/62fde0e87a505.png" alt="Snipaste_2021-08-07_18-28-07"></p><p>proot容器内测试</p><p><img src="https://k.hzchu.top/2022/08/18/62fde0f84f77e.png" alt="image-20210808150809533"></p><h4 id="网速"><a href="#网速" class="headerlink" title="网速"></a>网速</h4><p>Asia</p><p><img src="https://k.hzchu.top/2022/08/18/62fde10b1cf7b.png" alt="image-20210808151147629"></p><p>Another</p><p><img src="https://k.hzchu.top/2022/08/18/62fde11867eea.png" alt="image-20210808151132419"></p><p><img src="https://k.hzchu.top/2022/08/18/62fde16b1e5df.png" alt="image-20210808151201095"></p><h4 id="伪获取root权限"><a href="#伪获取root权限" class="headerlink" title="伪获取root权限"></a>伪获取root权限</h4><p>在终端内复制粘贴以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://share.hzchu.top/%E8%BD%AF%E4%BB%B6/root.sh</span><br><span class="line"><span class="built_in">chmod</span> 777 root.sh</span><br><span class="line">./root.sh</span><br></pre></td></tr></table></figure><p><img src="https://k.hzchu.top/2022/08/18/62fde19fc8cae.png" alt="image-20210808140827984"></p><p>当$变为#就ok</p><p>不过wget,curl这些都没有，所以还要自行安装</p><p>PS:可以开新一个终端下载一些必要依赖包（deb）再离线安装</p><blockquote><p><a href="https://packages.debian.org/">https://packages.debian.org</a></p></blockquote><p><img src="https://k.hzchu.top/2022/08/18/62fde1ab782d3.png" alt="image-20210808143134070"></p><blockquote><p>该服务器使用时间只有10小时，但10小时后还可以再来一次<span class="tag-plugin emoji"></span></p></blockquote>]]></content>
    
    
    <summary type="html">如今，人们白嫖起了牙膏厂~</summary>
    
    
    
    
    <category term="Intel" scheme="https://blog.hzchu.top/tags/Intel/"/>
    
  </entry>
  
  <entry>
    <title>解决Cloudflare Wrangler无法获取授权</title>
    <link href="https://blog.hzchu.top/2021/%E8%A7%A3%E5%86%B3Cloudflare-Wrangler%E6%97%A0%E6%B3%95%E8%8E%B7%E5%8F%96%E6%8E%88%E6%9D%83/"/>
    <id>https://blog.hzchu.top/2021/%E8%A7%A3%E5%86%B3Cloudflare-Wrangler%E6%97%A0%E6%B3%95%E8%8E%B7%E5%8F%96%E6%8E%88%E6%9D%83/</id>
    <published>2021-07-29T18:18:05.000Z</published>
    <updated>2021-07-29T18:18:05.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>昨天，因为要本地提交点东西到worker就装了Wrangler，没想到啊，它就这么卡着不动了（在waiting for api token那里我等了半个世纪）<img src="https://k.hzchu.top/2022/08/18/62fde84075a94.png" alt="Snipaste_2021-07-26_20-36-47"></p><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><ul><li><p>在刚刚的授权页面点击<code>API令牌</code></p><p><img src="https://k.hzchu.top/2022/08/18/62fde825cdbed.png" alt="llll"></p></li><li><p>点<code>投放</code>–<code>copy</code></p><p><img src="https://k.hzchu.top/2022/08/18/62fde5fd96553.png" alt="Snipaste_2021-07-26_20-38-00"></p><p><img src="https://k.hzchu.top/2022/08/18/62fde60f90dc8.png" alt="Snipaste_2021-07-26_20-38-15"></p></li><li><p>输入<code>wrangler config</code>,粘贴刚刚copy的token</p></li></ul><p><img src="https://k.hzchu.top/2022/08/18/62fde61b32b17.png" alt="Snipaste_2021-07-26_20-37-15"></p><ul><li><p>回车后看到sucess就好了</p><p><img src="https://k.hzchu.top/2022/08/18/62fde62d8262c.png" alt="Snipaste_2021-07-26_20-38-30"></p></li></ul><h4 id="后"><a href="#后" class="headerlink" title="后"></a>后</h4><p>写的时侯为了截图换了个账号，然后它能用了~~~~</p><p><img src="https://k.hzchu.top/2022/08/18/62fde6529a01d.png" alt="Snipaste_2021-07-29_18-26-37"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;昨天，因为要本地提交点东西到worker就装了Wrangler，没想到啊，它就这么卡着不动了（在waiting for api token那</summary>
      
    
    
    
    
    <category term="Clouddlare" scheme="https://blog.hzchu.top/tags/Clouddlare/"/>
    
  </entry>
  
  <entry>
    <title>解决VSCode安装Go扩展报错</title>
    <link href="https://blog.hzchu.top/2021/%E8%A7%A3%E5%86%B3VSCode%E5%AE%89%E8%A3%85Go%E6%89%A9%E5%B1%95%E6%8A%A5%E9%94%99/"/>
    <id>https://blog.hzchu.top/2021/%E8%A7%A3%E5%86%B3VSCode%E5%AE%89%E8%A3%85Go%E6%89%A9%E5%B1%95%E6%8A%A5%E9%94%99/</id>
    <published>2021-07-26T18:37:56.000Z</published>
    <updated>2021-07-26T18:37:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>不多哔哔，直入主题</p><p>先转到新建环境变量这里（图示为win11</p><p><img src="https://k.hzchu.top/2022/08/18/62fde67a827da.png"></p><p>新建2个（如图）</p><p><img src="https://k.hzchu.top/2022/08/18/62fde685a8fe8.png" alt="image-20210726184350014"></p><table><thead><tr><th>变量名</th><th>变量值</th></tr></thead><tbody><tr><td>GOPROXY</td><td><a href="https://goproxy.io/">https://goproxy.io</a></td></tr><tr><td>GO111MODULE</td><td>on</td></tr></tbody></table><p>点确定后<strong>重启</strong>再进VSCode里选择<code>install all</code>安装就好</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;不多哔哔，直入主题&lt;/p&gt;
&lt;p&gt;先转到新建环境变量这里（图示为win11&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://k.hzchu.top/2022/08/18/62fde67a827da.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;新建2个（如图）&lt;/p&gt;
&lt;p&gt;&lt;img src</summary>
      
    
    
    
    
    <category term="Go" scheme="https://blog.hzchu.top/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>为Stellar主题添加HPP的&quot;说说&quot;功能</title>
    <link href="https://blog.hzchu.top/2021/%E4%B8%BAStellar%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0HPP%E8%AF%B4%E8%AF%B4%E5%8A%9F%E8%83%BD/"/>
    <id>https://blog.hzchu.top/2021/%E4%B8%BAStellar%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0HPP%E8%AF%B4%E8%AF%B4%E5%8A%9F%E8%83%BD/</id>
    <published>2021-07-15T20:09:32.000Z</published>
    <updated>2021-07-15T20:09:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>HPP,即<code>HexoPlusPlus</code>,其中自带了”说说”功能，但我正在用的Stellar不支持，那就自己加吧</p><blockquote><p>与某个页面合并了</p></blockquote><h4 id="选址"><a href="#选址" class="headerlink" title="选址"></a>选址</h4><p>纵观全局，我看到了左侧栏的”文章”，加了进去，却成了这个鸟样子（橙框为我手动框出来的）</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715185701431.png" alt="image-20210715185701431"></p><p>再品，放这里不就好了😎</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715185830748.png" alt="image-20210715185830748"></p><h4 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h4><p>因为主题在不同语言时有不同显示，所以先从语言文件下手</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715190020030.png" alt="image-20210715190020030"></p><p>找到”归档”对应的是<code>archives</code>，再用<code>everything</code>在主题文件中搜索</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715190202563.png" alt="image-20210715190202563"></p><p>前4个是语言文件，第5个是生成归档页面的，那第6个就有很大嫌疑了，打开看看</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715190356447.png" alt="image-20210715190356447"></p><p>啊没错，就是它，而且类名也对的上（当初直接查类名更快啊＞﹏＜）</p><p>格式就像这样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (site.posts &amp;&amp; site.posts.length &gt; 0) &#123; %&gt;</span><br><span class="line">  &lt;% if (is_archive()) &#123; %&gt;</span><br><span class="line">    &lt;a class=&#x27;active&#x27; href=&#x27;&lt;%- url_for(config.archive_dir) %&gt;&#x27;&gt;&lt;%- __(&#x27;btn.archives&#x27;) %&gt;&lt;/a&gt;</span><br><span class="line">  &lt;% &#125; else &#123; %&gt;</span><br><span class="line">    &lt;a href=&#x27;&lt;%- url_for(config.archive_dir) %&gt;&#x27;&gt;&lt;%- __(&#x27;btn.archives&#x27;) %&gt;&lt;/a&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>添加上去后把所有<code>archives</code>给替换成了<code>htalk</code>,但是一运行那报错和放鞭炮没什么不同(。﹏。)</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715203736270.png" alt="image-20210715203736270"></p><p>从代码上说，这句是判断当前是什么页面的，我翻了亿下没找到它的定义在哪个文件，就先改回posts（只是影响了按钮底色，问题不大(❁´◡`❁)）</p><p>在<code>\themes\stellar\layout</code>下新建<code>htalk.ejs</code>,从隔壁<code>tag.ejs</code>借鉴点代码过来，除了site.tags.length其他都改为htalk</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715204525167.png" alt="image-20210715204525167"></p><p>可以看出第11行到21行都是页面中可以显示出来的部分~~（不太严谨的样子~~</p><p>把HPP文档中的”引入部分”插到里面</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715205153957.png" alt="image-20210715205153957"></p><p>¯_(ツ)_&#x2F;¯</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715204930656.png" alt="image-20210715204930656"></p><p>加个题目</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&#x27;list-title h3&#x27;</span>&gt;</span>说说（瞎扯）<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715205203844.png" alt="image-20210715205203844"></p><hr><p>承 接 前 文，看着”说说”按钮选中时没有底色还是有点不爽，回到前面</p><p>把判定部分<del>都删了</del>删到只剩下一个基础的判定（虽然没用但删了就报错），给它加上<code>id=&quot;nav-bb&quot;</code>的属性</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715210320086.png" alt="image-20210715210320086"></p><p>再在htalk.ejs中加上</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;nav-bb&#x27;</span>).<span class="property">className</span>=<span class="string">&#x27;active&#x27;</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>( •̀ ω •́ )✧</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715205705037.png" alt="image-20210715205705037"></p><h4 id="最终代码"><a href="#最终代码" class="headerlink" title="最终代码"></a>最终代码</h4><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210715205828548.png" alt="image-20210715205828548"></p><p>!!!  warning<br>1.记得使用<code>hexo new page htalk</code>并在<code>layout</code>中改为<code>htalk</code><br><br>2.在博客根目录下的<code>_config.yml</code>中要指明<code>htalk_dir: htalk</code></p>]]></content>
    
    
    <summary type="html">HPP,即`HexoPlusPlus`,其中自带了&quot;说说&quot;功能，但我正在用的Stellar不支持，那就自己加吧</summary>
    
    
    
    
    <category term="Blog" scheme="https://blog.hzchu.top/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>优化Oneindex的nexmoe主题的加载速度</title>
    <link href="https://blog.hzchu.top/2021/%E4%BC%98%E5%8C%96Oneindex%E7%9A%84nexmoe%E4%B8%BB%E9%A2%98%E7%9A%84%E5%8A%A0%E8%BD%BD%E9%80%9F%E5%BA%A6/"/>
    <id>https://blog.hzchu.top/2021/%E4%BC%98%E5%8C%96Oneindex%E7%9A%84nexmoe%E4%B8%BB%E9%A2%98%E7%9A%84%E5%8A%A0%E8%BD%BD%E9%80%9F%E5%BA%A6/</id>
    <published>2021-06-10T14:37:59.000Z</published>
    <updated>2021-06-10T14:37:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>在一些带宽小的机子上部署Oneindex又用nexmoe主题，就算套了cdn也慢（深有体会）</p><p>在学校开来给同学下电影开了十几秒愣是没加载出来<img src="https://raw.hzchu.top/thun888/jian/master/coolapk_emotion_42_diaoxie.png" style="zoom:25%;" /></p><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p>定位到网址目录下的&#x2F;view&#x2F;nexmoe</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/20210610144611.png" alt="image-20210610144610288"></p><p>将框选的（第7行的第11行）</p><p>进行替换</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/20210610145355.png" alt="image-20210610145355484"></p><p>第7行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//npm.elemecdn.com/mdui@1.0.1/dist/css/mdui.min.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第11行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//raw.githubusercontent.com/thun888/tuku/master/img/mdui.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>like this</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/20210610145809.png" alt="image-20210610145809885"></p><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>修改前</p><img src="https://raw.hzchu.top/thun888/tuku/master/img/20210610150256.png" alt="image-20210610150255933" style="zoom:67%;" /><p>修改后</p><img src="https://raw.hzchu.top/thun888/tuku/master/img/20210610150015.png" alt="image-20210610150015253" style="zoom:67%;" />]]></content>
    
    
    <summary type="html">在一些带宽小的机子上部署Oneindex又用nexmoe主题，在学校开来给同学下电影开了十几秒愣是没加载出来</summary>
    
    
    
    
    <category term="oneindex" scheme="https://blog.hzchu.top/tags/oneindex/"/>
    
    <category term="web" scheme="https://blog.hzchu.top/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>高质量地从ico转为svg</title>
    <link href="https://blog.hzchu.top/2021/%E9%AB%98%E8%B4%A8%E9%87%8F%E5%9C%B0%E4%BB%8Eico%E8%BD%AC%E4%B8%BAsvg/"/>
    <id>https://blog.hzchu.top/2021/%E9%AB%98%E8%B4%A8%E9%87%8F%E5%9C%B0%E4%BB%8Eico%E8%BD%AC%E4%B8%BAsvg/</id>
    <published>2021-05-03T19:19:00.000Z</published>
    <updated>2021-05-03T19:19:00.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="How"><a href="#How" class="headerlink" title="How"></a>How</h5><p>先下载&amp;安装<a href="https://share.hzchu.top/api?path=/%E8%BD%AF%E4%BB%B6/CorelDRAW_X4_SP2_%E7%B2%BE%E7%AE%80%E5%A2%9E%E5%BC%BA%E7%89%88.exe&raw=true">CorelDRAW</a></p><p>打开ps将ico转为png</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/14dsf352gf.gif" alt="14dsf352gf"></p><p>导出后像这样</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/icon.png" alt="icon"></p><p>选择 文件—导入—（选择刚刚的图）</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/20210504155534.png"></p><p>放置在画纸后</p><p>右键—轮廓描慕—高质量图像（也可以选其他的,根据实际情况~）</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/20210504155749.png"></p><p>在这里你可以改变三个参数实现不同的效果</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/dg4df56hde4568.png"></p><p>点击确定后就能得到2个图像（原来的位图和生成的矢量图）</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/20210504160151.png"></p><p>把原图删掉后将画布调整为生成图大小（例如我这就是210*210）</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/da21desf4s568gre46g.png"></p><p>选择 文件—导出（保存为.svg)</p><img src="https://raw.hzchu.top/thun888/tuku/master/img/20210504161231.png" style="zoom:80%;" /><h5 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h5><p>要真想更好一点可以用这个为底，重绘一遍</p>]]></content>
    
    
    <summary type="html">使用CorelDRAW将图片转为矢量图</summary>
    
    
    
    
    <category term="网站" scheme="https://blog.hzchu.top/tags/%E7%BD%91%E7%AB%99/"/>
    
    <category term="转换" scheme="https://blog.hzchu.top/tags/%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>解决小米手机升级MIUI12.5后无法进入谷歌商店</title>
    <link href="https://blog.hzchu.top/2021/%E8%A7%A3%E5%86%B3%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA%E5%8D%87%E7%BA%A7MIUI12-5%E5%90%8E%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E8%B0%B7%E6%AD%8C%E5%95%86%E5%BA%97/"/>
    <id>https://blog.hzchu.top/2021/%E8%A7%A3%E5%86%B3%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA%E5%8D%87%E7%BA%A7MIUI12-5%E5%90%8E%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E8%B0%B7%E6%AD%8C%E5%95%86%E5%BA%97/</id>
    <published>2021-04-30T23:02:58.000Z</published>
    <updated>2021-04-30T23:02:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前，用着被抛弃的mi6，升级了12后并无异样，但用第三方包升到12.5后，欸，用不了了</p><span id="more"></span><div class="tag-plugin swiper fancybox" id="swiper-api" width="25"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="https://raw.hzchu.top/thun888/tuku/master/img/IMG_20210424_212057.jpg"></div><div class="swiper-slide"><img no-lazy src="https://raw.hzchu.top/thun888/tuku/master/img/Screenshot_2021-04-24-21-19-58-835_com.android.ve.jpg"></div><div class="swiper-slide"><img no-lazy src="https://raw.hzchu.top/thun888/tuku/master/img/Screenshot_2021-04-24-21-20-21-301_com.android.ve.jpg"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><p>（如图）</p><p>显然，是新版的“照明弹”引起的</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/dsfdsvdzsggdf.jpg"></p><p>搜索一下可以看到有好几个</p><p>把里面每一个权限选择了“空白通行证”的改为“始终允许”</p><img src="https://raw.hzchu.top/thun888/tuku/master/img/Screenshot_2021-04-30-23-12-52-256_com.miui.secur.jpg" style="zoom: 80%;" />]]></content>
    
    
    <summary type="html">&lt;p&gt;之前，用着被抛弃的mi6，升级了12后并无异样，但用第三方包升到12.5后，欸，用不了了&lt;/p&gt;</summary>
    
    
    
    
    <category term="MIUI" scheme="https://blog.hzchu.top/tags/MIUI/"/>
    
  </entry>
  
  <entry>
    <title>VM虚拟机安装甜糖及配置教程</title>
    <link href="https://blog.hzchu.top/2021/vm%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E7%94%9C%E7%B3%96%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
    <id>https://blog.hzchu.top/2021/vm%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E7%94%9C%E7%B3%96%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</id>
    <published>2021-02-07T10:05:21.000Z</published>
    <updated>2021-02-07T10:05:21.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="文章部分内容不再适用"><a href="#文章部分内容不再适用" class="headerlink" title="文章部分内容不再适用"></a>文章部分内容不再适用</h4><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>一开始我是在电脑上挂网心，但这玩意儿写入缓存不仅多（以至于写掉盘了），钱还给的少。而甜糖在恩山论坛上面的都是Linux下操作的，对我这docker小白很不友好，今天就总结一下最简单的方法</p><p><em>以下内容建议使用FinalShell操作</em></p><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ol><li><p>映像包（<a href="https://share.hzchu.top/ali/%E6%96%87%E4%BB%B6/ttnode/">500g&#x2F;100g</a>)(在我写的时候又有新版了<img src="https://raw.hzchu.top/thun888/jian/master/coolapk_emotion_58_dogeyuanliangta.png" style="zoom:25%;" />)</p></li><li><p>vmware</p></li></ol><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ol><li><p>安装vmware(废话)</p></li><li><p>解压压缩包后。点击后缀为vmx的文件导入</p></li></ol><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207111610777.png" alt="image-20210207111610777"></p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207111650865.png" alt="image-20210207111650865"></p><p>然后点击网络适配器一来生成新的MAC地址（避免用uid重复）</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207111823559.png" alt="image-20210207111823559"></p><p>点击开启虚拟机</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207111851540.png" alt="image-20210207111851540"></p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207112026798.png" alt="image-20210207112026798"></p><p>当然开起成功后就可以通过甜糖app绑定了</p><img src="https://raw.hzchu.top/thun888/tuku/master/img/Screenshot_2021-02-07-11-22-10-647_com.tt.turbo.jpg" alt="Screenshot_2021-02-07-11-22-10-647_com.tt.turbo" style="zoom:33%;" /><p>当然有时候如果你的网络环境比较复杂搜不到就要在ssh里面查看。</p><p>使用ssh连接(账号密码都是root)</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207112118813.png" alt="image-20210207112118813"></p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207112607312.png" alt="image-20210207112607312"></p><p>输入(进入容器)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it ttnode /bin/bash</span><br><span class="line">/usr/node/ttnode -p /mnts </span><br></pre></td></tr></table></figure><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207112818753.png" alt="image-20210207112818753"></p><p>用<a href="http://2v.dedecms.com/">二维码生成工具</a>，把uid生成二维码再用手机扫码绑定.</p><p>如果它显示未配置网络的话就继续看吧</p><script>new Artalk({el: '#ArtalkComments', // 元素选择placeholder: '来啊，快活啊 ( ゜- ゜)', // 占位符noComment: '快来成为第一个评论的人吧\~', // 无评论时显示serverUrl: 'https://artalk.hzchu.top/',readMore: { // 阅读更多配置pageSize: 15, // 每次请求获取评论数autoLoad: true // 滚动到底部自动加载}});</script><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tnlp </span><br></pre></td></tr></table></figure><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207121851667.png" alt="image-20210207121851667"></p><p>除计下出65432和22以外的三个端口后在路由器后台设置端口转发这里，以小米路由器为例</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207122326918.png" alt="image-20210207122326918"></p><p>等上十几二十分钟甜糖后台同步后即可。</p><p>这样甜糖就做好了，但是还有很多东西也可以搞</p><p>1.自动领取星愿</p><p>保持在容器内不要退出</p><p>输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install wget curl sudo -y</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dachui.co/ttnode/node2.sh &amp;&amp; sh node2.sh</span><br></pre></td></tr></table></figure><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207120438729.png" alt="image-20210207120438729"></p><p>输入no后回车(第2步输入y回车即可)</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207120714379.png" alt="image-20210207120714379"></p><p>这里面还有很多功能，但我用到的只是5，有需求的可以把都搞上(除了1.2<img src="https://raw.hzchu.top/thun888/jian/master/coolapk_emotion_58_dogeyuanliangta.png" style="zoom:25%;" />)</p><p>选择5后回车</p><p>输入手机号码</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207120856494.png" alt="image-20210207120856494"></p><p>输入验证码即可</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207121007656.png" alt="image-20210207121007656"></p><p>如果还要用到微信通知就继续</p><p>在server酱的官网用登录+微信关注后取得sckey填入</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207121247337.png" alt="image-20210207121247337"></p><p>成功以后</p><img src="https://raw.hzchu.top/thun888/tuku/master/img/Screenshot_2021-02-07-12-14-30-735_com.tencent.mm.jpg" alt="image-20210207121352264" style="zoom: 33%;" /><p>3.网速监控</p><p>虽然FinalShell自带网速监控，<img src="C:\\Users\\22383\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210207130000887.png" alt="image-20210207130000887" style="zoom: 67%;" />但也不总是每天都在电脑旁</p><p>输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apk add nload</span><br></pre></td></tr></table></figure><p>然后就可以通过nload eth0来监控了</p><img src="https://raw.hzchu.top/thun888/tuku/master/img/image-20210207130443674.png" alt="image-20210207130443674" style="zoom: 67%;" /><h4 id="Q-A"><a href="#Q-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h4><ol><li><p>Q:明明什么都设置好了，但就是获取不了IP。</p><p><img src="https://raw.hzchu.top/thun888/tuku/master/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-02-05%20123641.png" alt="屏幕截图 2021-02-05 123641"></p><p>A:(该问题常见于多网卡的情况)</p></li></ol><img src="https://raw.hzchu.top/thun888/tuku/master/img/ada.png"/><p>2.Q:为什么收不到验证码？</p><p>​    A:再来一次(如果你一天内已经错了14次的话，就明天再做吧)</p><p>3.Q:输指令报错 xxx not found</p><p>A:缺啥补啥，在容器外用apk add xxx ,容器内用apt install xxx</p><p>more….</p><h4 id="所参考资料"><a href="#所参考资料" class="headerlink" title="所参考资料"></a>所参考资料</h4><p><a href="https://d.hzchu.top/f">[2021-01-27]让软路由来赚钱ESXi&#x2F;X86上跑dock甜糖&#x2F;一键导入简单无脑，小白，懒人专属</a></p><p><a href="https://d.hzchu.top/g">【非op套娃】x86以ubuntu为底层跑docker甜糖服务</a></p><p><a href="https://d.hzchu.top/h">迄今为止最小的甜糖(ttnode)docker镜像</a></p><p><a href="https://d.hzchu.top/i">爱快虚拟机甜糖镜像及pve,esxi等虚拟机安装轻量化Linux详细安装甜糖教程</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;文章部分内容不再适用&quot;&gt;&lt;a href=&quot;#文章部分内容不再适用&quot; class=&quot;headerlink&quot; title=&quot;文章部分内容不再适用&quot;&gt;&lt;/a&gt;文章部分内容不再适用&lt;/h4&gt;&lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerli</summary>
      
    
    
    
    
    <category term="甜糖" scheme="https://blog.hzchu.top/tags/%E7%94%9C%E7%B3%96/"/>
    
  </entry>
  
</feed>
